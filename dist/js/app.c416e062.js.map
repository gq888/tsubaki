{"version":3,"file":"js/app.c416e062.js","mappings":"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","sources":["webpack://tsubaki-game-library/./src/utils/gameSettingsManager.js","webpack://tsubaki-game-library/./src/utils/cardUtils.js","webpack://tsubaki-game-library/./src/App.vue","webpack://tsubaki-game-library/./src/App.vue?7ccd","webpack://tsubaki-game-library/./src/components/sum.vue","webpack://tsubaki-game-library/./src/utils/help.js","webpack://tsubaki-game-library/./src/utils/gameStateManager.js","webpack://tsubaki-game-library/./src/utils/gameComponentFactory.js","webpack://tsubaki-game-library/./src/components/sum.js","webpack://tsubaki-game-library/./src/components/sum.vue?4113","webpack://tsubaki-game-library/./src/components/fish.vue","webpack://tsubaki-game-library/./src/components/fish.js","webpack://tsubaki-game-library/./src/components/fish.vue?23f9","webpack://tsubaki-game-library/./src/components/point24.vue","webpack://tsubaki-game-library/./src/components/point24.js","webpack://tsubaki-game-library/./src/components/point24.vue?2f47","webpack://tsubaki-game-library/./src/components/month.vue","webpack://tsubaki-game-library/./src/components/month.js","webpack://tsubaki-game-library/./src/components/month.vue?5f25","webpack://tsubaki-game-library/./src/components/Tortoise.vue","webpack://tsubaki-game-library/./src/components/Tortoise.js","webpack://tsubaki-game-library/./src/components/Tortoise.vue?68f0","webpack://tsubaki-game-library/./src/components/Sort.vue","webpack://tsubaki-game-library/./src/components/candidateUtils.js","webpack://tsubaki-game-library/./src/components/Sort.js","webpack://tsubaki-game-library/./src/components/Sort.vue?7b36","webpack://tsubaki-game-library/./src/components/Pairs.vue","webpack://tsubaki-game-library/./src/components/Pairs.js","webpack://tsubaki-game-library/./src/components/Pairs.vue?b359","webpack://tsubaki-game-library/./src/components/Spider.vue","webpack://tsubaki-game-library/./src/directives/move.js","webpack://tsubaki-game-library/./src/components/Spider.js","webpack://tsubaki-game-library/./src/components/Spider.vue?2441","webpack://tsubaki-game-library/./src/components/Chess.vue","webpack://tsubaki-game-library/./src/components/Chess.js","webpack://tsubaki-game-library/./src/components/Chess.vue?6fd7","webpack://tsubaki-game-library/./src/router/index.js","webpack://tsubaki-game-library/./src/store/index.js","webpack://tsubaki-game-library/./src/main.js","webpack://tsubaki-game-library/webpack/bootstrap","webpack://tsubaki-game-library/webpack/runtime/chunk loaded","webpack://tsubaki-game-library/webpack/runtime/compat get default export","webpack://tsubaki-game-library/webpack/runtime/define property getters","webpack://tsubaki-game-library/webpack/runtime/ensure chunk","webpack://tsubaki-game-library/webpack/runtime/get javascript chunk filename","webpack://tsubaki-game-library/webpack/runtime/get mini-css chunk filename","webpack://tsubaki-game-library/webpack/runtime/global","webpack://tsubaki-game-library/webpack/runtime/hasOwnProperty shorthand","webpack://tsubaki-game-library/webpack/runtime/load script","webpack://tsubaki-game-library/webpack/runtime/make namespace object","webpack://tsubaki-game-library/webpack/runtime/publicPath","webpack://tsubaki-game-library/webpack/runtime/css loading","webpack://tsubaki-game-library/webpack/runtime/jsonp chunk loading","webpack://tsubaki-game-library/webpack/startup"],"sourcesContent":["/**\n * 游戏设置管理器\n * 统一管理游戏延迟设置的存储和读取\n */\n\nclass GameSettingsManager {\n  constructor() {\n    this.listeners = [];\n  }\n\n  /**\n   * 获取指定游戏的延迟设置\n   * @param {string} gameName - 游戏名称\n   * @returns {number} 延迟时间（毫秒）\n   */\n  getDelay(gameName) {\n    // 优先查找游戏特定设置\n    const gameDelay = localStorage.getItem(`game-delay-${gameName}`);\n    if (gameDelay) {\n      return parseInt(gameDelay);\n    }\n\n    // 其次查找全局设置\n    const globalDelay = localStorage.getItem('game-global-delay');\n    if (globalDelay) {\n      return parseInt(globalDelay);\n    }\n\n    // 返回默认值\n    return 500;\n  }\n\n  /**\n   * 保存延迟设置\n   * @param {string} gameName - 游戏名称（如果为空则为全局设置）\n   * @param {number} delay - 延迟时间（毫秒）\n   * @param {boolean} applyToAll - 是否应用到所有游戏\n   */\n  saveDelay(gameName, delay, applyToAll = false) {\n    if (applyToAll) {\n      // 应用到全部游戏\n      localStorage.setItem('game-global-delay', delay.toString());\n      // 清除所有游戏特定的设置\n      const keys = Object.keys(localStorage);\n      keys.forEach(key => {\n        if (key.startsWith('game-delay-') && key !== 'game-global-delay') {\n          localStorage.removeItem(key);\n        }\n      });\n    } else {\n      // 仅应用到当前游戏\n      if (gameName) {\n        localStorage.setItem(`game-delay-${gameName}`, delay.toString());\n      }\n    }\n\n    // 通知所有监听器\n    this.notifyListeners(delay, applyToAll, gameName);\n  }\n\n  reset() {\n    localStorage.clear();\n  }\n\n  /**\n   * 添加设置变化监听器\n   * @param {Function} callback - 回调函数\n   */\n  addListener(callback) {\n    this.listeners.push(callback);\n  }\n\n  /**\n   * 移除设置变化监听器\n   * @param {Function} callback - 回调函数\n   */\n  removeListener(callback) {\n    const index = this.listeners.indexOf(callback);\n    if (index > -1) {\n      this.listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * 通知所有监听器\n   * @param {number} delay - 延迟时间\n   * @param {boolean} applyToAll - 是否应用到所有游戏\n   * @param {string} gameName - 游戏名称\n   */\n  notifyListeners(delay, applyToAll, gameName) {\n    this.listeners.forEach(callback => {\n      try {\n        callback({ delay, applyToAll, gameName });\n      } catch (error) {\n        console.error('Error in settings listener:', error);\n      }\n    });\n  }\n}\n\n// 导出单例\nexport default new GameSettingsManager();\n","/**\n * 卡片工具函数\n * 提供卡片相关的常量和工具函数\n */\n\n// 卡片花色\nexport const CARD_TYPES = [\"♥\", \"♠\", \"♦\", \"♣\"];\n\n// 卡片点数\nexport const CARD_POINTS = [\"A\", 2, 3, 4, 5, 6, 7, 8, 9, 10, \"J\", \"Q\", \"K\", \"JOKER\"];\n\n/**\n * 计算卡片占位符文本\n * @param {number|string} cardId - 卡片ID\n * @param {string[]} types - 卡片花色数组\n * @param {Array<string|number>} points - 卡片点数数组\n * @returns {string} 卡片占位符文本\n */\nexport function getCardPlaceholderText(cardId, types = CARD_TYPES, points = CARD_POINTS) {\n  if (typeof cardId === 'number') {\n    const suit = cardId < 52 ? types[cardId % 4] : \"\";\n    const point = points[cardId >> 2];\n    return `${suit}${point}`;\n  }\n  return '';\n}\n\n/**\n * 获取卡片图像URL\n * @param {number|string} cardId - 卡片ID\n * @returns {string} 卡片图像URL\n */\nexport function getCardImageSrc(cardId) {\n  return `./static/${cardId}.webp`;\n}\n\n/**\n * 导出默认对象，方便一次性导入\n */\nexport default {\n  CARD_TYPES,\n  CARD_POINTS,\n  getCardPlaceholderText,\n  getCardImageSrc\n};","<template>\n  <div id=\"app\">\n    <router-view />\n  </div>\n</template>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #dfcdc3;\n  width: 100%;\n  height: 100vh;\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=517c11fd\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=517c11fd&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <GameLayout\n    v-bind=\"gameLayoutProps\"\n    :win-buttons=\"[{ text: 'GO ON', callback: goon }]\"\n    :win-modal-style=\"{ backgroundColor: 'rgba(0, 0, 0, 0.7)' }\"\n    :win-custom-class=\"'lose'\"\n    :lose-buttons=\"[{ text: 'AGAIN', callback: goon }]\"\n    :lose-modal-style=\"{ backgroundColor: 'rgba(0, 0, 0, 0.7)' }\"\n    :lose-custom-class=\"'lose'\"\n    :draw-buttons=\"[{ text: 'GO ON', callback: goon }]\"\n    :draw-modal-style=\"{ backgroundColor: 'rgba(0, 0, 0, 0.7)' }\"\n    :draw-custom-class=\"'draw lose'\"\n    @goon=\"goon\"\n  >\n    <template #game-content>\n      <div class=\"row center\">\n        <img class=\"avatar\" :src=\"'./static/avatar/17.webp'\" />\n        <span class=\"scrore\">{{ score1 }}</span>\n      </div>\n      <div class=\"row\">\n        <div>\n          <ul class=\"cardsul\">\n            <CardImage\n              v-for=\"item in arr1\"\n              :key=\"item.id\"\n              class=\"card\"\n              :card-id=\"item.id\"\n            />\n          </ul>\n        </div>\n      </div>\n      <div class=\"row\" style=\"margin-top: 0.625rem\">\n        <div>\n          <ul class=\"cardsul reverse\">\n            <CardImage\n              v-for=\"item in arr2\"\n              :key=\"item.id\"\n              class=\"card\"\n              :card-id=\"item.id\"\n            />\n          </ul>\n        </div>\n      </div>\n      <div class=\"row center\">\n        <img class=\"avatar\" :src=\"'./static/avatar/32.webp'\" />\n        <span class=\"scrore\">{{ score2 }}</span>\n      </div>\n    </template>\n    <template #bottom-controls>\n      <GameControls\n        :buttons=\"[\n          {\n            label: 'HIT',\n            action: 'hitBtn',\n            disabled: stepDisabled,\n          },\n          {\n            label: 'PASS',\n            action: 'passBtn',\n            disabled: autoDisabled,\n          },\n        ]\"\n        @hitBtn=\"hit(cardsChg, arr2)\"\n        @passBtn=\"pass\"\n      />\n    </template>\n  </GameLayout>\n</template>\n\n<script>\nimport SumComponent from \"./sum.js\";\n\nconst component = SumComponent;\n\nexport default component;\n</script>\n\n<style scoped>\n@import url(\"./sum.css\");\n</style>\n","export function shuffleCards(cards, num) {\n  let rand, tmp;\n  let last = num - 1;\n  for (let i = 0; i < 1000; i++) {\n    rand = Math.floor(seededRandom() * last);\n    tmp = cards[last];\n    cards[last] = cards[rand];\n    cards[rand] = tmp;\n  }\n  return cards;\n}\n\nexport function timeout(handle, time) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve();\n      handle();\n    }, time);\n  });\n}\n\nexport function wait(time) {\n  return new Promise((r) => setTimeout(r, time));\n}\n\nexport function preload(cb) {\n  let arr = [];\n  for (let i = 0; i < 54; i++) {\n    arr.push(\n      new Promise((resolve) => {\n        let img = new Image();\n        img.src = \"./static/\" + i + \".webp\";\n        img.onload = () => {\n          cb && cb(img, i);\n          resolve(img);\n        };\n      }),\n    );\n  }\n  return Promise.all(arr);\n}\n\nfunction equalArray(arr1, arr2) {\n  if (!arr2) return false;\n  for (let i = 0; i < arr2.length; i++) {\n    if (arr1[i] != arr2[i]) return false;\n  }\n  return true;\n}\n\nexport function checkDeadForeach(array, newest) {\n  for (let i = 0; i < array.length >> 1; i++) {\n    if (!equalArray(array[i], newest)) {\n      continue;\n    }\n    let j;\n    let count = {};\n    for (j = 0; j < i; j++) {\n      count[array[i].join(\".\")] = count[array[i].join(\".\")]\n        ? count[array[i].join(\".\")] + 1\n        : 1;\n      if (!equalArray(array[j], array[j + i + 1])) break;\n    }\n    if (j >= i) {\n      if (i > 40) {\n        console.log(\"dead foreach\", array, newest, i);\n      }\n      return false;\n    }\n    let index = Object.values(count).indexOf(1);\n    if (index < 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\nlet s = 1234;\n\nexport function setSeed(seed) {\n  s = seed;\n}\n\nexport function seededRandom() {\n  s = (s * 9301 + 49297) % 233280;\n  return s / 233280.0;\n}\n","import { wait } from \"./help.js\";\n\n/**\n * 游戏状态管理类\n * 统一管理游戏状态、历史记录、撤销重做等功能\n */\nexport default class GameStateManager {\n  constructor(options = {}) {\n    // 游戏状态标志\n    this.hitflag = true; // 是否可以操作\n    this.winflag = false; // 胜利标志\n    this.loseflag = false; // 失败标志\n    this.drawflag = false; // 平局标志\n\n    // 历史记录\n    this.history = [];\n\n    // 自动模式相关\n    this.isAutoRunning = false;\n    this.autoInterval = null;\n    this.autoStepDelay = options.autoStepDelay / 10 || 500; // 默认单步延迟500ms，测试时除以10以缩短测试时间\n\n    // 事件监听器\n    this._listeners = {};\n  }\n\n  /**\n   * 初始化游戏状态\n   */\n  init() {\n    this.hitflag = true;\n    this.winflag = false;\n    this.loseflag = false;\n    this.drawflag = false;\n    this.history = [];\n    this.stopAuto();\n    this.emit(\"init\");\n  }\n\n  /**\n   * 记录游戏操作到历史记录\n   * @param {Object} operation - 操作对象\n   */\n  recordOperation(operation, backword = false) {\n    backword ? this.history.unshift(operation) : this.history.push(operation);\n    this.emit(\"historyUpdate\", this.history);\n  }\n\n  /**\n   * 撤销上一步操作\n   * @returns {Object|null} 撤销的操作对象，如果没有历史记录则返回null\n   */\n  undo() {\n    if (this.history.length === 0) {\n      return null;\n    }\n\n    const operation = this.history.pop();\n    this.emit(\"undo\", operation);\n    this.emit(\"historyUpdate\", this.history);\n\n    // 撤销后重置游戏状态标志\n    this.winflag = false;\n    this.loseflag = false;\n    this.drawflag = false;\n\n    return operation;\n  }\n\n  /**\n   * 获取历史记录长度\n   * @returns {number} 历史记录长度\n   */\n  getStepCount() {\n    return this.history.length;\n  }\n\n  /**\n   * 判断是否可以撤销\n   * @returns {boolean} 是否可以撤销\n   */\n  canUndo() {\n    return this.history.length > 0 && this.hitflag && !this.isAutoRunning;\n  }\n\n  /**\n   * 启动自动模式\n   * @param {Function} stepCallback - 每一步的回调函数\n   */\n  async startAuto(stepCallback) {\n    if (this.isAutoRunning || this.winflag || this.loseflag || this.drawflag) {\n      console.log(\n        `startAuto被跳过: isAutoRunning=${this.isAutoRunning}, win=${this.winflag}, lose=${this.loseflag}, draw=${this.drawflag}`,\n      );\n      return;\n    }\n\n    console.log(\"开始自动模式...\");\n    this.isAutoRunning = true;\n    this.emit(\"autoStart\");\n\n    let stepCount = 0;\n    const maxSteps = 400; // 防止无限循环\n\n    try {\n      while (\n        this.isAutoRunning &&\n        !this.winflag &&\n        !this.loseflag &&\n        !this.drawflag &&\n        stepCount < maxSteps\n      ) {\n        await stepCallback();\n        stepCount++;\n\n        await wait(this.autoStepDelay);\n      }\n\n      if (stepCount >= maxSteps) {\n        console.log(`达到最大步数${maxSteps}`);\n        this.stopAuto();\n      }\n    } catch (error) {\n      console.error(\"Auto mode error:\", error);\n    } finally {\n      console.log(`自动模式结束，总共执行了${stepCount}步`);\n      this.stopAuto();\n    }\n  }\n\n  /**\n   * 停止自动模式\n   */\n  stopAuto() {\n    if (!this.isAutoRunning) {\n      return;\n    }\n\n    this.isAutoRunning = false;\n    if (this.autoInterval) {\n      clearInterval(this.autoInterval);\n      this.autoInterval = null;\n    }\n\n    this.emit(\"autoStop\");\n  }\n\n  /**\n   * 设置自动模式的延迟时间\n   * @param {number} delay - 延迟时间（毫秒）\n   */\n  setAutoStepDelay(delay) {\n    this.autoStepDelay = delay;\n    this.emit(\"delayChanged\", delay);\n  }\n\n  /**\n   * 获取当前的延迟时间\n   * @returns {number} 当前延迟时间（毫秒）\n   */\n  getAutoStepDelay() {\n    return this.autoStepDelay;\n  }\n\n  /**\n   * 执行单步操作\n   * @param {Function} stepCallback - 单步操作的回调函数\n   */\n  async step(stepCallback) {\n    if (!this.hitflag || this.winflag || this.loseflag || this.drawflag) {\n      return;\n    }\n\n    this.hitflag = false;\n    try {\n      await stepCallback();\n    } catch (error) {\n      console.error(\"Step error:\", error);\n    } finally {\n      this.hitflag = true;\n    }\n  }\n\n  /**\n   * 设置游戏胜利\n   */\n  setWin() {\n    this.winflag = true;\n    this.stopAuto();\n    this.emit(\"win\");\n  }\n\n  /**\n   * 设置游戏失败\n   */\n  setLose() {\n    this.loseflag = true;\n    this.stopAuto();\n    this.emit(\"lose\");\n  }\n\n  /**\n   * 设置游戏平局\n   */\n  setDraw() {\n    this.drawflag = true;\n    this.stopAuto();\n    this.emit(\"draw\");\n  }\n\n  /**\n   * 重置游戏\n   * @param {Function} resetCallback - 重置游戏的回调函数\n   */\n  reset(resetCallback) {\n    this.stopAuto();\n    this.init();\n    if (resetCallback) {\n      resetCallback();\n    }\n    this.emit(\"reset\");\n  }\n\n  /**\n   * 添加事件监听器\n   * @param {string} event - 事件名称\n   * @param {Function} listener - 事件监听器\n   */\n  on(event, listener) {\n    if (!this._listeners[event]) {\n      this._listeners[event] = [];\n    }\n    this._listeners[event].push(listener);\n  }\n\n  /**\n   * 移除事件监听器\n   * @param {string} event - 事件名称\n   * @param {Function} listener - 要移除的事件监听器\n   */\n  off(event, listener) {\n    if (!this._listeners[event]) {\n      return;\n    }\n    const index = this._listeners[event].indexOf(listener);\n    if (index > -1) {\n      this._listeners[event].splice(index, 1);\n    }\n  }\n\n  /**\n   * 触发事件\n   * @param {string} event - 事件名称\n   * @param {*} data - 事件数据\n   */\n  emit(event, data) {\n    if (!this._listeners[event]) {\n      return;\n    }\n    this._listeners[event].forEach((listener) => {\n      try {\n        listener(data);\n      } catch (error) {\n        console.error(`Error in event listener for ${event}:`, error);\n      }\n    });\n  }\n\n  /**\n   * 获取当前游戏状态\n   * @returns {Object} 游戏状态对象\n   */\n  getState() {\n    return {\n      hitflag: this.hitflag,\n      winflag: this.winflag,\n      loseflag: this.loseflag,\n      drawflag: this.drawflag,\n      step: this.getStepCount(),\n      isAutoRunning: this.isAutoRunning,\n    };\n  }\n\n  /**\n   * 设置游戏状态\n   * @param {Object} state - 要设置的游戏状态\n   */\n  setState(state) {\n    Object.assign(this, state);\n    this.emit(\"stateChange\", this.getState());\n  }\n\n  /**\n   * 获取默认计算属性对象\n   * 供Vue组件使用扩展运算符导入\n   * @returns {Object} 默认计算属性对象\n   */\n  static getDefaultComputedProperties() {\n    return {\n      // 基础状态标志\n      hitflag() {\n        const manager = this.gameManager;\n        return manager ? manager.hitflag : true;\n      },\n\n      winflag() {\n        const manager = this.gameManager;\n        return manager ? manager.winflag : false;\n      },\n\n      loseflag() {\n        const manager = this.gameManager;\n        return manager ? manager.loseflag : false;\n      },\n\n      drawflag() {\n        const manager = this.gameManager;\n        return manager ? manager.drawflag : false;\n      },\n\n      // 步数计算属性\n      step() {\n        const manager = this.gameManager;\n        return manager ? manager.getStepCount() : 0;\n      },\n\n      // 按钮禁用状态计算属性\n      undoDisabled() {\n        const manager = this.gameManager;\n        return !manager || !manager.canUndo();\n      },\n\n      restartDisabled() {\n        const manager = this.gameManager;\n        return !manager || !manager.hitflag || manager.isAutoRunning;\n      },\n\n      stepDisabled() {\n        const manager = this.gameManager;\n        return (\n          !manager ||\n          !manager.hitflag ||\n          manager.isAutoRunning ||\n          manager.winflag ||\n          manager.loseflag ||\n          manager.drawflag\n        );\n      },\n\n      autoDisabled() {\n        const manager = this.gameManager;\n        return (\n          !manager ||\n          !manager.hitflag ||\n          manager.winflag ||\n          manager.loseflag ||\n          manager.drawflag\n        );\n      },\n\n      // 用于模板的便捷计算属性\n      canOperate() {\n        const manager = this.gameManager;\n        return manager && manager.hitflag && !manager.isAutoRunning;\n      },\n\n      // 游戏状态\n      gameState() {\n        const manager = this.gameManager;\n        return manager ? manager.getState() : {};\n      },\n    };\n  }\n}\n","import GameStateManager from \"./gameStateManager.js\";\nimport gameSettingsManager from \"./gameSettingsManager.js\";\nimport { defineAsyncComponent } from \"vue\";\nimport { setSeed } from \"./help.js\";\nimport { CARD_TYPES, CARD_POINTS, getCardPlaceholderText } from \"./cardUtils.js\";\n\n/**\n * 游戏规则说明映射\n * 为每个游戏提供简要的规则说明\n */\nconst gameRules = {\n  // 月份游戏\n  month: \"The game has 13 positions (12 months + 1 deck). Each turn, take the top card from the current position and move it to the position corresponding to its value. If the deck reaches 4 cards, the game ends.\",\n  \n  // 钓鱼游戏\n  fish: \"A 4-player game where each player starts with cards. On your turn, draw the top card from your deck. If it matches a card in the center, collect those cards. Special cards let you take cards from other players. The player who collects all cards wins.\",\n  \n  // 24点游戏\n  point24: \"Use 4 given numbers and apply +, -, ×, ÷ operations to make the result equal to 24. Each number can be used exactly once. You can combine numbers by selecting an operator and clicking cards to perform calculations.\",\n  \n  // 龟兔赛跑（卡片配对游戏）\n  Tortoise: \"A card matching game with hierarchical dependencies. Cards have z-index priorities and connection requirements. Match cards of the same value pair (cards with same base number). Cards can only be matched when all their prerequisite cards are already matched. Complete all pairs to win.\",\n  \n  // 排序游戏\n  Sort: \"A card sorting puzzle with 3 difficulty modes: simple (by number), medium (by color), and hard (by suit). Move cards to empty slots following specific rules. Cards can only be placed in valid positions. The goal is to arrange all cards in the correct order.\",\n  \n  // 配对游戏\n  Pairs: \"A memory matching game with 48 cards. Flip cards to find pairs. Cards are paired based on their base value (4 cards share the same base value). Find all matching pairs as quickly as possible to win.\",\n  \n  // 蜘蛛纸牌\n  Spider: \"A classic Spider Solitaire game with 52 standard playing cards. Arrange cards in descending order by number. Cards can be moved in sequences to build foundations. The goal is to sort all cards by suit and rank to win.\",\n  \n  // 国际象棋（策略游戏）\n  GridBattle: \"A strategy game on a 6x6 grid with two types of pieces: high (1) and low (0) grade. Pieces move according to specific rules defined by their positions. Win by eliminating all opponent's pieces of the opposite grade, or reach a draw when only one of each remains.\",\n  \n  // 21点（BlackJack）\n  blackjack: \"A card game using a 54-card deck. The goal is to get as close to 21 as possible without exceeding it. Cards 2-10 are worth their face value, J/Q/K are worth 10, and Aces can be worth 1 or 11. If your score exceeds 21, you bust. Both player and dealer start with 2 cards.\"\n};\n\n/**\n * 组件定义 - 根据环境选择 Mock 或真实组件\n */\nlet GameResultModal, GameControls, GameLayout, CardImage;\n\nif (typeof window === \"undefined\") {\n  // Node.js 环境：直接使用 Mock 组件\n  GameResultModal = {\n    name: \"GameResultModal\",\n    template: \"<div>Mock GameResultModal</div>\",\n    props: [\"title\", \"subtitle\", \"buttons\", \"show\"],\n  };\n  GameControls = {\n    name: \"GameControls\",\n    template: \"<div>Mock GameControls</div>\",\n    props: [\"canUndo\", \"canGoon\", \"canRestart\", \"canAuto\", \"canStep\"],\n  };\n  GameLayout = {\n    name: \"GameLayout\",\n    template: \"<div><slot name='game-content'></slot></div>\",\n    props: [\"title\", \"winflag\", \"loseflag\", \"drawflag\"],\n  };\n  CardImage = {\n    name: \"CardImage\",\n    template: \"<div>Mock CardImage</div>\",\n    props: [\"src\", \"alt\"],\n  };\n} else {\n  // 浏览器环境：使用 Vue 3 异步组件\n  GameResultModal = defineAsyncComponent(\n    () => import(\"../components/GameResultModal.vue\"),\n  );\n  GameControls = defineAsyncComponent(\n    () => import(\"../components/GameControls.vue\"),\n  );\n  GameLayout = defineAsyncComponent(\n    () => import(\"../components/GameLayout.vue\"),\n  );\n  CardImage = defineAsyncComponent(\n    () => import(\"../components/CardImage.vue\"),\n  );\n}\n\n/**\n * 游戏组件工厂函数\n * 为现有游戏组件添加统一的GameStateManager、GameControls和GameResultModal功能\n * 这是一个保守的重构方案，最大程度保持现有代码结构不变\n */\n\n/**\n * 创建增强的游戏组件（同步版本）\n * @param {Object} baseComponent - 基础游戏组件 (.js文件导出的组件)\n * @param {Object} options - 配置选项\n * @param {number} options.autoStepDelay - 自动模式延迟时间\n * @param {boolean} options.hasUndo - 是否支持撤销\n * @param {boolean} options.hasRestart - 是否支持重新开始\n * @param {Function} options.customInit - 自定义初始化函数\n * @param {Function} options.customCleanup - 自定义清理函数\n * @returns {Object} 增强后的Vue组件配置\n */\nexport function createEnhancedGameComponent(baseComponent, options = {}) {\n  const {\n    computed = {},\n    methods = {},\n    autoStepDelay = 500,\n    hasUndo = true,\n    hasRestart = true,\n    customInit = null,\n    customCleanup = null,\n  } = options;\n\n  return {\n    // 继承基础组件的所有属性\n    ...baseComponent,\n\n    // 添加必要的组件\n    components: {\n      ...baseComponent.components,\n      GameResultModal,\n      GameControls,\n      GameLayout,\n      CardImage,\n    },\n\n    // 扩展data函数\n    data() {\n      const baseData = baseComponent.data ? baseComponent.data.call(this) : {};\n      \n      return {\n        types: CARD_TYPES,\n        point: CARD_POINTS,\n        ...baseData,\n        gameManager: new GameStateManager({\n          autoStepDelay,\n        }),\n      };\n    },\n\n    // 扩展created生命周期\n    created() {\n      this.setSeed(this.seed ? this.seed : Date.now());\n      \n      // 初始化GameStateManager\n      this.gameManager.init();\n\n      // 从 localStorage 加载延迟设置\n      this.loadDelaySettings();\n\n      // 监听设置变化\n      this._settingsChangeHandler = this.handleSettingsChanged.bind(this);\n      gameSettingsManager.addListener(this._settingsChangeHandler);\n\n      // 设置事件监听\n      this.handleUndo && this.gameManager.on(\"undo\", this.handleUndo);\n\n      // 设置historyUpdate事件监听\n      this.gameManager.on(\"historyUpdate\", () => {\n        // 先执行各页面自定义的handleHistoryUpdate方法\n        if (\n          this.handleHistoryUpdate &&\n          typeof this.handleHistoryUpdate === \"function\"\n        ) {\n          this.handleHistoryUpdate();\n        }\n\n        // 然后执行autoCalc方法（如果存在）\n        if (this.autoCalc && typeof this.autoCalc === \"function\") {\n          this.autoCalc();\n        }\n      });\n\n      // 调用自定义初始化函数\n      if (customInit) {\n        customInit.call(this);\n      }\n\n      // 调用原组件的created方法\n      if (baseComponent.created) {\n        baseComponent.created.call(this);\n      }\n\n      // 调用init方法（如果存在）\n      if (this.init) {\n        this.init();\n      }\n    },\n\n    // 扩展beforeUnmount生命周期\n    beforeUnmount() {\n      // 停止自动模式\n      this.gameManager.stopAuto();\n\n      // 清理事件监听\n      this.gameManager.off(\"undo\");\n      this.gameManager.off(\"historyUpdate\");\n\n      // 移除设置变化监听器\n      if (this._settingsChangeHandler) {\n        gameSettingsManager.removeListener(this._settingsChangeHandler);\n      }\n\n      // 调用自定义清理函数\n      if (customCleanup) {\n        customCleanup.call(this);\n      }\n\n      // 调用原组件的beforeUnmount方法\n      if (baseComponent.beforeUnmount) {\n        baseComponent.beforeUnmount.call(this);\n      }\n    },\n\n    // 扩展computed属性\n    computed: {\n      // 使用GameStateManager的默认计算属性\n      ...GameStateManager.getDefaultComputedProperties(),\n\n      // 游戏控制配置\n      gameControlsConfig() {\n        return {\n          showUndo: hasUndo,\n          showRestart: hasRestart,\n          undoDisabled: this.undoDisabled,\n          restartDisabled: this.restartDisabled,\n          stepDisabled: this.stepDisabled,\n          autoDisabled: this.autoDisabled,\n          isAutoRunning: this.gameManager?.isAutoRunning || false,\n        };\n      },\n\n      // GameLayout通用属性配置\n      gameLayoutProps() {\n        // 获取当前游戏名称\n        const currentGame = this.$route?.path?.substring(1) || '';\n        \n        return {\n          title: this.title,\n          gameControlsConfig: this.gameControlsConfig,\n          winflag: this.winflag,\n          loseflag: this.loseflag,\n          drawflag: this.drawflag,\n          step: this.step,\n          gameRule: gameRules[currentGame],\n        };\n      },\n\n      ...baseComponent.computed,\n      ...computed,\n    },\n\n    // 扩展methods\n    methods: {\n      getCardPlaceholderText,\n      // 设置随机数种子\n      setSeed(seed) {\n        this.seed = seed;\n        setSeed(seed);\n      },\n      \n      // 统一的撤销方法\n      undo() {\n        this.gameManager.undo();\n      },\n\n      // 统一的自动模式方法\n      async pass() {\n        this.gameManager.isAutoRunning ? this.gameManager.stopAuto() : await this.gameManager.startAuto(async () => {\n          // 使用replacer处理循环引用和特殊对象\n          let seen = new WeakMap(); // 使用WeakMap记录路径\n          let pathStack = []; // 记录当前路径\n          \n          const replacer = function(key, value) {\n            // 跳过以_开头的属性\n            if (typeof key === 'string' && key.startsWith('_')) {\n              return undefined;\n            }\n            \n            // 处理对象循环引用\n            if (typeof value === 'object' && value !== null) {\n              if (seen.has(value)) {\n                return undefined; // 跳过循环引用\n              }\n              \n              const currentPath = pathStack.join('.') + (key ? '.' + key : '');\n              seen.set(value, currentPath);\n              pathStack.push(key);\n            }\n            \n            return value;\n          };\n          const beforeState = JSON.stringify(this.$data, replacer);\n          await this.stepFn();\n          this.renderTextView() \n          seen = new WeakMap(); // 使用WeakMap记录路径\n          pathStack = []; // 记录当前路径\n          const afterState = JSON.stringify(this.$data, replacer);\n          \n          // 如果状态没变，说明移动无效\n          if (beforeState === afterState) {\n            console.warn('移动无效，游戏可能陷入死锁');\n            this.gameManager.stopAuto();\n          }\n        });\n      },\n\n      // 统一的重新开始方法\n      goon() {\n        this.gameManager.reset(() => {\n          if (this.init) {\n            this.init();\n          }\n        });\n      },\n\n      /**\n       * 从 localStorage 加载延迟设置\n       */\n      loadDelaySettings() {\n        const currentGame = this.$route?.path?.substring(1) || '';\n        const delay = gameSettingsManager.getDelay(currentGame);\n        this.gameManager.setAutoStepDelay(delay);\n      },\n\n      /**\n       * 处理设置变化事件\n       */\n      handleSettingsChanged(settings) {\n        const currentGame = this.$route?.path?.substring(1) || '';\n        \n        // 如果是应用到所有游戏，或者是针对当前游戏的设置，则更新\n        if (settings.applyToAll || settings.gameName === currentGame) {\n          this.gameManager.setAutoStepDelay(settings.delay);\n        }\n      },\n\n      ...baseComponent.methods,\n      ...methods,\n    },\n  };\n}\n\n/**\n * 快速创建游戏组件的便捷函数\n * 针对不同类型的游戏提供预设配置\n */\nexport const GameComponentPresets = {\n  // 纸牌游戏预设（支持撤销）\n  cardGame: (baseComponent, autoStepDelay = 500) =>\n    createEnhancedGameComponent(baseComponent, {\n      autoStepDelay,\n      hasUndo: true,\n      hasRestart: true,\n    }),\n\n  // 简单游戏预设（不支持撤销）\n  simpleGame: (baseComponent, autoStepDelay = 1000) =>\n    createEnhancedGameComponent(baseComponent, {\n      autoStepDelay,\n      hasUndo: false,\n      hasRestart: true,\n      customInit() {\n        // 为fish游戏添加特殊的stepFn和goon方法\n        if (this.title && this.title.includes(\"FISHING\")) {\n          this.stepFn = async () => {\n            await this.gameManager.step(async () => {\n              let cards = this[\"cards\" + ((this.step % 4) + 1)];\n              while (cards.length <= 0) {\n                this.gameManager.recordOperation();\n                cards = this[\"cards\" + ((this.step % 4) + 1)];\n              }\n              await this.hit(cards, this.arr);\n              // 检查胜利条件\n              let i;\n              for (i = 1; i <= 4; i++) {\n                if ((this.step % 4) + 1 != i && this[\"cards\" + i].length > 0) {\n                  break;\n                }\n              }\n              if (i > 4) {\n                this.gameManager.setWin();\n              } else {\n                this.gameManager.recordOperation();\n              }\n            });\n          };\n        }\n\n        // 为month游戏添加特殊的stepFn和goon方法\n        if (this.title && this.title === \"Month\") {\n          this.stepFn = async () => {\n            // 检查失败条件\n            if (this.cards2[12] >= 4) {\n              this.gameManager.setLose();\n            }\n            await this.gameManager.step(async () => {\n              await this.hit();\n            });\n          };\n        }\n      },\n    }),\n\n  // 配对游戏预设\n  pairGame: (baseComponent, autoStepDelay = 500, methods = {}) =>\n    createEnhancedGameComponent(baseComponent, {\n      autoStepDelay,\n      hasUndo: false,\n      hasRestart: true,\n      methods,\n      customCleanup() {\n        // 清理定时器\n        if (this._timer) {\n          clearInterval(this._timer);\n        }\n      },\n    }),\n\n  // 益智游戏预设\n  puzzleGame: (baseComponent, autoStepDelay = 800, methods = {}) =>\n    createEnhancedGameComponent(baseComponent, {\n      autoStepDelay,\n      hasUndo: true,\n      hasRestart: true,\n      methods,\n      customInit() {\n        // 为益智游戏添加特殊功能\n        if (\n          this.title &&\n          (this.title.includes(\"24\") || this.title.includes(\"PUZZLE\"))\n        ) {\n          // 添加提示功能\n          this.showHint = function () {\n            // 实现提示逻辑\n            console.log(\"显示提示\");\n          };\n        }\n      },\n    }),\n\n  // 策略游戏预设\n  strategyGame: (baseComponent, autoStepDelay = 1200) =>\n    createEnhancedGameComponent(baseComponent, {\n      autoStepDelay,\n      hasUndo: true,\n      hasRestart: true,\n      customInit() {\n        // 为策略游戏添加特殊功能\n        this.difficulty = \"normal\";\n        this.setDifficulty = function (level) {\n          this.difficulty = level;\n          // this.gameManager.setAutoStepDelay(\n          //   level === \"easy\" ? 1500 : level === \"hard\" ? 800 : 1200,\n          // );\n        };\n      },\n    }),\n\n  // 动作游戏预设\n  actionGame: (baseComponent, autoStepDelay = 300) =>\n    createEnhancedGameComponent(baseComponent, {\n      autoStepDelay,\n      hasUndo: false,\n      hasRestart: true,\n      customInit() {\n        // 为动作游戏添加特殊功能\n        this.score = 0;\n        this.combo = 0;\n        this.addScore = function (points) {\n          this.score += points * (this.combo + 1);\n          this.combo++;\n        };\n        this.resetCombo = function () {\n          this.combo = 0;\n        };\n      },\n    }),\n\n  // 自定义游戏预设\n  customGame: (baseComponent, config = {}) => {\n    const {\n      autoStepDelay = 500,\n      hasUndo = true,\n      hasRestart = true,\n      features = [],\n      customLogic = null,\n    } = config;\n\n    return createEnhancedGameComponent(baseComponent, {\n      autoStepDelay,\n      hasUndo,\n      hasRestart,\n      customInit() {\n        // 应用自定义功能\n        features.forEach((feature) => {\n          switch (feature) {\n            case \"timer\":\n              this.gameTime = 0;\n              this._gameTimer = null;\n              this.startTimer = function () {\n                this._gameTimer = setInterval(() => {\n                  this.gameTime++;\n                }, 1000);\n              };\n              this.stopTimer = function () {\n                if (this._gameTimer) {\n                  clearInterval(this._gameTimer);\n                  this._gameTimer = null;\n                }\n              };\n              break;\n\n            case \"score\":\n              this.score = 0;\n              this.highScore = parseInt(\n                localStorage.getItem(`${this.title}_highScore`) || \"0\",\n              );\n              this.updateScore = function (points) {\n                this.score += points;\n                if (this.score > this.highScore) {\n                  this.highScore = this.score;\n                  localStorage.setItem(\n                    `${this.title}_highScore`,\n                    this.highScore.toString(),\n                  );\n                }\n              };\n              break;\n\n            case \"difficulty\":\n              this.difficulty = \"normal\";\n              this.setDifficulty = function (level) {\n                this.difficulty = level;\n                // 根据难度调整游戏参数\n                const delays = { easy: 800, normal: 500, hard: 300 };\n                this.gameManager.setAutoStepDelay(delays[level] || 500);\n              };\n              break;\n          }\n        });\n\n        // 应用自定义逻辑\n        if (customLogic && typeof customLogic === \"function\") {\n          customLogic.call(this);\n        }\n      },\n      customCleanup() {\n        // 清理定时器\n        if (this._gameTimer) {\n          clearInterval(this._gameTimer);\n        }\n      },\n    });\n  },\n};\n\n/**\n * 模板字符串生成器\n * 生成标准的游戏组件模板\n */\nexport function generateGameTemplate(options = {}) {\n  const {\n    hasTopControls = true,\n    hasBottomControls = false,\n    hasGameInfo = false,\n    hasCustomContent = true,\n  } = options;\n\n  return `<template>\n  <div class=\"Sum\">\n    <h1>{{ title }}</h1>\n    \n    ${\n      hasTopControls\n        ? `\n    <GameControls\n      v-bind=\"gameControlsConfig\"\n      @undo=\"undo\"\n      @goon=\"goon\"\n      @step=\"stepFn\"\n      @auto=\"pass\"\n    />`\n        : \"\"\n    }\n    \n    ${\n      hasGameInfo\n        ? `\n    <div class=\"row\">\n      <span v-if=\"time !== undefined\">TIME: {{ time }}</span>\n      <br v-if=\"time !== undefined && step !== undefined\" />\n      <span v-if=\"step !== undefined\">STEP: {{ step }}</span>\n    </div>`\n        : \"\"\n    }\n    \n    <div class=\"row\">\n      ${hasCustomContent ? \"<!-- 游戏内容区域 -->\" : \"\"}\n    </div>\n    \n    ${\n      hasBottomControls\n        ? `\n    <GameControls\n      v-bind=\"gameControlsConfig\"\n      @undo=\"undo\"\n      @goon=\"goon\"\n      @step=\"stepFn\"\n      @auto=\"pass\"\n    />`\n        : \"\"\n    }\n    \n    <!-- 游戏结果模态框 -->\n    <GameResultModal\n      v-if=\"winflag\"\n      title=\"U WIN!\"\n      :buttons=\"[{ text: 'GO ON', callback: goon, disabled: false }]\"\n    />\n    \n    <GameResultModal\n      v-if=\"loseflag\"\n      title=\"U LOSE\"\n      :buttons=\"[{ text: 'GO ON', callback: goon, disabled: false }]\"\n    />\n  </div>\n</template>`;\n}\n\n/**\n * 使用示例：\n *\n * // 1. 简单使用\n * import { createEnhancedGameComponent } from '../utils/gameComponentFactory.js';\n * import Pairs from './Pairs.js';\n *\n * export default createEnhancedGameComponent(Pairs, {\n *   autoStepDelay: 500,\n *   hasUndo: false\n * });\n *\n * // 2. 使用预设\n * import { GameComponentPresets } from '../utils/gameComponentFactory.js';\n * import fish from './fish.js';\n *\n * export default GameComponentPresets.simpleGame(fish, 1000);\n *\n * // 3. 自定义配置\n * export default createEnhancedGameComponent(GridBattle, {\n *   autoStepDelay: 500,\n *   hasUndo: true,\n *   customInit() {\n *     // 自定义初始化逻辑\n *   }\n * });\n */\n","import { GameComponentPresets } from \"../utils/gameComponentFactory.js\";\nimport { shuffleCards } from \"../utils/help.js\";\nimport { getCardPlaceholderText } from \"../utils/cardUtils.js\";\n\nconst Sum = {\n  name: \"Sum\",\n  data() {\n    return {\n      title: \"BlackJack\",\n      cardsChg: [],\n      arr1: [],\n      arr2: [],\n    };\n  },\n  component: [],\n  methods: {\n    init(cards) {\n      this.cardsChg = [];\n      cards = this.cardsChg;\n      this.arr1.splice(0);\n      this.arr2.splice(0);\n      for (let i = 0; i < 54; i++) {\n        cards.push(i);\n      }\n      shuffleCards(cards, 53);\n      console.log(cards);\n      this.hit(cards, this.arr1);\n      this.hit(cards, this.arr2);\n      this.hit(cards, this.arr1);\n      this.hit(cards, this.arr2);\n    },\n    // 摸牌\n    hit(cards, arr) {\n      var currentCard = cards.shift();\n      var value = currentCard >> 2;\n      arr.push({ id: currentCard, value: ++value > 10 ? 10 : value });\n      this.gameManager.recordOperation();\n    },\n    // 计算点数\n    getScore(player) {\n      let score = 0;\n      let arr = this[\"arr\" + player];\n      let flag = false;\n      for (let i = 0; i < arr.length; i++) {\n        score += arr[i].value;\n        if (arr[i].value === 1) {\n          flag = true;\n        }\n      }\n      console.log(flag);\n      if (score <= 11 && flag === true) {\n        score += 10;\n      } else if (score > 21) {\n        score = 0;\n        player == 2 ? this.gameManager.setLose() : this.gameManager.setWin();\n      }\n      return score;\n    },\n\n    async stepFn() {\n      if (this.score1 === this.score2) {\n        this.gameManager.setDraw();\n      } else if (this.score1 < this.score2) {\n        this.hit(this.cardsChg, this.arr1);\n      } else if (this.score1 > this.score2) {\n        this.gameManager.setLose();\n      }\n    },\n    \n    /**\n     * 渲染文本视图 - 显示当前游戏状态\n     * 用于终端交互式游戏\n     */\n    renderTextView() {\n      console.log('\\n╔════════════════════════════════════════════════╗');\n      console.log('║            黑杰克 (BlackJack)                 ║');\n      console.log('╚════════════════════════════════════════════════╝');\n      console.log(`\\n步数: ${this.step}\\n`);\n      \n      // 显示庄家（玩家2）\n      console.log('━━━ 庄家 ━━━');\n      const dealerScore = this.getScore(2);\n      if (this.arr2 && this.arr2.length > 0) {\n        const dealerCards = this.arr2.map(c => getCardPlaceholderText(c.id)).join(' ');\n        console.log(`  ${dealerCards}`);\n        console.log(`  分数: ${dealerScore}${dealerScore > 21 ? ' 💥 爆牌!' : ''}\\n`);\n      } else {\n        console.log('  (无牌)\\n');\n      }\n      \n      // 显示玩家（玩家1）\n      console.log('━━━ 玩家 ━━━');\n      const playerScore = this.getScore(1);\n      if (this.arr1 && this.arr1.length > 0) {\n        const playerCards = this.arr1.map(c => getCardPlaceholderText(c.id)).join(' ');\n        console.log(`  ${playerCards}`);\n        console.log(`  分数: ${playerScore}${playerScore > 21 ? ' 💥 爆牌!' : playerScore === 21 ? ' 🎉 BlackJack!' : ''}\\n`);\n      } else {\n        console.log('  (无牌)\\n');\n      }\n      \n      // 显示剩余牌堆\n      console.log('━━━ 牌堆 ━━━');\n      const remainingCards = this.cardsChg ? this.cardsChg.length : 0;\n      console.log(`  剩余: ${remainingCards} 张\\n`);\n      \n      // 显示游戏规则\n      console.log('规则: 点数接近21获胜，超过21爆牌');\n      \n      return '渲染完成';\n    },\n    \n    /**\n     * 获取当前可用的操作列表\n     * 用于终端交互式游戏\n     */\n    getAvailableActions() {\n      const actions = [];\n      \n      // 重新开始按钮\n      actions.push({\n        id: 1,\n        label: '重新开始 (RESTART)',\n        method: 'goon',\n        args: []\n      });\n      \n      // 摘牌按钮（玩家1）\n      const playerScore = this.getScore(1);\n      if (playerScore < 21) {\n        actions.push({\n          id: 2,\n          label: '摘牌 (HIT)',\n          method: 'hit',\n          args: [this.cardsChg, this.arr1]\n        });\n      }\n      \n      // 停牌按钮\n      actions.push({\n        id: 3,\n        label: '停牌 (PASS)',\n        method: 'pass',\n        args: []\n      });\n      \n      return actions;\n    },\n    \n    // 停牌方法（庄家摧牌）\n    // stand() {\n    //   // 庄家持续摘牌直到点数>=17\n    //   while (this.getScore(2) < 17) {\n    //     this.hit(this.cardsChg, this.arr2);\n    //   }\n      \n    //   // 判断胜负\n    //   const playerScore = this.getScore(1);\n    //   const dealerScore = this.getScore(2);\n      \n    //   if (playerScore > 21) {\n    //     this.gameManager.setLose();\n    //   } else if (dealerScore > 21) {\n    //     this.gameManager.setWin();\n    //   } else if (playerScore > dealerScore) {\n    //     this.gameManager.setWin();\n    //   } else if (playerScore < dealerScore) {\n    //     this.gameManager.setLose();\n    //   } else {\n    //     this.gameManager.setDraw();\n    //   }\n      \n    //   this.gameManager.recordOperation();\n    // },\n  },\n  computed: {\n    // 监听点数\n    score1: function () {\n      return this.getScore(1);\n    },\n    score2: function () {\n      return this.getScore(2);\n    },\n  },\n};\n\n// 使用工厂函数创建增强的Sum组件并导出\nexport default GameComponentPresets.strategyGame(Sum, 1000);\n","import { render } from \"./sum.vue?vue&type=template&id=d16d7656&scoped=true\"\nimport script from \"./sum.vue?vue&type=script&lang=js\"\nexport * from \"./sum.vue?vue&type=script&lang=js\"\n\nimport \"./sum.vue?vue&type=style&index=0&id=d16d7656&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d16d7656\"]])\n\nexport default __exports__","<template>\n  <GameLayout\n    v-bind=\"gameLayoutProps\"\n    :win-title=\"''\"\n    @step=\"stepFn\"\n    @auto=\"pass\"\n    @goon=\"goon\"\n  >\n    <template #game-content>\n      <div\n        class=\"row flex-row\"\n        style=\"padding-top: 0.625rem; justify-content: space-around\"\n      >\n        <div class=\"flex-col center rela\" style=\"max-width: 25%\">\n          <message\n            class=\"abso\"\n            style=\"top: 4.375rem; left: 0; width: 100%\"\n            show1=\"1\"\n            >1</message\n          >\n          <img class=\"avatar\" :src=\"'./static/avatar/32.webp'\" />\n          <span class=\"diff\" :style=\"{ opacity: diff1 != 0 ? 1 : 0 }\"\n            >{{ diff1 > 0 ? \"+\" : \"\" }}{{ diff1 }}</span\n          >\n          <span class=\"scrore\">{{ score1 }}</span>\n        </div>\n        <div class=\"flex-col center rela\" style=\"max-width: 25%\">\n          <message class=\"abso\" style=\"top: 4.375rem; left: 0; width: 100%\"\n            >asfasfasdfasfdasdfasdfas</message\n          >\n          <img class=\"avatar\" :src=\"'./static/avatar/31.webp'\" />\n          <span class=\"diff\" :style=\"{ opacity: diff2 != 0 ? 1 : 0 }\"\n            >{{ diff2 > 0 ? \"+\" : \"\" }}{{ diff2 }}</span\n          >\n          <span class=\"scrore\">{{ score2 }}</span>\n        </div>\n        <div class=\"flex-col center rela\" style=\"max-width: 25%\">\n          <message class=\"abso\" style=\"top: 4.375rem; left: 0; width: 100%\"\n            >1</message\n          >\n          <img class=\"avatar\" :src=\"'./static/avatar/29.webp'\" />\n          <span class=\"diff\" :style=\"{ opacity: diff3 != 0 ? 1 : 0 }\"\n            >{{ diff3 > 0 ? \"+\" : \"\" }}{{ diff3 }}</span\n          >\n          <span class=\"scrore\">{{ score3 }}</span>\n        </div>\n        <div class=\"flex-col center rela\" style=\"max-width: 25%\">\n          <message class=\"abso\" style=\"top: 4.375rem; left: 0; width: 100%\"\n            >1</message\n          >\n          <img class=\"avatar\" :src=\"'./static/avatar/30.webp'\" />\n          <span class=\"diff\" :style=\"{ opacity: diff4 != 0 ? 1 : 0 }\"\n            >{{ diff4 > 0 ? \"+\" : \"\" }}{{ diff4 }}</span\n          >\n          <span class=\"scrore\">{{ score4 }}</span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div>\n          <ul\n            class=\"cardsul\"\n            style=\"padding-left: 0; margin: 0; min-height: 9.375rem\"\n          >\n            <CardImage\n              v-for=\"item in arr\"\n              :key=\"item\"\n              class=\"card m-0\"\n              style=\"max-width: 25%\"\n              :class=\"{\n                shanshuo: ssArr.indexOf(item) >= 0,\n                flyin1: flyin1.indexOf(item) >= 0,\n                flyin2: flyin2.indexOf(item) >= 0,\n                flyout1: flyout1.indexOf(item) >= 0,\n                flyout2: flyout2.indexOf(item) >= 0,\n              }\"\n              :card-id=\"item\"\n            />\n          </ul>\n        </div>\n      </div>\n    </template>\n\n    <template #win-content>\n      <h1>\n        <img\n          class=\"avatar\"\n          :src=\"'./static/avatar/' + [32, 31, 29, 30][step % 4] + '.webp'\"\n        />WIN!\n      </h1>\n    </template>\n  </GameLayout>\n</template>\n\n<script>\nimport FishComponent from \"./fish.js\";\n\nconst component = FishComponent;\n\nexport default component;\n</script>\n\n<style scoped>\n@import url(\"./sum.css\");\n</style>\n","import { shuffleCards } from \"../utils/help.js\";\nimport { GameComponentPresets } from \"../utils/gameComponentFactory.js\";\nimport { getCardPlaceholderText } from \"../utils/cardUtils.js\";\nimport { defineAsyncComponent } from \"vue\";\n\n/**\n * message 组件 - 根据环境选择\n */\nconst message =\n  typeof window === \"undefined\"\n    ? { name: \"message\", template: \"<div>Mock message</div>\" }\n    : defineAsyncComponent(() => import(\"./message.vue\"));\n\nconst Fish = {\n  name: \"Fish\",\n  components: { message },\n  data() {\n    return {\n      title: \"FISHING CONTEST OF DOG TEAM\",\n      diff1: 0,\n      diff2: 0,\n      diff3: 0,\n      diff4: 0,\n      cards1: [],\n      cards2: [],\n      cards3: [],\n      cards4: [],\n      ssArr: [],\n      flyin1: [],\n      flyin2: [],\n      flyout1: [],\n      flyout2: [],\n      arr: [],\n    };\n  },\n  // 初始化\n  methods: {\n    init() {\n      this.cards1.splice(0);\n      this.cards2.splice(0);\n      this.cards3.splice(0);\n      this.cards4.splice(0);\n      let cards = this.cards1;\n      this.arr.splice(0);\n      for (let i = 0; i < 54; i++) {\n        cards.push(i);\n      }\n      shuffleCards(cards, 53);\n      this.cards2.push(...cards.splice(-14));\n      this.cards3.push(...cards.splice(-13));\n      this.cards4.push(...cards.splice(-13));\n      console.log(cards, this.cards2, this.cards3);\n    },\n    time(handle, time) {\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          resolve();\n          handle();\n        }, time);\n      });\n    },\n    async push(arr, item) {\n      arr.push(item);\n      // var type = (this.step % 2) == 0 ? 'flyout1' : 'flyout2'\n      // this[type].push(item)\n      // await this.time(() => {\n      //   this[type].splice(0)\n      // }, 500)\n    },\n    // 摸牌\n    async hit(cards, arr) {\n      var currentCard = cards.shift();\n      var value = currentCard >> 2;\n      if (value == 13) {\n        this.push(arr, currentCard);\n        this.ssArr.push(currentCard);\n        return await this.time(() => {\n          this.ssArr.splice(0);\n          for (let i = 1; i <= 4; i++) {\n            i != (this.step % 4) + 1 &&\n              arr.push(\n                ...this[\"cards\" + i].splice(0, currentCard == 53 ? 5 : 3),\n              );\n          }\n          // arr.push(...((this.step % 2) == 0 ? this.cards2 : this.cards1).splice(0, currentCard == 53 ? 5 : 3))\n        }, this.gameManager.autoStepDelay);\n      }\n      var index = value == 10 ? 0 : arr.findIndex((item) => item >> 2 == value);\n      this.push(arr, currentCard);\n      if (index < 0) {\n        return;\n      }\n      this.ssArr.push(currentCard, arr[index]);\n      await this.time(() => {\n        this.ssArr.splice(0);\n        cards.push(...arr.splice(index));\n      }, this.gameManager.autoStepDelay);\n    },\n    /**\n     * 渲染文本视图 - 显示当前游戏状态\n     * 用于终端交互式游戏\n     */\n    renderTextView() {\n      console.log('\\n╔════════════════════════════════════════════════╗');\n      console.log('║              钓鱼游戏 (Fish)                  ║');\n      console.log('╚════════════════════════════════════════════════╝');\n      console.log(`\\n步数: ${this.step}\\n`);\n      \n      // 显示4个玩家的牌 - 两行表格格式\n      // console.log('┌─────────┬─────────┬─────────┬─────────┐');\n      console.log('│ 玩家1(你) │  玩家2  │  玩家3  │  玩家4  │');\n      // console.log('├─────────┼─────────┼─────────┼─────────┤');\n      \n      // 获取每个玩家的牌数\n      const cardCounts = [];\n      for (let i = 1; i <= 4; i++) {\n        const cards = this[`cards${i}`];\n        cardCounts.push(cards.length > 0 ? `${cards.length}张` : '已出完');\n      }\n      \n      console.log(`│${cardCounts[0].padStart(9, ' ')}│${cardCounts[1].padStart(9, ' ')}│${cardCounts[2].padStart(9, ' ')}│${cardCounts[3].padStart(9, ' ')}│`);\n      // console.log('└─────────┴─────────┴─────────┴─────────┘');\n      \n      // 显示中央区域\n      console.log('\\n━━━ 中央区域 ━━━');\n      if (this.arr.length > 0) {\n        const cardTexts = this.arr.map(c => getCardPlaceholderText(c)).join(' ');\n        console.log(`  ${cardTexts}`);\n      } else {\n        console.log('  (空)');\n      }\n      \n      return '渲染完成';\n    },\n    \n    /**\n     * 获取当前可用的操作列表\n     * 用于终端交互式游戏\n     */\n    getAvailableActions() {\n      const actions = [];\n      \n      // 重新开始按钮\n      actions.push({\n        id: 1,\n        label: '重新开始 (RESTART)',\n        method: 'goon',\n        args: []\n      });\n      \n      // 单步执行按钮\n      actions.push({\n        id: 2,\n        label: '单步执行 (►)',\n        method: 'stepFn',\n        args: []\n      });\n      \n      // 自动运行按钮\n      const isAutoRunning = this.gameManager?.isAutoRunning || false;\n      actions.push({\n        id: 3,\n        label: isAutoRunning ? '停止自动 (STOP)' : '自动运行 (AUTO)',\n        method: 'pass',\n        args: []\n      });\n      \n      return actions;\n    },\n  },\n  computed: {\n    // 监听点数\n    score1: function () {\n      return this.cards1.length;\n    },\n    score2: function () {\n      return this.cards2.length;\n    },\n    score3: function () {\n      return this.cards3.length;\n    },\n    score4: function () {\n      return this.cards4.length;\n    },\n  },\n  watch: {\n    score4(val, old) {\n      this.diff4 = val - old;\n      this.time(() => {\n        this.diff4 = 0;\n      }, this.gameManager.autoStepDelay);\n    },\n    score3(val, old) {\n      this.diff3 = val - old;\n      this.time(() => {\n        this.diff3 = 0;\n      }, this.gameManager.autoStepDelay);\n    },\n    score2(val, old) {\n      this.diff2 = val - old;\n      this.time(() => {\n        this.diff2 = 0;\n      }, this.gameManager.autoStepDelay);\n    },\n    score1(val, old) {\n      this.diff1 = val - old;\n      this.time(() => {\n        this.diff1 = 0;\n      }, this.gameManager.autoStepDelay);\n    },\n  },\n};\n\n// 使用工厂函数创建增强的fish组件并导出\nexport default GameComponentPresets.simpleGame(Fish, 1000);\n","import { render } from \"./fish.vue?vue&type=template&id=a9f40ed8&scoped=true\"\nimport script from \"./fish.vue?vue&type=script&lang=js\"\nexport * from \"./fish.vue?vue&type=script&lang=js\"\n\nimport \"./fish.vue?vue&type=style&index=0&id=a9f40ed8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-a9f40ed8\"]])\n\nexport default __exports__","<template>\n  <GameLayout\n    v-bind=\"gameLayoutProps\"\n    :lose-subtitle=\"'NO EXP = 24'\"\n    @undo=\"undo\"\n    @goon=\"goon\"\n    @step=\"stepFn\"\n    @auto=\"pass\"\n  >\n    <template #game-content>\n      <div class=\"row center\" style1=\"overflow:scroll\">\n        <div class=\"flex-row center\">\n          <ul class=\"cardsul flex-row center\" style=\"padding-left: 0\">\n            <div class=\"flex-col center m-0\">\n              <!-- <span class=\"vertical m-0\">(</span> -->\n              <point24card :card=\"arr[0]\"></point24card>\n              <div class=\"flex-row\" v-show=\"step < 3\">\n                <span\n                  v-for=\"i in 4\"\n                  :key=\"i\"\n                  class=\"sign center\"\n                  :class=\"{ choose: sign == i }\"\n                  @click=\"canOperate && clickSign(i)\"\n                  >{{ signs[i] }}</span\n                >\n              </div>\n              <CardImage\n                v-if=\"sign != 0\"\n                card-id=\"bg\"\n                class=\"card align-center\"\n              />\n              <!-- <span class=\"vertical m-0\">)</span> -->\n              <span class=\"vertical m-0\">=</span>\n              <span class=\"m-0\">{{ calc(arr[0]).toFixed(2) }}</span>\n            </div>\n          </ul>\n          <ul\n            class=\"cardsul flex-row center\"\n            style=\"padding-left: 0; margin-left: 1.25rem\"\n          >\n            <div\n              v-for=\"(item, i) in arr\"\n              :key=\"i\"\n              class=\"align-center flex-wrap flex-row center\"\n            >\n              <div v-if=\"i != 0\" class=\"flex-row center m-0\">\n                <span\n                  class=\"sign center\"\n                  @click=\"canOperate && clickCard(item, i)\"\n                  >{{ signs[sign] }}</span\n                >\n                <point24card\n                  :card=\"item\"\n                  @click=\"canOperate && clickCard(item, i)\"\n                ></point24card>\n              </div>\n            </div>\n          </ul>\n        </div>\n      </div>\n    </template>\n  </GameLayout>\n</template>\n\n<script>\nimport Point24Component from \"./point24.js\";\n\nconst component = Point24Component;\n\nexport default component;\n</script>\n\n<style scoped>\n@import url(\"./sum.css\");\n</style>\n","import { shuffleCards, timeout } from \"../utils/help.js\";\nimport { GameComponentPresets } from \"../utils/gameComponentFactory.js\";\nimport { getCardPlaceholderText } from \"../utils/cardUtils.js\";\nimport { defineAsyncComponent } from \"vue\";\n\n/**\n * point24card 组件 - 根据环境选择\n */\nconst point24card =\n  typeof window === \"undefined\"\n    ? { name: \"point24card\", template: \"<div>Mock point24card</div>\" }\n    : defineAsyncComponent(() => import(\"./point24card.vue\"));\n// var opts    =  [ \" + \" , \" * \" , \" - \" , \" - \" , \" / \" , \" / \" ];\nvar opts = [1, 3, 2, 2, 4, 4];\n\nfunction process(nums, len, aim) {\n  for (var i = 0; i < len; i++) {\n    for (var j = i + 1; j < len; j++) {\n      var numij = [nums[i], nums[j]];\n      nums[j] = nums[len - 1];\n      for (var k = 0; k < 6; k++) {\n        // nums[i]  =   ' ( '   +  numij[k % 2 ]  +  opts[k]  +  numij[( ! (k % 2 ) * 1 )]  +   ' ) ' ;\n        nums[i] = [numij[k % 2], opts[k], numij[!(k % 2) * 1]];\n        if (process(nums, len - 1, aim)) {\n          return true;\n        }\n      }\n      nums[i] = numij[0];\n      nums[j] = numij[1];\n    }\n  }\n  // return  (len  ==   1 )  &&  (Math.abs(( new  Function( \" return \"   +  nums[ 0 ])())  -  aim)  <   0.0000001 );\n  return len == 1 && Math.abs(calc(nums[0]) - aim) < 0.0000001;\n}\n\nlet fns = [\n  () => {},\n  (a, b) => a + b,\n  (a, b) => a - b,\n  (a, b) => a * b,\n  (a, b) => a / b,\n];\n\nfunction calc(a) {\n  if (Number.isFinite(a)) {\n    return (a >> 2) + 1;\n  } else {\n    let [num1, sign, num2] = a;\n    num1 = calc(num1);\n    num2 = calc(num2);\n    return fns[sign](num1, num2);\n  }\n}\n\nfunction first(i) {\n  console.log(i);\n  return Number.isFinite(i) ? i : first(i[0]);\n}\n\nconst Point24 = {\n  name: \"point24\",\n  components: { point24card },\n  data() {\n    return {\n      title: \"Point24\",\n      sign: 0,\n      cards1: [],\n      cards2: [0, 0, 0],\n      signs: [\"UP\", \"+\", \"-\", \"X\", \"/\"],\n      arr: [],\n      number: 52,\n    };\n  },\n  // 初始化\n  methods: {\n    init() {\n      this.sign = 0;\n      this.cards1.splice(0);\n      this.arr.splice(0);\n      let cards = this.cards1;\n      for (let i = 0; i < this.number; i++) {\n        cards.push(i);\n      }\n      shuffleCards(cards, this.number);\n      this.arr.push(...cards.splice(0, 4));\n      this.autoCalc(); // 恢复autoCalc调用\n    },\n    calc,\n    first,\n    process,\n    clickSign(sign) {\n      this.sign = this.sign == sign ? 0 : sign;\n    },\n    // 记录操作\n    recordOperation(type, data) {\n      this.gameManager.recordOperation({\n        type: type,\n        ...data,\n        timestamp: Date.now(),\n      });\n    },\n\n    // 处理撤销操作\n    handleUndo(operation) {\n      // 根据操作类型执行相应的撤销逻辑\n      switch (operation.type) {\n        case \"combine\":\n          // 撤销组合操作\n          this.cards2.splice(this.step, 1);\n          this.arr.splice(\n            this.arr.findIndex(\n              (a) => this.first(a) == this.first(operation.combined),\n            ),\n            1,\n            operation.left,\n            operation.right,\n          );\n          break;\n      }\n    },\n\n    // 重写clickCard方法，使用GameStateManager记录操作\n    clickCard(card, i) {\n      if (i == 0) {\n        console.log(`索引为0，直接返回`);\n        return;\n      }\n      if (i === -1) {\n        throw new Error(`没找到该卡片`);\n      }\n      if (this.sign != 0) {\n        let left = this.arr[0];\n        let right = this.arr.splice(i, 1)[0];\n        let combined = [left, this.sign, right];\n        this.arr.splice(0, 1, combined);\n        this.sign = 0;\n        this.cards2.splice(this.step, 1, combined);\n        console.log(`组合后数组:`, this.arr);\n        this.recordOperation(\"combine\", {\n          left: left,\n          right: right,\n          combined: combined,\n        });\n      } else {\n        let temp = this.arr[0];\n        this.arr.splice(0, 1, this.arr[i]);\n        this.arr.splice(i, 1, temp);\n      }\n    },\n\n    // 重写stepFn方法\n    async stepFn() {\n      await this.gameManager.step(async () => {\n        if (this.step >= 3) {\n          console.log(`步数已达到3，检查游戏结果...`);\n          // this.autoCalc(); // 调用autoCalc来检查游戏结果\n          return;\n        }\n        let temp = this.cards2[this.step];\n        this.sign = 0;\n        const index1 = this.arr.findIndex((a) => this.first(a) == this.first(temp[0]));\n        this.clickCard(temp[0], index1);\n        await timeout(() => {}, this.gameManager.autoStepDelay);\n        this.clickSign(temp[1]);\n        await timeout(() => {}, this.gameManager.autoStepDelay);\n        const index2 = this.arr.findIndex((a) => this.first(a) == this.first(temp[2]));\n        this.clickCard(temp[2], index2);\n      });\n    },\n    autoCalc() {\n      if (this.step >= 3) {\n        try {\n          const result = this.calc(this.arr[0]);\n          if (result == 24) {\n            console.log(\"游戏胜利！\");\n            this.gameManager.setWin();\n          } else {\n            console.log(\"游戏失败！\");\n            this.gameManager.setLose();\n          }\n        } catch (error) {\n          console.log(\"计算过程出错:\", error.message);\n          this.gameManager.stopAuto();\n        }\n        return;\n      }\n      let step = this.step;\n      let temp = [...this.arr];\n      let f = this.process(temp, temp.length, 24);\n      if (!f) {\n        this.gameManager.setLose();\n        return;\n      }\n      this.cards2.splice(2, 1, temp[0]);\n      if (step >= 2) {\n        return;\n      }\n      let temp00 = temp[0][0],\n        temp02 = temp[0][2];\n      let l = Number.isFinite(temp00);\n      let r = Number.isFinite(temp02);\n\n      this.cards2.splice(\n        1,\n        1,\n        l\n          ? temp02\n          : r\n            ? temp[0][0]\n            : first(temp00) == first(this.cards2[0])\n              ? temp02\n              : temp00,\n      );\n      if (step >= 1) {\n        return;\n      }\n\n      this.cards2.splice(\n        0,\n        1,\n        l\n          ? Number.isFinite(temp02[0])\n            ? temp02[2]\n            : temp02[0]\n          : r\n            ? Number.isFinite(temp00[0])\n              ? temp00[2]\n              : temp00[0]\n            : temp00,\n      );\n      console.log(this.cards2);\n    },\n    /**\n     * 渲染文本视图 - 显示当前游戏状态\n     * 用于终端交互式游戏\n     */\n    renderTextView() {\n      console.log('\\n╔════════════════════════════════════════════════╗');\n      console.log('║              24点游戏 (Point24)               ║');\n      console.log('╚════════════════════════════════════════════════╝');\n      console.log(`\\n步数: ${this.step}\\n`);\n      \n      // 显示4张牌\n      console.log('━━━ 当前牌面 ━━━');\n      const cards = [];\n      for (let i = 0; i < 4; i++) {\n        if (this.arr[i] !== undefined) {\n          const cardText = getCardPlaceholderText(this.first(this.arr[i]));\n          cards.push(`[${i}] ${cardText}`);\n        }\n      }\n      console.log(`  ${cards.join('  ')}\\n`);\n      \n      // 显示运算符\n      console.log('━━━ 可用运算符 ━━━');\n      console.log('  [+] 加  [-] 减  [×] 乘  [÷] 除\\n');\n      \n      // 显示计算历史\n      if (this.history && this.history.length > 0) {\n        console.log('━━━ 计算历史 ━━━');\n        this.history.forEach((h, idx) => {\n          console.log(`  ${idx + 1}. ${h}`);\n        });\n        console.log('');\n      }\n      \n      // 显示当前结果\n      if (this.result !== undefined && this.result !== null) {\n        console.log(`当前结果: ${this.result}`);\n        if (this.result === 24) {\n          console.log('🎉 恭喜！达到24点！');\n        }\n      }\n      \n      return '渲染完成';\n    },\n    \n    /**\n     * 获取当前可用的操作列表\n     * 用于终端交互式游戏\n     */\n    getAvailableActions() {\n      const actions = [];\n      \n      // 撤销按钮\n      actions.push({\n        id: 1,\n        label: '撤销 (◀︎)',\n        method: 'undo',\n        args: [],\n        disabled: !this.canUndo\n      });\n      \n      // 重新开始按钮\n      actions.push({\n        id: 2,\n        label: '重新开始 (RESTART)',\n        method: 'goon',\n        args: []\n      });\n      \n      // 过滤掉禁用的按钮\n      return actions.filter(a => !a.disabled);\n    },\n  },\n};\n\n// 使用工厂函数创建增强的point24组件并导出\nexport default GameComponentPresets.puzzleGame(Point24, 800);\n","import { render } from \"./point24.vue?vue&type=template&id=eaeab1bc&scoped=true\"\nimport script from \"./point24.vue?vue&type=script&lang=js\"\nexport * from \"./point24.vue?vue&type=script&lang=js\"\n\nimport \"./point24.vue?vue&type=style&index=0&id=eaeab1bc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-eaeab1bc\"]])\n\nexport default __exports__","<template>\n  <GameLayout\n    v-bind=\"gameLayoutProps\"\n    :lose-title=\"''\"\n    :lose-subtitle=\"'YOUR LUCKY CLASSES:'\"\n    :lose-buttons=\"[\n      {\n        text: 'GO ON',\n        callback: goon,\n        disabled: false,\n      },\n    ]\"\n    :lose-modal-style=\"{ backgroundColor: 'rgba(0,0,0,0.8)' }\"\n    @step=\"stepFn\"\n    @auto=\"pass\"\n    @goon=\"goon\"\n  >\n    <template #game-content>\n      <div class=\"row\">\n        <div class=\"center\">\n          <ul\n            class=\"cardsul\"\n            style=\"\n              padding-left: 0;\n              max-width: 43.125rem;\n              justify-content: space-between;\n              margin-top: 11.25rem;\n            \"\n          >\n            <li\n              v-for=\"(item, i) in arr\"\n              :key=\"i\"\n              class=\"cards m-0\"\n              :class=\"'cards' + i\"\n            >\n              <CardImage\n                v-for=\"(card, j) in item\"\n                :key=\"card\"\n                class=\"m-0 card abso\"\n                :style=\"{\n                  top: ((month == i ? j : 1 + j) * 30) / 16 + 'rem',\n                  left: 0,\n                }\"\n                :card-id=\"\n                  cards2[i] > j ||\n                  (month == i && ((month == 12 && j == 3) || j == 4))\n                    ? card\n                    : 'bg'\n                \"\n              />\n              <div\n                v-show=\"i == 12 && month != i\"\n                class=\"m-0 card\"\n                style=\"background-color: #719192\"\n              ></div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </template>\n\n    <template #lose-cards>\n      <div class1=\"row\" style=\"margin-top: 0.625rem\">\n        <div>\n          <ul class=\"cardsul\" style=\"padding-left: 0; max-width: 46.25rem\">\n            <CardImage\n              v-for=\"(item, i) in visibleCards\"\n              :key=\"i\"\n              :card-id=\"item.cardId\"\n              class=\"card\"\n            />\n          </ul>\n        </div>\n      </div>\n    </template>\n  </GameLayout>\n</template>\n\n<script>\nimport MonthComponent from \"./month.js\";\n\nconst component = {\n  ...MonthComponent,\n  computed: {\n    ...MonthComponent.computed,\n    visibleCards() {\n      return this.cards2\n        .map((item, i) => ({ originalItem: item, index: i, cardId: i * 4 + 1 }))\n        .filter(item => item.originalItem >= 4 && item.index < 12);\n    }\n  }\n};\n\nexport default component;\n</script>\n\n<style scoped>\n@import url(\"./sum.css\");\n\n.cards12 {\n  position: absolute;\n  top: -11.25rem;\n  height: 9.375rem;\n  min-width: 25rem;\n  width: 100%;\n  height: 9.375rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n}\n.cards12 .card {\n  position: static;\n}\n</style>\n","import { shuffleCards } from \"../utils/help.js\";\nimport { GameComponentPresets } from \"../utils/gameComponentFactory.js\";\nimport { getCardPlaceholderText } from \"../utils/cardUtils.js\";\n\nconst Month = {\n  name: \"Month\",\n  data() {\n    return {\n      title: \"Month\",\n      month: 12,\n      cards1: [],\n      cards2: [],\n      arr: [],\n      number: 52,\n    };\n  },\n  // 初始化\n  methods: {\n    init() {\n      this.month = 12;\n      this.cards1.splice(0);\n      this.cards2.splice(0);\n      this.arr.splice(0);\n      let cards = this.cards1;\n      for (let i = 0; i < this.number; i++) {\n        cards.push(i);\n      }\n      shuffleCards(cards, this.number);\n      for (let i = 0; i < this.number >> 2; i++) {\n        this.cards2.push(0);\n        this.arr.push(cards.splice(0, 4));\n      }\n    },\n    async push(arr, item) {\n      arr.push(item);\n    },\n    // 摸牌\n    async hit() {\n      let currentCard = this.arr[this.month].pop();\n      var value = currentCard >> 2;\n      this.arr[value].unshift(currentCard);\n      this.month = value;\n      this.cards2[value]++;\n    },\n    \n    /**\n     * 渲染文本视图 - 显示当前游戏状态\n     * 用于终端交互式游戏\n     */\n    renderTextView() {\n      console.log('\\n╔════════════════════════════════════════════════╗');\n      console.log('║              月份游戏 (Month)                 ║');\n      console.log('╚════════════════════════════════════════════════╝');\n      console.log(`\\n步数: ${this.step}\\n`);\n      \n      // // 显示牌堆\n      // console.log('━━━ 牌堆 ━━━');\n      // if (this.cards1.length > 0) {\n      //   const topCard = this.cards1[this.cards1.length - 1];\n      //   console.log(`  [牌堆] ${getCardPlaceholderText(topCard)} (剩余 ${this.cards1.length} 张)`);\n      // } else {\n      //   console.log('  [牌堆] (空)');\n      // }\n      // console.log('');\n      \n      // 显示12个月份位置\n      const months = ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'];\n      for (let i = 0; i < 12; i++) {\n        const count = this.cards2[i];\n        console.log(`  [${months[i]}] ` + this.arr[i].map((c, i) => `${i < count || i >= 4 ? getCardPlaceholderText(c) : \"[?]\"}`).join(' ') + (count >= 4 ? ' [✓] 已完成' : ''));\n      }\n      \n      // 显示第13个位置\n      const count13 = this.cards2[12];\n      console.log(`  [牌堆] ` + this.arr[12].map((c, i) => `${i < count13 || i >= 3 ? getCardPlaceholderText(c) : \"[?]\"}`).join(' ') + (count13 >= 4 ? ' [✓] 已完成' : `剩余 ${4 - count13} 次机会`));\n      \n      return '渲染完成';\n    },\n    \n    /**\n     * 获取当前可用的操作列表\n     * 用于终端交互式游戏\n     */\n    getAvailableActions() {\n      const actions = [];\n      \n      // 重新开始按钮\n      actions.push({\n        id: 1,\n        label: '重新开始 (RESTART)',\n        method: 'goon',\n        args: []\n      });\n      \n      // 单步执行按钮\n      const hasCards = this.cards1.length > 0;\n      actions.push({\n        id: 2,\n        label: '单步执行 (►) - 翻一张牌',\n        method: 'stepFn',\n        args: [],\n        disabled: !hasCards\n      });\n      \n      // 自动运行按钮\n      const isAutoRunning = this.gameManager?.isAutoRunning || false;\n      actions.push({\n        id: 3,\n        label: isAutoRunning ? '停止自动 (STOP)' : '自动运行 (AUTO)',\n        method: 'pass',\n        args: []\n      });\n      \n      // 过滤掉禁用的按钮\n      return actions.filter(a => !a.disabled);\n    },\n  },\n};\n\n// 使用工厂函数创建增强的month组件并导出\nexport default GameComponentPresets.simpleGame(Month, 1000);\n","import { render } from \"./month.vue?vue&type=template&id=06342054&scoped=true\"\nimport script from \"./month.vue?vue&type=script&lang=js\"\nexport * from \"./month.vue?vue&type=script&lang=js\"\n\nimport \"./month.vue?vue&type=style&index=0&id=06342054&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-06342054\"]])\n\nexport default __exports__","<template>\n  <GameLayout\n    v-bind=\"gameLayoutProps\"\n    :lose-subtitle=\"'NO PAIR'\"\n    @undo=\"undo\"\n    @goon=\"goon\"\n    @step=\"stepFn\"\n    @auto=\"pass\"\n  >\n    <template #game-content>\n      <div class=\"row\">\n        <div>\n          <ul\n            class=\"cardsul cards\"\n            style=\"\n              padding-left: 0;\n              width: 100%;\n              height: 46.875rem;\n              max-width: 31.25rem;\n              margin: auto;\n            \"\n          >\n            <CardImage\n              v-for=\"(item, i) in cards1\"\n              :key=\"i\"\n              v-show=\"!done(item)\"\n              class=\"card abso\"\n              :style=\"map[i]\"\n              style=\"width: 20%; height: 9.375rem; margin: 0\"\n              :card-id=\"check(i) ? item : 'bg'\"\n              @click=\"canOperate && clickCard(item, i)\"\n              :class=\"{ shanshuo: sign == item }\"\n            />\n          </ul>\n        </div>\n      </div>\n    </template>\n  </GameLayout>\n</template>\n\n<script>\nimport TortoiseComponent from \"./Tortoise.js\";\n\nconst component = TortoiseComponent;\n\nexport default component;\n</script>\n\n<style scoped>\n@import url(\"./sum.css\");\n</style>\n","import { shuffleCards } from \"../utils/help.js\";\nimport { GameComponentPresets } from \"../utils/gameComponentFactory.js\";\nimport { getCardPlaceholderText } from \"../utils/cardUtils.js\";\n\nconst Tortoise = {\n  name: \"Tortoise\",\n  data() {\n    return {\n      title: \"Tortoise\",\n      sign: -1,\n      cards1: [],\n      next: [],\n      number: 54,\n      map: [\n        { \"z-index\": 0, left: \"10%\", top: \"4.6875rem\", up: [16, 30] },\n        { \"z-index\": 0, left: \"30%\", top: \"4.6875rem\", up: [16, 17, 31] },\n        { \"z-index\": 0, left: \"50%\", top: \"4.6875rem\", up: [17, 18, 31] },\n        { \"z-index\": 0, left: \"70%\", top: \"4.6875rem\", up: [18, 32] },\n        { \"z-index\": 0, left: \"10%\", top: \"14.0625rem\", up: [16, 19, 37] },\n        { \"z-index\": 0, left: \"30%\", top: \"14.0625rem\", up: [16, 17, 19, 20] },\n        { \"z-index\": 0, left: \"50%\", top: \"14.0625rem\", up: [17, 18, 20, 21] },\n        { \"z-index\": 0, left: \"70%\", top: \"14.0625rem\", up: [18, 21, 33] },\n        { \"z-index\": 0, left: \"10%\", top: \"23.4375rem\", up: [19, 22, 37] },\n        { \"z-index\": 0, left: \"30%\", top: \"23.4375rem\", up: [19, 20, 22, 23] },\n        { \"z-index\": 0, left: \"50%\", top: \"23.4375rem\", up: [20, 21, 23, 24] },\n        { \"z-index\": 0, left: \"70%\", top: \"23.4375rem\", up: [21, 24, 33] },\n        { \"z-index\": 0, left: \"10%\", top: \"32.8125rem\", up: [22, 36] },\n        { \"z-index\": 0, left: \"30%\", top: \"32.8125rem\", up: [22, 23, 35] },\n        { \"z-index\": 0, left: \"50%\", top: \"32.8125rem\", up: [23, 24, 35] },\n        { \"z-index\": 0, left: \"70%\", top: \"32.8125rem\", up: [24, 34] },\n        { \"z-index\": 1, left: \"20%\", top: \"9.375rem\", up: [25] },\n        { \"z-index\": 1, left: \"40%\", top: \"9.375rem\", up: [25, 26] },\n        { \"z-index\": 1, left: \"60%\", top: \"9.375rem\", up: [26] },\n        { \"z-index\": 1, left: \"20%\", top: \"18.75rem\", up: [25, 27] },\n        { \"z-index\": 1, left: \"40%\", top: \"18.75rem\", up: [25, 26, 27, 28] },\n        { \"z-index\": 1, left: \"60%\", top: \"18.75rem\", up: [26, 28] },\n        { \"z-index\": 1, left: \"20%\", top: \"28.125rem\", up: [27] },\n        { \"z-index\": 1, left: \"40%\", top: \"28.125rem\", up: [27, 28] },\n        { \"z-index\": 1, left: \"60%\", top: \"28.125rem\", up: [28] },\n        { \"z-index\": 2, left: \"30%\", top: \"14.0625rem\", up: [29] },\n        { \"z-index\": 2, left: \"50%\", top: \"14.0625rem\", up: [29] },\n        { \"z-index\": 2, left: \"30%\", top: \"23.4375rem\", up: [29] },\n        { \"z-index\": 2, left: \"50%\", top: \"23.4375rem\", up: [29] },\n        { \"z-index\": 3, left: \"40%\", top: \"18.75rem\", up: [] },\n        { \"z-index\": 1, left: \"0\", top: \"0\", up: [38] },\n        { \"z-index\": 1, left: \"40%\", top: \"0\", up: [39] },\n        { \"z-index\": 1, left: \"80%\", top: \"0\", up: [40] },\n        { \"z-index\": 1, left: \"80%\", top: \"18.75rem\", up: [41] },\n        { \"z-index\": 1, left: \"80%\", top: \"37.5rem\", up: [42] },\n        { \"z-index\": 1, left: \"40%\", top: \"37.5rem\", up: [43] },\n        { \"z-index\": 1, left: \"0\", top: \"37.5rem\", up: [44] },\n        { \"z-index\": 1, left: \"0\", top: \"18.75rem\", up: [45] },\n        { \"z-index\": 2, left: \"0\", top: \"2.3438rem\", up: [46] },\n        { \"z-index\": 2, left: \"35%\", top: \"0\", up: [47] },\n        { \"z-index\": 2, left: \"75%\", top: \"0\", up: [48] },\n        { \"z-index\": 2, left: \"80%\", top: \"16.4063rem\", up: [49] },\n        { \"z-index\": 2, left: \"80%\", top: \"35.1563rem\", up: [50] },\n        { \"z-index\": 2, left: \"45%\", top: \"37.5rem\", up: [51] },\n        { \"z-index\": 2, left: \"5%\", top: \"37.5rem\", up: [52] },\n        { \"z-index\": 2, left: \"0\", top: \"21.0938rem\", up: [53] },\n        { \"z-index\": 3, left: \"0\", top: \"4.6875rem\", up: [] },\n        { \"z-index\": 3, left: \"30%\", top: \"0\", up: [] },\n        { \"z-index\": 3, left: \"70%\", top: \"0\", up: [] },\n        { \"z-index\": 3, left: \"80%\", top: \"14.0625rem\", up: [] },\n        { \"z-index\": 3, left: \"80%\", top: \"32.8125rem\", up: [] },\n        { \"z-index\": 3, left: \"50%\", top: \"37.5rem\", up: [] },\n        { \"z-index\": 3, left: \"10%\", top: \"37.5rem\", up: [] },\n        { \"z-index\": 3, left: \"0\", top: \"23.4375rem\", up: [] },\n      ],\n    };\n  },\n  // 初始化\n  methods: {\n    init() {\n      this.sign = -1;\n      this.cards1.splice(0);\n      let cards = this.cards1;\n      for (let i = 0; i < this.number; i++) {\n        cards.push(i);\n      }\n      shuffleCards(cards, this.number);\n      this.autoCalc();\n    },\n    async stepFn() {\n      if (this.step >= this.number) {\n        return;\n      }\n      await this.gameManager.step(async () => {\n        let next,\n          next_i,\n          max = -1;\n        let fn = (temp) => {\n          if (temp == this.sign) {\n            return;\n          }\n          if (this.done(temp)) {\n            return;\n          }\n          let index = this.cards1.indexOf(temp);\n          if (this.check(index) && this.map[index][\"z-index\"] > max) {\n            next = temp;\n            next_i = index;\n            max = this.map[index][\"z-index\"];\n          }\n        };\n        if (this.sign != -1 && this.sign << 2 != this.next[0] << 2) {\n          let card = this.sign >> 2;\n          for (let i = 0; i < 4; i++) {\n            let temp = card * 4 + i;\n            fn(temp);\n          }\n        }\n        if (max < 0) {\n          for (let temp of this.next) {\n            fn(temp);\n          }\n        }\n        this.clickCard(next, next_i);\n      });\n    },\n    check(i) {\n      return (\n        this.map[i] &&\n        this.map[i].up.findIndex((up) => !this.done(this.cards1[up])) < 0\n      );\n    },\n    done(card) {\n      return this.gameManager.history.indexOf(card) >= 0;\n    },\n    clickCard(card, i) {\n      if (!this.check(i)) {\n        return;\n      }\n      if (this.sign == card) {\n        this.sign = -1;\n      } else if (this.sign >> 2 != card >> 2) {\n        this.sign = card;\n      } else {\n        this.gameManager.recordOperation(this.sign);\n        this.gameManager.recordOperation(card);\n        this.sign = -1;\n      }\n    },\n    undo() {\n      this.sign = -1;\n      this.gameManager.undo();\n      this.gameManager.undo();\n    },\n    autoCalc() {\n      let step = this.step;\n      if (step % 2 == 1) {\n        return;\n      }\n      if (step >= this.number) {\n        this.gameManager.setWin();\n        return;\n      }\n      let temp = [],\n        i,\n        max = -1,\n        m = -1,\n        d = false;\n      for (i = this.number - 1; i >= 0; i--) {\n        if (!this.done(i)) {\n          let card = this.cards1.indexOf(i);\n          if (this.check(card)) {\n            temp.push(i);\n            if (this.map[card][\"z-index\"] > max) {\n              max = this.map[card][\"z-index\"];\n            }\n          }\n        } else {\n          d = true;\n        }\n        if (i % 4 == 0) {\n          if (temp.length > 1) {\n            if (d) {\n              this.next = temp;\n              return;\n            }\n            if (max > m) {\n              this.next = temp;\n              m = max;\n            }\n          }\n          max = -1;\n          temp = [];\n          d = false;\n        }\n      }\n      if (m < 0) {\n        this.gameManager.setLose();\n      }\n    },\n    \n    /**\n     * 渲染文本视图 - 字符画形式显示当前游戏状态\n     * 通过16格子(4x4)系统模拟浏览器渲染效果，使用细线边框\n     * 画布20x20，卡牌4x4，后渲染的自然覆盖先渲染的\n     */\n    renderTextView() {\n      console.log('\\n╔════════════════════════════════════════════════╗');\n      console.log('║              龟兔赛跑 (Tortoise)              ║');\n      console.log('╚════════════════════════════════════════════════╝');\n      console.log(`\\n步数: ${this.step} / ${this.number}`);\n      console.log(`已配对: ${this.step} 张 | 剩余: ${this.number - this.step} 张\\n`);\n      \n      if (this.sign !== -1) {\n        const signIndex = this.cards1.indexOf(this.sign);\n        const signCard = getCardPlaceholderText(this.sign);\n        console.log(`🎯 当前选中: ${signCard} (位置 ${signIndex})\\n`);\n      }\n      \n      // 创建字符画布：20行 × 20列\n      const CANVAS_ROWS = 20;\n      const CANVAS_COLS = 20;\n      const canvas = Array(CANVAS_ROWS).fill(null).map(() => Array(CANVAS_COLS).fill('·'));\n      \n      // 卡牌尺寸（字符单位）\n      const CARD_ROWS = 4;  // 4行\n      const CARD_COLS = 4;  // 4列\n      \n      // 布局参数（来自CSS）\n      const LAYOUT_WIDTH = 100;  // 100%\n      const LAYOUT_HEIGHT = 46.875; // rem\n      \n      // 收集所有未完成的卡牌，按z-index排序（从低到高）\n      const activeCards = [];\n      this.cards1.forEach((cardId, posIdx) => {\n        if (!this.done(cardId)) {\n          const mapInfo = this.map[posIdx];\n          const canClick = this.check(posIdx);\n          const isSelected = cardId === this.sign;\n          \n          activeCards.push({\n            cardId,\n            posIdx,\n            left: parseFloat(mapInfo.left),\n            top: parseFloat(mapInfo.top),\n            zIndex: mapInfo[\"z-index\"],\n            canClick,\n            isSelected,\n            cardText: getCardPlaceholderText(cardId)\n          });\n        }\n      });\n      \n      // 按z-index升序排列（底层先渲染）\n      activeCards.sort((a, b) => a.zIndex - b.zIndex);\n      \n      // 逐层渲染卡牌（后渲染的自然覆盖先渲染的）\n      activeCards.forEach(card => {\n        // 计算卡牌在字符画布中的位置\n        const startCol = Math.round((card.left / LAYOUT_WIDTH) * (CANVAS_COLS - CARD_COLS));\n        const startRow = Math.round((card.top / LAYOUT_HEIGHT) * (CANVAS_ROWS - CARD_ROWS));\n        \n        // 确保位置在有效范围内\n        const safeStartRow = Math.max(0, Math.min(startRow, CANVAS_ROWS - CARD_ROWS));\n        const safeStartCol = Math.max(0, Math.min(startCol, CANVAS_COLS - CARD_COLS));\n        \n        // 渲染16格子卡牌\n        for (let row = 0; row < CARD_ROWS; row++) {\n          for (let col = 0; col < CARD_COLS; col++) {\n            const canvasRow = safeStartRow + row;\n            const canvasCol = safeStartCol + col;\n            \n            if (canvasRow < CANVAS_ROWS && canvasCol < CANVAS_COLS) {\n              let char = ' ';\n              \n              if (row === 0) {\n                // 第一行：上边框\n                if (this.sign == card.cardId) {\n                  char = \"▄\";\n                } else if (col === 0) {\n                  char = '┌'; // 左上角\n                } else if (col === CARD_COLS - 1) {\n                  char = '┐'; // 右上角\n                } else {\n                  char = '──'; // 上边框（占2个字符宽度）\n                }\n              } else if (row === CARD_ROWS - 1) {\n                // 最后一行：下边框\n                if (this.sign == card.cardId) {\n                  char = \"▀\";\n                } else if (col === 0) {\n                  char = '└'; // 左下角\n                } else if (col === CARD_COLS - 1) {\n                  char = '┘'; // 右下角\n                } else {\n                  char = '──'; // 下边框（占2个字符宽度）\n                }\n              } else if (col === 0 || col === CARD_COLS - 1) {\n                // 左右边框\n                char = this.sign == card.cardId? \"█\" : '│';\n              } else if (card.canClick) {\n                // 可点击卡牌的内部内容\n                if (row === 1 && col === 1) {\n                  char = card.cardText[0] || ' '; // 花色\n                } else if (row === 1 && col === 2) {\n                  char = card.cardText[1] || ' '; // 点数\n                } else if (row === 2 && col === 1) {\n                  char = card.cardText[1] || ' '; // 下方点数\n                } else if (row === 2 && col === 2) {\n                  char = card.cardText[0] || ' '; // 下方花色\n                }\n              } else {\n                // 不可点击卡牌的内部内容\n                if (row === 1 && (col === 1 || col === 2)) {\n                  char = '·'; // 中间点\n                } else if (row === 2 && (col === 1 || col === 2)) {\n                  char = '·'; // 下方点\n                }\n              }\n              \n              // 处理双字符边框\n              if (char === '──') {\n                canvas[canvasRow][canvasCol] = '─';\n                if (canvasCol + 1 < CANVAS_COLS) {\n                  canvas[canvasRow][canvasCol + 1] = '─';\n                }\n              } else {\n                canvas[canvasRow][canvasCol] = char;\n              }\n            }\n          }\n        }\n      });\n      \n      // 输出字符画\n      console.log('\\n━━━ 游戏布局 (字符画) ━━━');\n      console.log('画布: 20行 × 20列，每张卡牌: 4行 × 4列\\n');\n      \n      // 添加边框\n      const borderedCanvas = [];\n      borderedCanvas.push('┌' + '─'.repeat(CANVAS_COLS) + '┐');\n      \n      canvas.forEach(row => {\n        borderedCanvas.push('│' + row.join('') + '│');\n      });\n      \n      borderedCanvas.push('└' + '─'.repeat(CANVAS_COLS) + '┘');\n      \n      console.log(borderedCanvas.join('\\n'));\n      \n      // 图例\n      console.log('\\n图例:');\n      console.log('  ┌──┐ = 卡牌边框  ▄ = 选中卡牌边框 ♥5 = 可点击卡牌内容  ·· = 不可点击卡牌');\n      \n      // 显示下一步提示\n      if (this.next && this.next.length > 0) {\n        const nextCards = this.next.map(c => getCardPlaceholderText(c)).join(', ');\n        console.log(`\\n💡 提示: 可配对的卡片: ${nextCards}`);\n      }\n      \n      return '字符画渲染完成';\n    },\n    \n    /**\n     * 获取当前可用的操作列表\n     * 用于终端交互式游戏\n     */\n    getAvailableActions() {\n      const actions = [];\n      \n      // 撤销按钮\n      actions.push({\n        id: 1,\n        label: '撤销 (◀︎)',\n        method: 'undo',\n        args: [],\n        disabled: !this.canUndo\n      });\n      \n      // 重新开始按钮\n      actions.push({\n        id: 2,\n        label: '重新开始 (RESTART)',\n        method: 'goon',\n        args: []\n      });\n      \n      // 单步执行按钮\n      actions.push({\n        id: 3,\n        label: '单步执行 (►)',\n        method: 'stepFn',\n        args: [],\n        disabled: this.step >= this.number\n      });\n      \n      // 自动运行按钮\n      const isAutoRunning = this.gameManager?.isAutoRunning || false;\n      actions.push({\n        id: 4,\n        label: isAutoRunning ? '停止自动 (STOP)' : '自动运行 (AUTO)',\n        method: 'pass',\n        args: []\n      });\n      \n      // 过滤掉禁用的按钮\n      return actions.filter(a => !a.disabled);\n    },\n  },\n};\n\n// 使用工厂函数创建增强的Tortoise组件并导出\nexport default GameComponentPresets.cardGame(Tortoise, 500);\n","import { render } from \"./Tortoise.vue?vue&type=template&id=0ad3d044&scoped=true\"\nimport script from \"./Tortoise.vue?vue&type=script&lang=js\"\nexport * from \"./Tortoise.vue?vue&type=script&lang=js\"\n\nimport \"./Tortoise.vue?vue&type=style&index=0&id=0ad3d044&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0ad3d044\"]])\n\nexport default __exports__","<template>\n  <GameLayout\n    v-bind=\"gameLayoutProps\"\n    :lose-subtitle=\"n + '/' + (number + 1) * 4\"\n    :lose-buttons=\"[\n      {\n        text: 'RESTART',\n        callback: goon,\n        disabled: false,\n      },\n      {\n        text: 'UNDO',\n        callback: undo,\n        disabled: undoDisabled,\n      },\n    ]\"\n    @undo=\"undo\"\n    @goon=\"goon\"\n    @step=\"stepFn\"\n    @auto=\"pass\"\n  >\n    <template #game-content>\n      <div class=\"row\">\n        <div>\n          <ul\n            class=\"cardsul flex-col\"\n            :style=\"{ height: (150 * (number + 1)) / 16 + 'rem' }\"\n            style=\"\n              padding-left: 0;\n              width: 100%;\n              max-width: 31.25rem;\n              margin: 0 auto;\n              position: static;\n            \"\n          >\n            <CardImage\n              v-for=\"(item, i) in cards1\"\n              :key=\"i\"\n              class=\"card m-0\"\n              style=\"width: 25%; height: 9.375rem\"\n              :card-id=\"item\"\n              :hide=\"item < 0\"\n              @click=\"canOperate && (item >= 0 ? clickCard(item) : cards1[i - 1] >= 4 && clickSign(i))\"\n              :class=\"{ shanshuo: item >= 0 && canMoveCard(item) }\"\n            >\n              <span v-if=\"cards1[i - 1] >= 4\" class=\"m-0\">{{ getCurrentCandidateCard(i) }}</span>\n            </CardImage>\n          </ul>\n        </div>\n      </div>\n    </template>\n  </GameLayout>\n</template>\n\n<script>\nimport SortComponent from \"./Sort.js\";\n\nconst component = SortComponent;\n\nexport default component;\n</script>\n\n<style scoped>\n@import url(\"./sum.css\");\n</style>\n","// 候选卡片评估工具函数\n\n/**\n * 创建候选对象，延迟计算特征值\n * @param {number} targetCard - 目标卡片\n * @param {number} slotIndex - 空位索引\n * @param {Object} context - 上下文对象，包含必要的方法和属性\n * @param {number} candidatePriority - 候选优先级\n * @param {Object} t - 临时对象信息\n * @param {number} currentTargetIdx - 当前目标索引\n * @param {Object} ruleBasedScore - 基于规则的评分对象（可选）\n * @returns {Object} 候选对象\n */\nexport function createCandidate(targetCard, slotIndex, context, candidatePriority, t, currentTargetIdx, ruleBasedScore = null) {\n  const currentCandidate = {\n    targetCard,\n    slotIndex,\n    ruleBasedScore: ruleBasedScore,  // 保存rule-based评分\n    // 统一使用大于比较，对需要小于比较的特征取反\n    _getters: [\n      // 【新规则第1优先级】空位优先级（rank越小越优先）\n      () => {\n        if (ruleBasedScore) {\n          return ruleBasedScore.slotPriority;\n        }\n        // 如果没有rule-based评分，使用原有的priority\n        return candidatePriority;\n      },\n      // 【新规则第2优先级】排除标记（被排除的候选排在后面）\n      () => {\n        if (ruleBasedScore && ruleBasedScore.excludeReason) {\n          return -1000000; // 大负数使其排在最后\n        }\n        return 0;\n      },\n      // 卡片在列中的位置 (d=0.057, ↓)\n      () => {\n          if (currentCandidate._feature2 === undefined) {\n          currentCandidate._feature2 = currentTargetIdx % (context.number + 1);\n          }\n          return -currentCandidate._feature2;\n      },\n      // 【新规则第3优先级】matchNextCard得分\n      () => {\n        if (ruleBasedScore) {\n          return ruleBasedScore.matchNextCard;\n        }\n        return 0;\n      },\n      // 【新规则第4优先级】候选卡所在列前后相邻的空位数\n      () => {\n        if (ruleBasedScore) {\n          return ruleBasedScore.adjacentEmptyCount;\n        }\n        return 0;\n      },\n      // 【新规则第5优先级】候选卡所在列空位总数\n      () => {\n        if (ruleBasedScore) {\n          return ruleBasedScore.columnEmptyCount;\n        }\n        return 0;\n      },\n      // 【原算法优先级】保留作为后续tiebreaker\n      () => {\n        return candidatePriority;\n      },\n      // 【原算法深度】\n      () => {\n        if (!currentCandidate._deep) {\n          currentCandidate._deep = t.deep;\n        }\n        return currentCandidate._deep;\n      },\n      // 获胜概率 (分治评估，正常比较)\n      () => {\n        if (currentCandidate._winProbability === undefined) {\n          // 使用分治算法评估移动后的获胜可达性\n          const simulatedCards = [...context.cards1];\n          const slotId = simulatedCards[t.index];\n          simulatedCards[currentTargetIdx] = slotId;\n          simulatedCards[t.index] = targetCard;\n          currentCandidate._winProbability = context.estimateWinProbability(simulatedCards);\n        }\n        return currentCandidate._winProbability;\n      },\n      // 距离 (取反，因为原逻辑是小于比较)\n      () => {\n        if (!currentCandidate._diff) {\n          currentCandidate._diff = Math.abs(\n            (targetCard >> 2) - (context.number - 1) + ((t.index % (context.number + 1)))\n          );\n        }\n        return -currentCandidate._diff; // 取反，使小于比较变为大于比较\n      },\n        // 1. 卡片等级 (d=0.064, ↑)\n        () => {\n            if (currentCandidate._feature0 === undefined) {\n            currentCandidate._feature0 = targetCard >> 2;\n            }\n            return currentCandidate._feature0;\n        },\n        // 2. 卡片花色 (d=0.052, ↑)\n        () => {\n            if (currentCandidate._feature1 === undefined) {\n            currentCandidate._feature1 = targetCard % 4;\n            }\n            return currentCandidate._feature1;\n        },\n        // 4. 空位在列中的位置 (d=0.213, ↓)\n        () => {\n            if (currentCandidate._feature3 === undefined) {\n            currentCandidate._feature3 = t.index % (context.number + 1);\n            }\n            return -currentCandidate._feature3;\n        },\n        // 5. 空位前牌等级 (d=0.064, ↑)\n        () => {\n            if (currentCandidate._feature4 === undefined) {\n            currentCandidate._feature4 = t.card >> 2;\n            }\n            return currentCandidate._feature4;\n        },\n        // 6. 卡片所在列的空位数 (d=0.003, ↑)\n        () => {\n            if (currentCandidate._feature5 === undefined) {\n            currentCandidate._feature5 = context.countEmptyInColumn(context.cards1, Math.floor(currentTargetIdx / (context.number + 1)));\n            }\n            return currentCandidate._feature5;\n        },\n        // 7. 卡片上方的空位数 (d=0.160, ↑)\n        () => {\n            if (currentCandidate._feature6 === undefined) {\n            currentCandidate._feature6 = context.countEmptyAbove(context.cards1, currentTargetIdx);\n            }\n            return currentCandidate._feature6;\n        },\n        // 8. 卡片下方的空位数 (d=0.098, ↓)\n        () => {\n            if (currentCandidate._feature7 === undefined) {\n            currentCandidate._feature7 = context.countEmptyBelow(context.cards1, currentTargetIdx);\n            }\n            return -currentCandidate._feature7;\n        },\n        // 9. 空位所在列的空位数 (d=0.138, ↓)\n        () => {\n            if (currentCandidate._feature8 === undefined) {\n            currentCandidate._feature8 = context.countEmptyInColumn(context.cards1, Math.floor(t.index / (context.number + 1)));\n            }\n            return -currentCandidate._feature8;\n        },\n        // 10. 空位上方的空位数 (d=0.043, ↑)\n        () => {\n            if (currentCandidate._feature9 === undefined) {\n            currentCandidate._feature9 = context.countEmptyAbove(context.cards1, t.index);\n            }\n            return currentCandidate._feature9;\n        },\n        // 11. 总空位数 (d=0.000, ↓)\n        () => {\n            if (currentCandidate._feature10 === undefined) {\n            currentCandidate._feature10 = context.cards1.filter(c => c < 0).length;\n            }\n            return -currentCandidate._feature10;\n        },\n        // 12. 卡片上方的牌数 (d=0.011, ↑)\n        () => {\n            if (currentCandidate._feature11 === undefined) {\n            currentCandidate._feature11 = context.countCardsAbove(context.cards1, currentTargetIdx);\n            }\n            return currentCandidate._feature11;\n        },\n        // 13. 空位下方已就位的牌数 (d=0.138, ↑)\n        () => {\n            if (currentCandidate._feature12 === undefined) {\n            currentCandidate._feature12 = context.countCorrectBelow(context.cards1, t.index);\n            }\n            return currentCandidate._feature12;\n        },\n        // 14. 同rank的其他候选数 (d=0.021, ↑)\n        () => {\n            if (currentCandidate._feature13 === undefined) {\n            currentCandidate._feature13 = context.countSameRankCandidates(context.cards1, t);\n            }\n            return currentCandidate._feature13;\n        },\n        // 15. 移动后可移动数 (d=0.215, ↑)\n        () => {\n            if (currentCandidate._feature14 === undefined) {\n            const simulatedCards = [...context.cards1];\n            const slotId = simulatedCards[t.index];\n            simulatedCards[currentTargetIdx] = slotId;\n            simulatedCards[t.index] = targetCard;\n            currentCandidate._feature14 = context.countPossibleMoves(simulatedCards);\n            }\n            return currentCandidate._feature14;\n        },\n        // 16. 空位分布熵 (d=0.096, ↓)\n        () => {\n            if (currentCandidate._feature15 === undefined) {\n            const simulatedCards = [...context.cards1];\n            const slotId = simulatedCards[t.index];\n            simulatedCards[currentTargetIdx] = slotId;\n            simulatedCards[t.index] = targetCard;\n            currentCandidate._feature15 = context.calculateEmptyEntropy(simulatedCards);\n            }\n            return -currentCandidate._feature15;\n        },\n        // 17. 移动后已就位牌数 (d=0.189, ↑)\n        () => {\n            if (currentCandidate._feature16 === undefined) {\n            const simulatedCards = [...context.cards1];\n            const slotId = simulatedCards[t.index];\n            simulatedCards[currentTargetIdx] = slotId;\n            simulatedCards[t.index] = targetCard;\n            currentCandidate._feature16 = context.countRestoredCards(simulatedCards);\n            }\n            return currentCandidate._feature16;\n        },\n        // 18. 曼哈顿距离 (d=0.074, ↑)\n        () => {\n            if (currentCandidate._feature17 === undefined) {\n            currentCandidate._feature17 = Math.abs((currentTargetIdx % (context.number + 1)) - (context.number - 1 - (targetCard >> 2))) + Math.abs(Math.floor(currentTargetIdx / (context.number + 1)) - ((targetCard % 4) % context.matchMode));\n            }\n            return currentCandidate._feature17;\n        },\n        // 19. 是否跨列 (d=0.034, ↑)\n        () => {\n            if (currentCandidate._feature18 === undefined) {\n            currentCandidate._feature18 = (Math.floor(currentTargetIdx / (context.number + 1)) !== Math.floor(t.index / (context.number + 1))) ? 1 : 0;\n            }\n            return currentCandidate._feature18;\n        },\n        // 20. slot_score版本2 (d=0.084, ↑)\n        () => {\n            if (currentCandidate._feature19 === undefined) {\n            currentCandidate._feature19 = (t.card >> 2) * 10 - (t.index % (context.number + 1));\n            }\n            return currentCandidate._feature19;\n        },\n        // 21. slot_score版本3 (d=0.310, ↓)\n        () => {\n            if (currentCandidate._feature20 === undefined) {\n            currentCandidate._feature20 = (t.card >> 2) * context.countEmptyBelow(context.cards1, t.index);\n            }\n            return -currentCandidate._feature20;\n        },\n    ],\n  };\n  return currentCandidate;\n}\n\n/**\n * 比较两个候选的优先级函数 - 使用循环和统一的大于比较\n * 优先级：priority > deep > lookahead > winProbability(分治) > diff > rank > prevRank > slotPosition > restoredCount(DP) > cardPosition\n * @param {Object} candidateA - 候选A\n * @param {Object} candidateB - 候选B\n * @returns {boolean} 是否候选A更好\n */\nexport function isBetterCandidate(candidateA, candidateB) {\n  // 使用_getters数组进行循环比较，所有特征都统一为大于比较\n  for (let i = 0; i < candidateA._getters.length; i++) {\n    const valueA = candidateA._getters[i]();\n    const valueB = candidateB._getters[i]();\n    \n    if (valueA > valueB) {\n      return true; // A比B好\n    } else if (valueA < valueB) {\n      return false; // B比A好\n    }\n    // 相等时继续比较下一个特征\n  }\n  \n  // 所有特征都相等，返回false（A不优于B）\n  return false;\n}\n\n/**\n * 游戏状态评估工具方法集合\n */\nexport const gameEvaluationMethods = {\n/**\n * 基于规则的候选卡片优先级计算\n * @param {Object} context - 游戏上下文\n * @param {number} slotId - 空位ID（-1到-4）\n * @param {Object} slotInfo - 空位信息 {index, card}\n * @param {number} candidateCard - 候选卡片\n * @param {number} candidateIdx - 候选卡片索引\n * @returns {Object} 优先级评分对象\n */\ncalculateRuleBasedPriority(context, slotId, slotInfo, candidateCard, candidateIdx) {\n  const { cards1, number, matchMode } = context;\n  const slotIndex = slotInfo.index;\n  const slotPrevCard = slotInfo.card;\n  \n  // 计算列号和行号\n  const colSize = number + 1;\n  // const slotCol = Math.floor(slotIndex / colSize);\n  const slotRow = slotIndex % colSize;\n  const candidateCol = Math.floor(candidateIdx / colSize);\n  const candidateRow = candidateIdx % colSize;\n  \n  const slotPrevRank = slotPrevCard >> 2;\n  const candidateRank = candidateCard >> 2;\n  const candidateSuit = candidateCard % 4;\n  const candidateGroup = candidateSuit % matchMode;\n  \n  // 1. 空位优先级：空位位置号-1的卡的rank（越小越优先）\n  const slotPriority = -slotPrevRank; // 取负数使rank小的优先\n  \n  // 2. 候选卡优先级评分\n  let candidateScore = {\n    slotPriority: slotPriority,\n    excludeReason: null,\n    matchNextCard: 0,\n    adjacentEmptyCount: 0,\n    columnEmptyCount: 0,\n  };\n  \n  // 2.1 排除规则1：候选卡的rank等于同匹配组位置号-1的卡的rank-1\n  // 找到候选卡所在列的位置号-1的卡\n  if (candidateRow > 0) {\n    const prevPosInCandidateCol = candidateIdx - 1;\n    const prevCardInCandidateCol = cards1[prevPosInCandidateCol];\n    if (prevCardInCandidateCol >= 0) {\n      const prevRankInCandidateCol = prevCardInCandidateCol >> 2;\n      const prevSuitInCandidateCol = prevCardInCandidateCol % 4;\n      const prevGroupInCandidateCol = prevSuitInCandidateCol % matchMode;\n      \n      // 如果是同匹配组，且候选卡rank = 该卡rank - 1，则排除\n      if (candidateGroup === prevGroupInCandidateCol && candidateRank === prevRankInCandidateCol - 1) {\n        candidateScore.excludeReason = 'rule1_same_group_rank_minus_1';\n        // return candidateScore;\n      }\n    }\n  }\n  \n  // 2.2 排除规则2：对应空位号的行号>候选卡的行号\n  if (slotRow < candidateRow) {\n    candidateScore.excludeReason = 'rule2_slot_row_greater';\n    // return candidateScore;\n  }\n  \n  // 2.3 优先选择规则：候选卡的rank等于同匹配组位置号+1的卡的rank+1\n  let matchNextCardScore = 0;\n  if (candidateRow < number) {\n    const nextPosInCandidateCol = candidateIdx + 1;\n    const nextCardInCandidateCol = cards1[nextPosInCandidateCol];\n    if (nextCardInCandidateCol >= 0) {\n      const nextRankInCandidateCol = nextCardInCandidateCol >> 2;\n      const nextSuitInCandidateCol = nextCardInCandidateCol % 4;\n      const nextGroupInCandidateCol = nextSuitInCandidateCol % matchMode;\n      \n      // 检查是否满足：同匹配组且候选卡rank = 该卡rank + 1\n      if (candidateGroup === nextGroupInCandidateCol && candidateRank === nextRankInCandidateCol + 1) {\n        // 基础分：10000（回到原来的值）\n        matchNextCardScore = 10000;\n        // 行号越小越好（靠近列顶部）\n        matchNextCardScore -= candidateRow * 100;\n        // 前一张卡的rank越小越好\n        if (candidateRow > 0) {\n          const prevPosInCandidateCol = candidateIdx - 1;\n          const prevCardInCandidateCol = cards1[prevPosInCandidateCol];\n          const prevRankInCandidateCol = prevCardInCandidateCol >> 2;\n          matchNextCardScore -= prevRankInCandidateCol;\n        }\n      }\n    }\n  }\n  candidateScore.matchNextCard = matchNextCardScore;\n  \n  // 2.4 候选卡所在列前后相邻的空位数（越多越好）\n  let adjacentEmptyCount = 0;\n  if (candidateRow > 0 && cards1[candidateIdx - 1] < 0) {\n    adjacentEmptyCount++;\n  }\n  if (candidateRow < number && cards1[candidateIdx + 1] < 0) {\n    adjacentEmptyCount++;\n  }\n  candidateScore.adjacentEmptyCount = adjacentEmptyCount;\n  \n  // 2.5 候选卡所在列空位总数（越多越好）\n  let columnEmptyCount = 0;\n  const colStart = candidateCol * colSize;\n  for (let i = colStart; i < colStart + colSize; i++) {\n    if (cards1[i] < 0) columnEmptyCount++;\n  }\n  candidateScore.columnEmptyCount = columnEmptyCount;\n  \n  return candidateScore;\n},\n\n/**\n * 比较两个候选卡片的优先级（基于新规则）\n * @param {Object} scoreA - 候选A的评分\n * @param {Object} scoreB - 候选B的评分\n * @returns {number} >0表示A更优，<0表示B更优，0表示相等\n */\ncompareRuleBasedPriority(scoreA, scoreB) {\n  // 1. 先比较空位优先级（rank越小越优先）\n  if (scoreA.slotPriority !== scoreB.slotPriority) {\n    return scoreA.slotPriority - scoreB.slotPriority;\n  }\n  \n  // 2. 排除的候选排在后面\n  if (scoreA.excludeReason && !scoreB.excludeReason) return 1;\n  if (!scoreA.excludeReason && scoreB.excludeReason) return -1;\n  if (scoreA.excludeReason && scoreB.excludeReason) return 0;\n  \n  // 3. 比较matchNextCard（越高越好）\n  if (scoreA.matchNextCard !== scoreB.matchNextCard) {\n    return scoreB.matchNextCard - scoreA.matchNextCard;\n  }\n  \n  // 4. 比较相邻空位数（越多越好）\n  if (scoreA.adjacentEmptyCount !== scoreB.adjacentEmptyCount) {\n    return scoreB.adjacentEmptyCount - scoreA.adjacentEmptyCount;\n  }\n  \n  // 5. 比较列空位总数（越多越好）\n  if (scoreA.columnEmptyCount !== scoreB.columnEmptyCount) {\n    return scoreB.columnEmptyCount - scoreA.columnEmptyCount;\n  }\n  \n  return 0;\n},\n\n\n    // === 辅助函数：特征计算 ===\n\n    // 计算列中的空位数\n    countEmptyInColumn(cards, colIdx) {\n        const colStart = colIdx * (this.number + 1);\n        const colEnd = colStart + this.number + 1;\n        let count = 0;\n        for (let i = colStart; i < colEnd; i++) {\n        if (cards[i] < 0) count++;\n        }\n        return count;\n    },\n\n    // 计算位置上方的空位数\n    countEmptyAbove(cards, pos) {\n        const col = Math.floor(pos / (this.number + 1));\n        const colEnd = (col + 1) * (this.number + 1);\n        let count = 0;\n        for (let i = pos + 1; i < colEnd; i++) {\n        if (cards[i] < 0) count++;\n        }\n        return count;\n    },\n\n    // 计算位置下方的空位数\n    countEmptyBelow(cards, pos) {\n        const col = Math.floor(pos / (this.number + 1));\n        const colStart = col * (this.number + 1);\n        let count = 0;\n        for (let i = colStart; i < pos; i++) {\n        if (cards[i] < 0) count++;\n        }\n        return count;\n    },\n\n    // 计算位置上方的牌数\n    countCardsAbove(cards, pos) {\n        const col = Math.floor(pos / (this.number + 1));\n        const colEnd = (col + 1) * (this.number + 1);\n        let count = 0;\n        for (let i = pos + 1; i < colEnd; i++) {\n        if (cards[i] >= 0) count++;\n        }\n        return count;\n    },\n\n    // 计算空位下方已就位的牌数\n    countCorrectBelow(cards, slotIdx) {\n        const col = Math.floor(slotIdx / (this.number + 1));\n        const colStart = col * (this.number + 1);\n        let count = 0;\n        \n        for (let i = colStart; i < slotIdx; i++) {\n        const c = cards[i];\n        if (c < 0) break;\n        \n        const cRank = c >> 2;\n        const cSuit = c % 4;\n        const expectedRank = this.number - 1 - (i % (this.number + 1));\n        \n        if ((cSuit % this.matchMode) === (col % this.matchMode) && cRank === expectedRank) {\n            count++;\n        } else {\n            break;\n        }\n        }\n        \n        return count;\n    },\n\n    // 计算同rank的其他候选数\n    countSameRankCandidates(cards, slot) {\n        let count = 0;\n        const prevCard = slot.card;\n        const prevRank = prevCard >> 2;\n        const targetRank = prevRank - 1;\n        \n        if (targetRank < 0) return 0;\n        \n        const cardGroup = prevCard % this.matchMode;\n        for (let suit = cardGroup; suit < 4; suit += this.matchMode) {\n        const card = targetRank * 4 + suit;\n        const idx = cards.indexOf(card);\n        if (idx >= 0 && idx + 1 < cards.length && cards[idx + 1] < 0) {\n            count++;\n        }\n        }\n        \n        return count;\n    },\n\n    // 计算空位分布熵\n    calculateEmptyEntropy(cards) {\n        const emptyPerCol = [0, 0, 0, 0];\n        let totalEmpty = 0;\n        \n        for (let i = 0; i < cards.length; i++) {\n        if (cards[i] < 0) {\n            totalEmpty++;\n            const col = Math.floor(i / (this.number + 1));\n            emptyPerCol[col]++;\n        }\n        }\n        \n        if (totalEmpty === 0) return 0;\n        \n        let entropy = 0;\n        for (let count of emptyPerCol) {\n        if (count > 0) {\n            const p = count / totalEmpty;\n            entropy -= p * Math.log2(p);\n        }\n        }\n        \n        return entropy;\n    },\n  /**\n   * 前瞻1步：计算给定状态下有多少个可能的移动\n   * @param {Array} cards1Array - 卡片数组\n   * @returns {number} 可能的移动数量\n   */\n    countPossibleMoves(cards1Array) {\n      let count = 0;\n      \n      // 遍历所有空位\n      for (let i = 0; i < cards1Array.length; i++) {\n        if (cards1Array[i] >= 0) continue;  // 不是空位\n        \n        const prevCard = i > 0 ? cards1Array[i - 1] : null;\n        if (prevCard === null || prevCard < 0) continue;  // 空位前没有有效卡片\n        \n        const prevRank = prevCard >> 2;\n        const targetRank = prevRank - 1;\n        if (targetRank < 0) continue;  // 前面是A，无法移动\n        \n        // 查找所有匹配的候选牌\n        const card_group = prevCard % this.matchMode;\n        for (let suit = card_group; suit < 4; suit += this.matchMode) {\n          const targetCard = targetRank * 4 + suit;\n          const cardIdx = cards1Array.indexOf(targetCard);\n          \n          // 检查候选牌是否存在\n          if (cardIdx >= 0) {\n            count++;\n          }\n        }\n      }\n      \n      return count;\n    },\n    \n  /**\n   * 动态规划：计算已还原到正确位置的卡片数量（从高rank开始）\n   * @param {Array} cards1Array - 卡片数组\n   * @returns {number} 已还原的卡片数量\n   */\n    countRestoredCards(cards1Array) {\n      let restoredCount = 0;\n      const colSize = this.number + 1;  // 每列的大小\n      \n      // 从最高rank开始检查（K往下到A=0）\n      for (let rank = this.number - 1; rank >= 0; rank--) {\n        // 检查每种花色\n        for (let suit = 0; suit < 4; suit++) {\n          const card = rank * 4 + suit;\n          const cardIdx = cards1Array.indexOf(card);\n          \n          if (cardIdx < 0) continue;  // 卡片不存在\n          \n          // 计算该卡片的目标列（基于matchMode）\n          const targetGroup = suit % this.matchMode;\n          \n          // 计算该卡片在目标列中应该的位置\n          // 目标列从底部开始：colStart + (number - rank)\n          const colStart = targetGroup * colSize;\n          const expectedPosition = colStart + (this.number - 1 - rank);\n          \n          // 检查卡片是否在正确位置\n          if (cardIdx === expectedPosition) {\n            // 还需要检查该位置下方的所有卡片是否都正确\n            let allBelowCorrect = true;\n            \n            // 检查该位置下方的每个位置\n            for (let checkRank = rank + 1; checkRank < this.number; checkRank++) {\n              const checkPos = colStart + (this.number - 1 - checkRank);\n              const cardAtPos = cards1Array[checkPos];\n              \n              if (cardAtPos < 0) {\n                // 下方有空位，不正确\n                allBelowCorrect = false;\n                break;\n              }\n              \n              const cardAtPosRank = cardAtPos >> 2;\n              const cardAtPosSuit = cardAtPos % 4;\n              const cardAtPosGroup = cardAtPosSuit % this.matchMode;\n              \n              // 检查下方卡片是否属于同一列且rank正确\n              if (cardAtPosGroup !== targetGroup || cardAtPosRank !== checkRank) {\n                allBelowCorrect = false;\n                break;\n              }\n            }\n            \n            if (allBelowCorrect) {\n              restoredCount++;\n            }\n          }\n        }\n      }\n      \n      return restoredCount;\n    },\n    \n  /**\n   * 分治算法：评估获胜状态可达性（0-100分，分数越高越可能获胜）\n   * @param {Array} cards1Array - 卡片数组\n   * @returns {number} 获胜概率分数（0-100）\n   */\n    estimateWinProbability(cards1Array) {\n      const colSize = this.number + 1;\n      const totalCols = 4;\n      let totalScore = 0;\n      let maxScore = 0;\n      \n      // 分治：评估每一行的完成度\n      for (let row = 0; row < colSize; row++) {\n        const rowScore = this.evaluateRowScore(cards1Array, row, colSize, totalCols);\n        totalScore += rowScore.score;\n        maxScore += rowScore.maxScore;\n      }\n      \n      // 计算全局阻塞惩罚\n      const blockPenalty = this.calculateBlockPenalty(cards1Array);\n      \n      // 归一化到0-100\n      const baseScore = maxScore > 0 ? (totalScore / maxScore) * 80 : 0;\n      const finalScore = Math.max(0, baseScore - blockPenalty);\n      \n      return finalScore;\n  },\n\n\n    \n    // 评估单行的完成度（分治子问题）\n    evaluateRowScore(cards1Array, row, colSize, totalCols) {\n      let score = 0;\n      let maxScore = 0;\n      \n      // 对于每一行，检查每一列中的对应位置\n      for (let col = 0; col < totalCols; col++) {\n        const pos = col * colSize + row;\n        const cardAtPos = cards1Array[pos];\n        \n        maxScore += 10;  // 每个位置满分10分\n        \n        if (cardAtPos < 0) {\n          // 空位：检查该rank的所有候选卡片位置\n          const emptySlotsAbove = this.countEmptySlotsAbove(cards1Array, pos);\n          score += Math.max(0, 10 - emptySlotsAbove * 2);  // 上方空位越多，分数越低\n          continue;\n        }\n        \n        const cardRank = cardAtPos >> 2;\n        const cardSuit = cardAtPos % 4;\n        const cardGroup = cardSuit % this.matchMode;\n        \n        // 计算该行应该对应的rank\n        const expectedRank = this.number - 1 - row;\n        \n        // 计算该列应该对应的group\n        const expectedGroup = col % this.matchMode;\n        \n        // 检查卡片是否属于正确的组和rank\n        if (cardGroup === expectedGroup) {\n          // 正确的组\n          if (cardRank === expectedRank) {\n            // rank完全正确\n            score += 10;\n            \n            // 额外奖励：该组下方行都已正确放置\n            if (this.checkRowBelowCorrect(cards1Array, row, col, colSize)) {\n              score += 5;\n              maxScore += 5;\n            }\n          } else if (cardRank > expectedRank) {\n            // rank太高，轻微扣分（还能移走）\n            score += 5;\n          } else {\n            // rank太低，严重扣分（阻塞）\n            score += 2;\n          }\n        } else {\n          // 错误的组，适度扣分\n          score += 3;\n          \n          // 如果rank正确，给予部分分数\n          if (cardRank === expectedRank) {\n            score += 2;\n          }\n        }\n      }\n      \n      return { score, maxScore };\n    },\n    \n    // 计算某位置上方的空位数\n    countEmptySlotsAbove(cards1Array, pos) {\n      let count = 0;\n      const col = Math.floor(pos / (this.number + 1));\n        const colStart = col * (this.number + 1);\n      const colEnd = colStart + this.number + 1;\n      \n      for (let i = pos + 1; i < colEnd; i++) {\n        if (cards1Array[i] < 0) count++;\n              }\n      \n      return count;\n    },\n    \n    // 检查某位置下方的行是否都已正确放置\n    checkRowBelowCorrect(cards1Array, row, col, colSize) {\n      for (let checkRow = row + 1; checkRow < this.number; checkRow++) {\n        const checkPos = col * colSize + checkRow;\n        const cardAtPos = cards1Array[checkPos];\n        \n        if (cardAtPos < 0) return false;\n        \n        const cardRank = cardAtPos >> 2;\n        const expectedRank = this.number - 1 - checkRow;\n        \n        if (cardRank !== expectedRank) return false;\n      }\n      \n      return true;\n    },\n    \n    // 计算全局阻塞惩罚\n    calculateBlockPenalty(cards1Array) {\n      let penalty = 0;\n      const colSize = this.number + 1;\n      \n      // 检查每列的阻塞情况\n      for (let col = 0; col < 4; col++) {\n        const colStart = col * colSize;\n        \n        // 检查是否存在\"死锁\"：高rank卡片被低rank卡片压住\n        for (let i = colStart; i < colStart + colSize - 1; i++) {\n          const card = cards1Array[i];\n          if (card < 0) continue;\n          \n          const cardRank = card >> 2;\n          \n          // 检查上方的卡片\n          for (let j = i + 1; j < colStart + colSize; j++) {\n            const upperCard = cards1Array[j];\n            if (upperCard < 0) continue;\n            \n            const upperRank = upperCard >> 2;\n            \n            // 如果上方卡片rank更低，这是一个阻塞\n            if (upperRank < cardRank) {\n              penalty += 5;\n            }\n          }\n        }\n      }\n      \n      // 检查可移动性：如果没有任何可移动的牌，增加惩罚\n      const possibleMoves = this.countPossibleMoves(cards1Array);\n      if (possibleMoves === 0) {\n        penalty += 20;\n      } else if (possibleMoves === 1) {\n        penalty += 10;\n      }\n      \n      return penalty;\n    },\n};\n\n/**\n * 候选评估工具函数集合\n */\nexport const candidateUtils = {\n  createCandidate,\n  isBetterCandidate,\n  gameEvaluationMethods\n};","import { shuffleCards, wait, checkDeadForeach } from \"../utils/help.js\";\nimport { GameComponentPresets } from \"../utils/gameComponentFactory.js\";\nimport { createCandidate, isBetterCandidate, gameEvaluationMethods } from \"./candidateUtils.js\";\nimport { getCardPlaceholderText } from \"../utils/cardUtils.js\";\n\nconst Sort = {\n  name: \"Sort\",\n  data() {\n    return {\n      title: \"Sort\",\n      cards1: [],\n      number: 4,\n      n: 0,\n      sign_index: -1,\n      matchMode: 1,  // 1=简单(数值), 2=中等(颜色), 4=困难(花色)\n      candidateIntervals: {}, // 存储每个空位的候选卡牌循环定时器\n      currentCandidates: {}, // 存储每个空位当前显示的候选卡牌索引\n    };\n  },\n  methods: {\n    init() {\n      this.sign_index = -1;\n      this.cards1.splice(0);\n      let cards = this.cards1;\n      for (let i = 0; i < this.number * 4; i++) {\n        cards.push(i);\n      }\n      shuffleCards(cards, this.number * 4);\n      for (let i = 0; i < 4; i++) {\n        cards.splice(cards.indexOf(this.number * 4 - 1 - i), 1, -1 - i);\n      }\n      for (let i = 0; i < 4; i++) {\n        cards.splice(i * (this.number + 1), 0, this.number * 4 - 4 + i);\n      }\n      this.autoCalc();\n      \n      // 初始化候选卡牌循环\n      this.$nextTick(() => {\n        this.updateAllCandidateCycling();\n      });\n    },\n\n    // 组件销毁时清理定时器\n    beforeDestroy() {\n      Object.keys(this.candidateIntervals).forEach(slotIndex => {\n        this.stopCandidateCycling(parseInt(slotIndex));\n      });\n    },\n\n    // 更新所有空位的候选卡牌循环\n    updateAllCandidateCycling() {\n      // 停止所有现有的循环\n      Object.keys(this.candidateIntervals).forEach(slotIndex => {\n        this.stopCandidateCycling(parseInt(slotIndex));\n      });\n      \n      // 为所有有空位的位置启动新的循环\n      for (let i = 0; i < this.cards1.length; i++) {\n        if (this.cards1[i] < 0 && i > 0 && this.cards1[i - 1] >= 4) {\n          this.startCandidateCycling(i);\n        }\n      }\n    },\n\n    // 获取指定空位的候选卡牌数组\n    getCandidateCardsForSlot(slotIndex) {\n      const prevCard = this.cards1[slotIndex - 1];\n      if (prevCard < 4) return []; // 如果前一个卡片不是有效卡片，返回空数组\n      \n      const candidates = this.findAllCardsByRankOffset(prevCard, -1);\n      return candidates.map(c => c.card);\n    },\n\n    // 开始候选卡牌循环显示\n    startCandidateCycling(slotIndex) {\n      this.stopCandidateCycling(slotIndex); // 先停止现有的循环\n      \n      const candidates = this.getCandidateCardsForSlot(slotIndex);\n      if (candidates.length === 0) return;\n      \n      this.currentCandidates[slotIndex] = 0; // 从第一个候选开始\n      \n      // 设置定时器循环显示候选卡牌\n      this.candidateIntervals[slotIndex] = setInterval(() => {\n        if (candidates.length > 0) {\n          this.currentCandidates[slotIndex] = (this.currentCandidates[slotIndex] + 1) % candidates.length;\n        }\n      }, this.gameManager.autoStepDelay);\n    },\n\n    // 停止候选卡牌循环显示\n    stopCandidateCycling(slotIndex) {\n      if (this.candidateIntervals[slotIndex]) {\n        clearInterval(this.candidateIntervals[slotIndex]);\n        delete this.candidateIntervals[slotIndex];\n        delete this.currentCandidates[slotIndex];\n      }\n    },\n\n    // 获取当前显示的候选卡牌\n    getCurrentCandidateCard(slotIndex) {\n      const candidates = this.getCandidateCardsForSlot(slotIndex);\n      if (candidates.length === 0) return '';\n      \n      const currentIndex = this.currentCandidates[slotIndex] || 0;\n      return this.getCardPlaceholderText(candidates[currentIndex]);\n    },\n    \n    // 计算 cards1 的哈希值\n    calculateStateHash() {\n      return this.cards1.join(',');\n    },\n    \n    // 检查当前状态哈希是否已存在\n    isStateHashRepeated(hash) {\n      return this.gameManager.history.find((record) => record.stateHash == hash);\n    },\n    // 记录移动操作\n    recordMove(from, to, card, sign) {\n      // 计算并记录当前状态的哈希\n      const stateHash = this.calculateStateHash();\n      \n      this.gameManager.recordOperation({\n        type: \"move\",\n        from: from,\n        to: to,\n        card: card,\n        sign: sign,\n        timestamp: Date.now(),\n        stateHash: stateHash,\n      });\n    },\n\n    // 处理撤销操作\n    handleUndo(operation) {\n      // 根据操作类型执行相应的撤销逻辑\n      switch (operation.type) {\n        case \"move\":\n          // 撤销移动操作\n          this.cards1.splice(operation.to, 1, operation.sign);\n          this.cards1.splice(operation.from, 1, operation.card);\n          break;\n      }\n    },\n\n    // 提取的移动执行函数（供 clickCard 和 stepFn 复用）\n    executeMove(cardToMove, targetEmptyIndex) {\n      const cardToMoveIndex = this.cards1.indexOf(cardToMove);\n      const emptySlot = this.cards1[targetEmptyIndex];\n      \n      if (this.findNextCard(cardToMove, (idx) => idx == targetEmptyIndex - 1) < 0) {\n        return console.warn(\"❌ 无效的移动\");\n      }\n\n      this.cards1.splice(cardToMoveIndex, 1, emptySlot);\n      this.cards1.splice(targetEmptyIndex, 1, cardToMove);\n      this.recordMove(cardToMoveIndex, targetEmptyIndex, cardToMove, emptySlot);\n      \n      // autoCalc 已经在工厂函数里监听 historyUpdate 事件自动执行，无需手动调用\n    },\n    \n    // 重写clickCard方法，使用GameStateManager记录操作\n    clickCard(card) {\n      // 查找同颜色的下一张牌，要求其后必须有空位\n      let index = this.findNextCard(card, (idx) => this.sign_index >= 0 ? idx == this.sign_index - 1 : this.cards1[idx + 1] < 0);\n      \n      if (index >= 0) {\n        let targetEmptyIndex = index + 1;\n        this.executeMove(card, targetEmptyIndex);\n      } else {\n        console.error(`❌ clickCard: 移动失败 card=${card}, 找不到有效目标位置。Seed:${this.seed}`);\n      }\n      this.sign_index = -1;\n    },\n\n    updateN() {\n      this.n = 0;\n      for (let i = 0; i < this.number * 4 + 4; i++) {\n        if (\n          this.cards1[i] >> 2 ==\n          this.number - 1 - (i % (this.number + 1))\n        ) {\n          this.n++;\n        }\n      }\n    },\n\n    // 重写stepFn方法，使用clickSign/clickCard保持行为一致\n    async stepFn() {\n      // 验证 this.next 是否有效\n      if (!this.next || this.next[0] < 0) {\n        console.error('❌ stepFn: this.next 无效', this.next);\n        \n        // 保存故障状态\n        const errorState = {\n          cards1: [...this.cards1],\n          next: this.next,\n          sign_index: this.sign_index,\n          n: this.n,\n        };\n        console.error('💾 故障状态已保存:', JSON.stringify(errorState));\n        \n        // 检查游戏状态：计算已完成的牌数\n        this.updateN();\n        \n        // 如果所有牌都已完成，标记为胜利；否则标记为失败\n        if (this.n >= (this.number + 1) * 4) {\n          this.gameManager.setWin();\n        }\n        \n        this.gameManager.stopAuto();\n        return;\n      }\n      \n      // 根据用户建议：直接使用 this.executeMove(this.next[0], this.next[1])\n      // this.next[0] = 要移动的卡片\n      // this.next[1] = 目标空位位置\n      \n      await this.gameManager.step(async () => {\n        this.clickSign(this.next[1])\n        await wait(this.gameManager.autoStepDelay);\n        this.executeMove(this.next[0], this.next[1]);\n      });\n    },\n    clickSign(i) {\n      let card = this.cards1[i - 1];\n      if (card < 4) {\n        return;\n      }\n      // 查找同颜色的前一张牌\n      let index = this.findPrevCard(card);\n      \n      // 滚动到目标卡片位置\n      if (index >= 0 && typeof window !== 'undefined' && window.document) {\n        const scrollTop = (index % (this.number + 1)) * 150;\n        \n        // 优先滚动 GameLayout 的 wrapper\n        const wrapper = document.querySelector('.game-content-wrapper');\n        if (wrapper) {\n          wrapper.scrollTop = scrollTop;\n        } else {\n          // 降级到传统的 document 滚动\n          document.documentElement.scrollTop = scrollTop;\n          document.body.scrollTop = scrollTop;\n        }\n      }\n      this.sign_index = i;;\n    },\n    \n    // 评估候选牌的优先级得分\n    evaluateCandidateScore(candidate) {\n      if (!candidate || candidate.idx < 0) return -999999;\n      \n      let score = 0;\n      let idx = candidate.idx;\n      \n      // 因素1: 后面是否有空位（决定性因素）\n      if (this.cards1[idx + 1] < 0) {\n        score += 100000;\n      }\n      \n      // 因素2: 位置靠前（列顶）的优先级更高\n      let row = idx % (this.number + 1);\n      score += (this.number - row) * 10;\n      \n      // 因素3: 更倾向于选择花色值小的（保持稳定性）\n      let suit = candidate.card % 4;\n      score += (4 - suit);\n      \n      return score;\n    },\n    // 从多个候选中选择最优的\n    selectBestCandidate(candidates) {\n      if (!candidates || candidates.length === 0) return -1;\n      if (candidates.length === 1) return candidates[0].idx;\n      \n      let bestScore = -999999;\n      let bestIdx = -1;\n      \n      for (let candidate of candidates) {\n        let score = this.evaluateCandidateScore(candidate);\n        \n        if (score > bestScore) {\n          bestScore = score;\n          bestIdx = candidate.idx;\n        }\n      }\n      \n      return bestIdx;\n    },\n    // 基础辅助函数：查找同颜色的相邻牌的索引\n    // offset: +1查找下一张，-1查找前一张\n    // condition: 可选的额外条件检查函数\n    // returnAll: 返回所有候选（用于多路径搜索）\n    findCardByRankOffset(card, offset, condition = null, returnAll = false) {\n      let target_rank = (card >> 2) + offset;\n      let card_group = card % this.matchMode;  // 按 matchMode 分组\n      let candidates = [];\n      \n      // 收集所有同组的候选牌\n      for (let suit = card_group; suit < 4; suit += this.matchMode) {\n        let target_card = target_rank * 4 + suit;\n        let idx = this.cards1.indexOf(target_card);\n        if (idx >= 0) {\n          // 如果提供了条件检查函数，必须满足条件\n          if (!condition || condition(idx)) {\n            candidates.push({ idx, card: target_card });\n          }\n        }\n      }\n      \n      if (returnAll) return candidates;\n      if (candidates.length === 0) return -1;\n      if (candidates.length === 1) return candidates[0].idx;\n      \n      // 有多个候选时，使用评分系统选择最优的\n      return this.selectBestCandidate(candidates);\n    },\n    // 获取所有同颜色的候选牌（用于多路径分析）\n    findAllCardsByRankOffset(card, offset, condition = null) {\n      return this.findCardByRankOffset(card, offset, condition, true);\n    },\n    // 便捷方法：查找同颜色的下一张牌（支持条件检查）\n    findNextCard(card, condition = null) {\n      return this.findCardByRankOffset(card, 1, condition);\n    },\n    // 便捷方法：查找同颜色的前一张牌\n    findPrevCard(card) {\n      return this.findCardByRankOffset(card, -1);\n    },\n    // 判断卡牌是否可移动（用于 shanshuo 闪烁提示）\n    canMoveCard(card) {\n      if (card < 0) return false;\n      // 查找同颜色的下一张牌，检查其后是否有空位\n      let nextIdx = this.findNextCard(card, (idx) => this.cards1[idx + 1] < 0);\n      return nextIdx >= 0;\n    },\n    \n    ...gameEvaluationMethods,\n    autoCalc() {\n      let over = true,\n        temp = {},\n        prior = [],\n        slotsToResetPriority = [];  // 记录需要清空 priority 的空位\n      for (let id = -4; id < 0; id++) {\n        let index = this.cards1.indexOf(id);\n        let card = this.cards1[index - 1];\n        \n        temp[id] = {\n          index,\n          card: card,\n          priority: 0,\n          _in: 0,\n          able: true,\n          bestCard: null,  // 记录深度搜索找到的最优候选牌\n        };\n      }\n      for (let id = -4; id < 0; id++) {\n        let index = temp[id].index;\n        let card = temp[id].card;\n        let dead = [];\n        let candidatePriorities = new Map();  // 存储候选牌与优先级的映射\n        let candidates = this.findAllCardsByRankOffset(card, -1);\n        for (let candidate of candidates) {\n          candidatePriorities.set(candidate.card, 0);\n        }\n        let prevFn = (prev_c, deep, accumulatedPriority = 0) => {\n          if (prev_c < 0) {\n            // 到达空位，累加 priority\n            prior.push([id, prev_c, deep]);\n            temp[prev_c].priority = Math.max(temp[prev_c].priority, ++accumulatedPriority);\n            temp[prev_c]._in++;\n            return accumulatedPriority;\n          } else {\n            if (prev_c >= 48) {\n              return 0;\n            }\n            if (!checkDeadForeach(dead, [prev_c, 0])) return 0;\n            dead.unshift([prev_c, 0]);\n            \n            // 获取所有同颜色的候选\n            let candidates = this.findAllCardsByRankOffset(prev_c, 1);\n            \n            if (candidates.length === 0) {\n              return 0;\n            }\n            \n            // 多候选深度优先搜索：递归评估每个候选的 priority\n            let maxPriority = 0;\n            \n            for (let candidate of candidates) {\n              let next_idx = candidate.idx;\n              let signCard = this.cards1[next_idx + 1];\n              \n              let subPriority = prevFn(signCard, deep, accumulatedPriority);\n              maxPriority = Math.max(maxPriority, subPriority);\n              \n              candidatePriorities.has(candidate.card) && candidatePriorities.set(candidate.card, Math.max(candidatePriorities.get(candidate.card), subPriority));\n            }\n            \n            return maxPriority;\n          }\n        };\n        let nextFn = (next_i, next_c, deep, accumulatedPriority = 0) => {\n          if (!checkDeadForeach(dead, [next_c, 1])) return 0;\n          dead.unshift([next_c, 1]);\n          if (deep > 0 && next_c >= 8) {\n            let prev_c = this.cards1[next_i + 1];\n            prevFn(prev_c, deep, accumulatedPriority);\n          }\n          next_c = this.cards1[next_i - 1];\n          if (next_c < 4) {\n            let n = next_i - 2;\n            let num = 1;\n            while (next_c < 0) {\n              next_c = this.cards1[n];\n              n--;\n              num++;\n            }\n            if (next_c >= num * 4) {\n              prior.push([id, this.cards1[next_i - 1], deep]);\n              let emptySlotId = this.cards1[next_i - 1];\n              temp[emptySlotId].priority = Math.max(temp[emptySlotId].priority, ++accumulatedPriority);\n              temp[emptySlotId]._in++;\n              \n              return accumulatedPriority;\n            }\n            next_c += 4;\n            // 检查是否形成同颜色递增序列\n            while (n % (this.number + 1) > 0) {\n              let card_at_n = this.cards1[n];\n              if (card_at_n >= 0 && \n                  (card_at_n >> 2) == (next_c >> 2) && \n                  (card_at_n % this.matchMode) == (next_c % this.matchMode)) {\n                n--;\n                next_c += 4;\n                deep++;\n              } else {\n                break;\n              }\n            }\n            if (n % (this.number + 1) == 0) {\n              return 0;\n            }\n            let prev_c = this.cards1[this.cards1.indexOf(next_c) + 1];\n            let priority = prevFn(prev_c, deep, accumulatedPriority);\n            \n            // 同步候选卡片的优先级\n            if (candidatePriorities.has(next_c)) {\n              candidatePriorities.set(next_c, Math.max(candidatePriorities.get(next_c), priority));\n            }\n            \n            return priority;\n          }\n          let prevCandidates = this.findAllCardsByRankOffset(next_c, -1);\n          let maxPriority = 0;\n          for (let prevCandidate of prevCandidates) {\n            let priority = nextFn(prevCandidate.idx, next_c, deep, accumulatedPriority);\n            maxPriority = Math.max(maxPriority, priority);\n            \n            // 同步候选卡片的优先级\n            if (candidatePriorities.has(prevCandidate.card)) {\n              candidatePriorities.set(prevCandidate.card, Math.max(candidatePriorities.get(prevCandidate.card), priority));\n            }\n          }\n          return maxPriority;\n        };\n        if (card >= 4) {\n          over = false;\n        }\n        nextFn(index, id, 0);\n        \n        // 深度搜索完成后，查找比 card 小一号的牌（规则：小的放到大的后面）\n        if (card >= 4) {\n          let candidates = this.findAllCardsByRankOffset(card, -1);\n          if (candidates.length > 0) {\n            // 存储所有候选及其优先级\n            let candidatesWithPriority = [];\n            \n            for (let candidate of candidates) {\n              // 模拟移动并检查哈希重复\n              let cardIdx = this.cards1.indexOf(card);\n              if (cardIdx < 0) continue;\n\n              // 创建临时状态来计算哈希\n              let tempCards = [...this.cards1];\n              tempCards[candidate.idx] = id;\n              tempCards[index] = candidate.card;\n              \n              let simulatedHash = tempCards.join(',');\n              \n              // 从深度搜索中获取该候选的优先级\n              let candidatePriority = candidatePriorities.get(candidate.card) || 0;\n              \n              // 计算基于新规则的优先级评分\n              const ruleBasedScore = this.calculateRuleBasedPriority(\n                this,\n                id,\n                { index: index, card: card },\n                candidate.card,\n                candidate.idx\n              );\n              \n              candidatesWithPriority.push({\n                card: candidate.card,\n                idx: candidate.idx,\n                priority: candidatePriority,\n                ruleBasedScore: ruleBasedScore,  // 新增：基于规则的评分\n                stateHash: simulatedHash  // 保存状态哈希用于后续过滤\n              });\n            }\n            \n            // 保存所有候选，留到最后统一比较\n            if (candidatesWithPriority.length > 0) {\n              temp[id].allCandidates = candidatesWithPriority;\n            } else if (candidates.length > 0) {\n              // 如果所有候选都被哈希过滤，记录这个空位以便后续清空 priority\n              slotsToResetPriority.push(id);\n            }\n          }\n        }\n      }\n      \n      // 四次深度搜索结束后，统一清空被哈希过滤的空位的 priority\n      for (let slotId of slotsToResetPriority) {\n        if (temp[slotId]) {\n          temp[slotId].priority = 0;\n        }\n      }\n      \n      if (over) {\n        this.updateN();\n        if (this.n >= (this.number + 1) * 4) {\n          this.gameManager.setWin();\n        } else {\n          this.gameManager.setLose();\n        }\n        return;\n      }\n      let signs = [-1, -2, -3, -4];\n      while (signs.length > 0) {\n        let ind;\n        for (ind = 0; ind < signs.length; ind++) {\n          if (temp[signs[ind]]._in <= 0) {\n            break;\n          }\n        }\n        if (ind < signs.length) {\n          let s = signs.splice(ind, 1)[0];\n          let j = 0;\n          while (j < prior.length) {\n            if (prior[j][0] == s) {\n              temp[prior[j][1]]._in--;\n              temp[prior[j][1]].deep = prior[j][2];\n              prior.splice(j, 1);\n              temp[s].able = false;\n            } else {\n              j++;\n            }\n          }\n        } else {\n          let road = [signs[0]];\n          while (prior.length > 0) {\n            let p = prior.findIndex((t) => t[1] == road[0]);\n            let index = road.indexOf(prior[p][0]);\n            if (index >= 0) {\n              temp[prior[p][1]]._in--;\n              prior.splice(p, 1);\n              for (let i = 0; i < index; i++) {\n                for (let j = 0; j < prior.length; j++) {\n                  if (prior[j][0] == road[i] && prior[j][1] == road[i + 1]) {\n                    temp[prior[j][1]]._in--;\n                    prior.splice(j, 1);\n                    break;\n                  }\n                }\n              }\n              break;\n            }\n            road.unshift(prior[p][0]);\n          }\n        }\n      }\n      this.next = [-1, -1];\n      let bestCandidate = null;\n      \n      // 遍历所有空位的所有候选，选择最优的\"空位+候选\"组合\n      for (let i = -4; i < 0; i++) {\n        let t = temp[i];\n        \n        // 跳过前面不是有效卡片的空位\n        if (t.card < 4) {\n          continue;\n        }\n        \n        // 获取该空位的所有候选\n        let allCandidates = t.allCandidates;\n        if (!allCandidates || allCandidates.length === 0) {\n          continue;\n        }\n        \n        // 验证：t.index 位置是否是空位\n        if (this.cards1[t.index] >= 0) {\n          continue;\n        }\n        \n        // 遍历该空位的所有候选\n        for (let candidateInfo of allCandidates) {\n          let targetCard = candidateInfo.card;\n          let candidatePriority = candidateInfo.priority;\n          let ruleBasedScore = candidateInfo.ruleBasedScore; // 获取基于规则的评分\n          \n          // 验证：targetCard 是否存在\n          let currentTargetIdx = this.cards1.indexOf(targetCard);\n          if (currentTargetIdx < 0) {\n            continue;\n          }\n          \n          // 检查状态哈希是否重复，如果重复则跳过\n          if (this.isStateHashRepeated(candidateInfo.stateHash)) {\n            allCandidates.splice(allCandidates.indexOf(candidateInfo), 1);\n            continue;\n          }\n\n          // 排除规则1：候选卡的rank等于同匹配组位置号-1的卡的rank-1\n          // 找到候选卡所在列的位置号-1的卡\n          const prevPosInCandidateCol = currentTargetIdx - 1;\n          const prevCardInCandidateCol = this.cards1[prevPosInCandidateCol];\n          if (prevCardInCandidateCol >= 0) {\n            const prevRankInCandidateCol = prevCardInCandidateCol >> 2;\n            const prevSuitInCandidateCol = prevCardInCandidateCol % 4;\n            const prevGroupInCandidateCol = prevSuitInCandidateCol % this.matchMode;\n            \n            // 如果是同匹配组，且候选卡rank = 该卡rank - 1，则排除\n            if (targetCard % this.matchMode === prevGroupInCandidateCol && (targetCard >> 2) === prevRankInCandidateCol - 1) {\n              continue;\n            }\n          }\n          \n          // 使用导入的工具函数创建候选对象，传入rule-based评分\n          const currentCandidate = createCandidate(targetCard, t.index, this, candidatePriority, t, currentTargetIdx, ruleBasedScore);\n          \n          // 判断是否替换最佳候选\n          if (!bestCandidate || isBetterCandidate(currentCandidate, bestCandidate)) {\n            bestCandidate = currentCandidate;\n            // 更新最佳移动\n            this.next = [currentCandidate.targetCard, currentCandidate.slotIndex];\n          }\n        }\n      }\n      \n      // isBetterCandidate函数已从candidateUtils.js导入，此处不再重复定义\n      \n      \n      // 如果没有找到有效移动，检查游戏状态\n      if (this.next[0] < 0) {\n        \n        // 检查四个空位的 priority 是否都为 0（只检查前面是有效卡片且有候选的空位）\n        let allPrioritiesZero = true;\n        let validSlotCount = 0;\n        for (let i = -4; i < 0; i++) {\n          if (temp[i] && temp[i].card >= 4) {\n            validSlotCount++;\n            // 只有既有 priority 又有候选的空位才算有效移动\n            const allCandidates = temp[i].allCandidates;\n            if (temp[i].priority > 0 && allCandidates && allCandidates.length > 0) {\n              allPrioritiesZero = false;\n            }\n          }\n        }\n        \n        // 计算已完成的牌数\n        this.updateN();\n        \n        // 如果所有牌都已完成，标记为胜利\n        if (this.n >= this.number * 4) {\n          this.gameManager.setWin();\n        } else if (allPrioritiesZero && validSlotCount > 0) {\n          // 仅当有有效空位且所有 priority 都为 0 时才设置失败\n          this.gameManager.setLose();\n        }\n      } else {\n        this.updateN();\n      }\n    },\n    \n    // 设置匹配难度\n    setMatchMode(mode) {\n      if ([1, 2, 4].includes(mode)) {\n        this.matchMode = mode;\n        this.init();  // 重新初始化游戏\n        console.log(`✅ 难度已设置为: ${mode === 1 ? '简单(数值)' : mode === 2 ? '中等(颜色)' : '困难(花色)'}`);\n      } else {\n        console.error('❌ 无效的难度模式，请使用 1, 2 或 4');\n      }\n    },\n    \n    // 获取当前难度的描述\n    getMatchModeDescription() {\n      const descriptions = {\n        1: '简单(数值匹配) - 任意点数相同即可连接',\n        2: '中等(颜色匹配) - 同颜色的牌可以连接',\n        4: '困难(花色匹配) - 必须同花色才能连接'\n      };\n      return descriptions[this.matchMode] || '未知难度';\n    },\n    \n    /**\n     * 渲染文本视图 - 显示当前游戏状态\n     * 用于终端交互式游戏\n     */\n    renderTextView() {\n      console.log('\\n╔════════════════════════════════════════════════╗');\n      console.log('║                排序游戏 (Sort)                ║');\n      console.log('╚════════════════════════════════════════════════╝');\n      console.log(`\\n难度: ${this.getMatchModeDescription()}`);\n      console.log(`完成度: ${this.n} / ${(this.number + 1) * 4} 张\\n`);\n      \n      // 表格格式显示所有列\n      const colWidth = this.number + 1;\n      \n      // 创建表头（带行号列）\n      let header = '┌────┬';\n      let headerRow = '│    │';\n      let separator = '├────┼';\n      let footer = '└────┴';\n      \n      for (let col = 0; col < 4; col++) {\n        header += '───────┬';\n        headerRow += `  列${col + 1}  │`;\n        separator += '───────┼';\n        footer += '───────┴';\n      }\n      \n      header = header.slice(0, -1) + '┐';\n      headerRow = headerRow.slice(0, -1) + '│';\n      separator = separator.slice(0, -1) + '┤';\n      footer = footer.slice(0, -1) + '┘';\n      \n      console.log(header);\n      console.log(headerRow);\n      console.log(separator);\n      \n      // 按行显示卡片（从上到下）\n      for (let row = 0; row < colWidth; row++) {\n        let rowStr = `│行${(row + 1).toString().padStart(2)}│`;\n        \n        for (let col = 0; col < 4; col++) {\n          const idx = col * colWidth + row;\n          const card = this.cards1[idx];\n          \n          let cellContent = '';\n          let highlight = '';\n          \n          if (card < 0) {\n            // 空位 - 检查是否有卡牌可以放入\n            const emptySlotIndex = Math.abs(card) - 1; // 0, 1, 2, 3\n            const prevCardIndex = idx - 1;\n            const prevCard = this.cards1[prevCardIndex];\n            // 没有可放入的卡牌，显示负数ID\n            const emptyLabel = ['[-1]', '[-2]', '[-3]', '[-4]'][emptySlotIndex];\n            cellContent = emptyLabel;\n            \n            if (prevCard >= 4) { // 前面有有效卡牌\n              const candidates = this.findAllCardsByRankOffset(prevCard, -1);\n              if (candidates && candidates.length > 0) {\n                // 有可放入的卡牌，显示问号格式\n                const firstCandidate = candidates[0];\n                const candidateText = getCardPlaceholderText(firstCandidate.card);\n                cellContent = `[?${candidateText.slice(1)}]`; // 替换第一个字符为问号\n              }\n            }\n          } else {\n            // 有效卡片\n            const cardText = getCardPlaceholderText(card);\n            const canMove = this.canMoveCard(card);\n            const isTarget = this.next && this.next[0] === card;\n            \n            if (isTarget) {\n              highlight = '→'; // 下一步建议\n              cellContent = `${highlight}${cardText}`;\n            } else if (canMove) {\n              highlight = '*'; // 可移动\n              cellContent = `${highlight}${cardText}`;\n            } else {\n              cellContent = cardText;\n            }\n          }\n          \n          // 居中对齐\n          const padding = Math.max(0, 7 - cellContent.length);\n          const leftPad = Math.floor(padding / 2);\n          const rightPad = padding - leftPad;\n          \n          rowStr += ' '.repeat(leftPad) + cellContent + ' '.repeat(rightPad) + '│';\n        }\n        \n        console.log(rowStr);\n      }\n      \n      console.log(footer);\n      console.log('\\n图例: [-n] = 无卡牌可放入  [?X] = 有卡牌可放入  * = 可移动  → = 推荐移动');\n      \n      // 显示下一步提示\n      if (this.next && this.next[0] >= 0) {\n        const targetCard = getCardPlaceholderText(this.next[0]);\n        const targetSlotCard = this.cards1[this.next[1]];\n        const targetSlot = targetSlotCard < 0 ? ['[-1]', '[-2]', '[-3]', '[-4]'][Math.abs(targetSlotCard) - 1] : `[${this.next[1]}]`;\n        console.log(`\\n💡 建议移动: ${targetCard} → ${targetSlot}`);\n      }\n      \n      return '渲染完成';\n    },\n    \n    /**\n     * 获取当前可用的操作列表\n     * 用于终端交互式游戏\n     */\n    getAvailableActions() {\n      const actions = [];\n      \n      // 撤销按钮\n      actions.push({\n        id: 1,\n        label: '撤销 (◀︎)',\n        method: 'undo',\n        args: [],\n        disabled: !this.canUndo\n      });\n      \n      // 重新开始按钮\n      actions.push({\n        id: 2,\n        label: '重新开始 (RESTART)',\n        method: 'goon',\n        args: []\n      });\n      \n      // 单步执行按钮\n      const hasValidMove = this.next && this.next[0] >= 0;\n      actions.push({\n        id: 3,\n        label: '单步执行 (►)',\n        method: 'stepFn',\n        args: [],\n        disabled: !hasValidMove\n      });\n      \n      // 自动运行按钮\n      const isAutoRunning = this.gameManager?.isAutoRunning || false;\n      actions.push({\n        id: 4,\n        label: isAutoRunning ? '停止自动 (STOP)' : '自动运行 (AUTO)',\n        method: 'pass',\n        args: []\n      });\n      \n      // 切换难度按钮\n      actions.push({\n        id: 5,\n        label: '切换难度 (简单→中等→困难)',\n        method: 'setMatchMode',\n        args: [this.matchMode === 1 ? 2 : this.matchMode === 2 ? 4 : 1]\n      });\n      \n      // 过滤掉禁用的按钮\n      return actions.filter(a => !a.disabled);\n    },\n  },\n  \n  // 监听 cards1 数组变化\n  watch: {\n    cards1: {\n      handler() {\n        this.$nextTick(() => {\n          this.updateAllCandidateCycling();\n        });\n      },\n      deep: true\n    }\n  },\n};\n\n// 使用工厂函数创建增强的Sort组件并导出\nexport default GameComponentPresets.puzzleGame(Sort, 500);\n","import { render } from \"./Sort.vue?vue&type=template&id=15158384&scoped=true\"\nimport script from \"./Sort.vue?vue&type=script&lang=js\"\nexport * from \"./Sort.vue?vue&type=script&lang=js\"\n\nimport \"./Sort.vue?vue&type=style&index=0&id=15158384&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-15158384\"]])\n\nexport default __exports__","<template>\n  <GameLayout\n    v-bind=\"gameLayoutProps\"\n    @goon=\"goon\"\n    @step=\"stepFn\"\n    @auto=\"pass\"\n  >\n    <template #game-content>\n      <div class=\"row\">\n        <span>TIME: {{ time }}</span>\n        <br />\n        <span>STEP: {{ step }}</span>\n      </div>\n      <div class=\"row\">\n        <div>\n          <ul\n            class=\"cardsul flex-row center\"\n            style=\"padding-left: 0; margin: 0\"\n          >\n            <CardImage\n              v-for=\"(item, i) in cards1\"\n              :key=\"i\"\n              class=\"card m-0 radius\"\n              style=\"max-width: 25%\"\n              :card-id=\"sign == item || sign2 == item || cards2[item] ? item : 'bg'\"\n              @click=\"(sign != item && sign2 != item && !cards2[item]) && canOperate && clickCard(item, i)\"\n            />\n          </ul>\n        </div>\n      </div>\n    </template>\n\n    <template #win-content>\n      <h1 class=\"small\">TIME: {{ time }}</h1>\n      <h1 class=\"small\">STEP: {{ step }}</h1>\n    </template>\n  </GameLayout>\n</template>\n\n<script>\nimport PairsComponent from \"./Pairs.js\";\n\nconst component = PairsComponent;\n\nexport default component;\n</script>\n\n<style scoped>\n@import url(\"./sum.css\");\n</style>\n","import { shuffleCards, wait } from \"../utils/help.js\";\nimport { GameComponentPresets } from \"../utils/gameComponentFactory.js\";\nimport { getCardPlaceholderText } from \"../utils/cardUtils.js\";\n\nconst Pairs = {\n  name: \"Pairs\",\n  data() {\n    return {\n      title: \"Pairs\",\n      cards1: [],\n      cards2: [],\n      arr: [],\n      sign: -1,\n      sign2: -2,\n      time: 0,\n      _timer: 0,\n      number: 48,\n      n: 0,\n    };\n  },\n  methods: {\n    init() {\n      this.time = 0;\n      clearInterval(this._timer);\n      this._timer = 0;\n      this.sign = -1;\n      this.sign2 = -1;\n      this.cards1.splice(0);\n      this.arr.splice(0);\n      this.cards2.splice(0);\n      let cards = this.cards1;\n      for (let i = 0; i < this.number; i++) {\n        cards.push(i);\n        this.cards2.push(false);\n      }\n      shuffleCards(cards, this.number);\n    },\n    async clickCard(card) {\n      if (!this._timer) {\n        this._timer = setInterval(() => {\n          this.time++;\n        }, 1000);\n      }\n      if (this.sign == card || this.cards2[card]) {\n        return;\n      }\n      this.arr[card] = true;\n      this.gameManager.recordOperation();\n      if (this.sign < 0) {\n        this.sign = card;\n        return;\n      }\n      if (this.sign >> 2 == card >> 2) {\n        this.cards2.splice(card, 1, true);\n        this.cards2.splice(this.sign, 1, true);\n        this.sign = -1;\n      }\n      this.gameManager.hitflag = false;\n      this.sign2 = card;\n      await wait(this.gameManager.autoStepDelay);\n      this.sign = -1;\n      this.sign2 = -1;\n      this.gameManager.hitflag = true;\n\n      // 检查游戏是否结束\n      let gameOver = true;\n      for (let i = 0; i < this.number; i++) {\n        if (!this.cards2[i]) {\n          gameOver = false;\n          break;\n        }\n      }\n\n      if (gameOver) {\n        this.gameManager.setWin();\n        clearInterval(this._timer);\n        this._timer = 0;\n      }\n    },\n    async stepFn() {\n      if (this.sign >= 0) {\n        for (let i = 0; i < 4; i++) {\n          let sign = this.sign - (this.sign % 4) + i;\n          if (sign != this.sign && this.arr[sign] && !this.cards2[sign]) {\n            return await this.clickCard(sign);\n          }\n        }\n      } else {\n        let num;\n        for (let i = 0; i < this.number; i++) {\n          if (i % 4 == 0) {\n            num = 0;\n          }\n          if (this.arr[i] && !this.cards2[i]) {\n            num++;\n          }\n          if (num > 1) {\n            return await this.clickCard(i);\n          }\n        }\n      }\n      for (let i = 0; i < this.number; i++) {\n        let c = this.cards1[i];\n        if (!this.arr[c] && !this.cards2[c]) {\n          return await this.clickCard(c);\n        }\n      }\n    },\n    \n    /**\n     * 渲染文本视图 - 显示当前游戏状态\n     * 用于终端交互式游戏\n     */\n    renderTextView() {\n      console.log('\\n╔════════════════════════════════════════════════╗');\n      console.log('║              配对游戏 (Pairs)                 ║');\n      console.log('╚════════════════════════════════════════════════╝');\n      \n      // 统计信息\n      const matched = this.cards2.filter(m => m).length;\n      console.log(`\\n时间: ${this.time}秒 | 已配对: ${matched}/${this.number} 张\\n`);\n      \n      // 按6x8网格显示\n      const cols = 8;\n      const rows = 6;\n      \n      for (let row = 0; row < rows; row++) {\n        let line = '  ';\n        for (let col = 0; col < cols; col++) {\n          const idx = row * cols + col;\n          const cardId = this.cards1[idx];\n          \n          if (this.arr[idx]) {\n            line += '[✓] ';\n          } else if (this.cards2[idx] || idx === this.sign || idx === this.sign2) {\n            // 已翻开或当前选中\n            const cardText = getCardPlaceholderText(cardId);\n            const prefix = idx === this.sign ? '>' : idx === this.sign2 ? '*' : '';\n            line += `${(prefix + cardText).padEnd(3)} `;\n          } else {\n            // 未翻开\n            line += '[?] ';\n          }\n        }\n        console.log(line);\n      }\n      \n      console.log('\\n图例:');\n      console.log('  [?] = 未翻开  [✓] = 已看过  > = 第一张  * = 第二张');\n      \n      if (this.sign >= 0) {\n        const signCard = getCardPlaceholderText(this.cards1[this.sign]);\n        console.log(`\\n当前选中: ${signCard} (需要配对)`);\n      }\n      \n      return '渲染完成';\n    },\n    \n    /**\n     * 获取当前可用的操作列表\n     * 用于终端交互式游戏\n     */\n    getAvailableActions() {\n      const actions = [];\n      \n      // 重新开始按钮\n      actions.push({\n        id: 1,\n        label: '重新开始 (RESTART)',\n        method: 'goon',\n        args: []\n      });\n      \n      // 单步执行按钮（自动翻一张牌）\n      actions.push({\n        id: 2,\n        label: '单步执行 (►)',\n        method: 'stepFn',\n        args: []\n      });\n      \n      // 自动运行按钮\n      const isAutoRunning = this.gameManager?.isAutoRunning || false;\n      actions.push({\n        id: 3,\n        label: isAutoRunning ? '停止自动 (STOP)' : '自动运行 (AUTO)',\n        method: 'pass',\n        args: []\n      });\n      \n      return actions;\n    },\n  },\n};\n\n// 使用工厂函数创建增强的Pairs组件并导出\nexport default GameComponentPresets.pairGame(Pairs, 500);\n","import { render } from \"./Pairs.vue?vue&type=template&id=7ddc48e3&scoped=true\"\nimport script from \"./Pairs.vue?vue&type=script&lang=js\"\nexport * from \"./Pairs.vue?vue&type=script&lang=js\"\n\nimport \"./Pairs.vue?vue&type=style&index=0&id=7ddc48e3&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7ddc48e3\"]])\n\nexport default __exports__","<template>\n  <GameLayout\n    v-bind=\"gameLayoutProps\"\n    @undo=\"undo\"\n    @goon=\"goon\"\n    @step=\"stepFn\"\n    @auto=\"pass\"\n  >\n    <template #game-content>\n      <div class=\"row\">\n        <div calss=\"center\">\n          <ul\n            ref=\"container\"\n            class=\"cardsul rela center\"\n            style=\"padding-left: 0; max-width: 31.25rem; margin: auto\"\n            :style=\"{ height: height / 16 + 'rem' }\"\n          >\n            <CardImage\n              card-id=\"bg\"\n              :hide=\"cards[0].length === 0\"\n              class=\"m-0 static card m-0 abso\"\n              style=\"\n                max-width: 6.25rem;\n                width: 25%;\n                height: 9.375rem;\n                z-index: 0;\n                left: 0;\n                top: 0;\n              \"\n              @click=\"canOperate && clickCard(0)\"\n            />\n            <li\n              class=\"cards m-0 static\"\n              style=\"width: 50%; height: 9.375rem\"\n              :style=\"{ zIndex: dragItem == 1 ? 10 : 0 }\"\n              :class=\"{ drag: dragItem == 1 }\"\n            >\n              <CardImage\n                v-for=\"i in cards[1].length >= (turn > 3 ? 1 : 4 - turn)\n                  ? turn > 3\n                    ? 1\n                    : 4 - turn\n                  : cards[1].length\"\n                :key=\"cards[1][i - 1] + (fresh[1] * 3 + 1) * number\"\n                class=\"m-0 card abso\"\n                style=\"width: 25%; top: 0\"\n                :style=\"{ left: (3 - i) * 12.5 + 25 + '%', zIndex: 3 - i }\"\n                v-move=\"{ start, end, move }\"\n                :class=\"{\n                  drag: dragItem == 1,\n                  opa0: dragCard == cards[1][i - 1] && enterItem >= 0,\n                  shanshuo: sign == cards[1][i - 1],\n                }\"\n                :card-id=\"cards[1][i - 1]\"\n              />\n            </li>\n            <li\n              class=\"m-0 center\"\n              style=\"width: 25%; max-width: 6.25rem; height: 9.375rem\"\n            >\n              <span\n                class=\"m-0\"\n                :style=\"{ color: turn > 3 ? 'red' : 'inherit' }\"\n                >{{ turn }}</span\n              ><span class=\"m-0\">/3</span>\n            </li>\n            <li style=\"height: 1.875rem; width: 100%\"></li>\n            <li\n              v-for=\"i in 4\"\n              :key=\"i\"\n              class=\"cards m-0 static center\"\n              style=\"width: 25%; height: 9.375rem\"\n              :class=\"{ drag: dragItem == i + 1 }\"\n              ref=\"middleBox\"\n              :style=\"{ zIndex: dragItem == i + 1 ? 10 : 1 }\"\n              @mouseenter=\"enter(i + 1)\"\n              @touchenter=\"enter(i + 1)\"\n              @mouseleave=\"leave(i + 1)\"\n              @touchleave=\"leave(i + 1)\"\n            >\n              <div\n                class=\"card m-0 abso\"\n                style=\"top: 11.25rem; width: 25%\"\n                @click=\"canOperate && clickCard(i + 1)\"\n                :style=\"{\n                  zIndex: dragItem == i + 1 ? 10 : 1,\n                  left: (i - 1) * 25 + '%',\n                }\"\n              >\n                <span class=\"m-0\">{{ types[i - 1] + \"A\" }}</span>\n              </div>\n              <CardImage\n                v-for=\"item in cards[i + 1]\"\n                :key=\"item + (fresh[i + 1] * 3 + 2) * number\"\n                class=\"card m-0 abso\"\n                style=\"top: 11.25rem; width: 25%\"\n                :style=\"{ left: (i - 1) * 25 + '%' }\"\n                v-move=\"{ start, end, move }\"\n                :class=\"{\n                  drag: dragItem == i + 1,\n                  shanshuo: sign == item,\n                  opa0: dragCard == item && enterItem >= 0,\n                }\"\n                :card-id=\"item\"\n              />\n              <CardImage\n                :card-id=\"dragCard\"\n                :style=\"{ left: (i - 1) * 25 + '%' }\"\n                class=\"card m-0 abso\"\n                v-show=\"dragCard >= 0 && enterItem == i + 1\"\n                style=\"width: 25%; height: 9.375rem; top: 11.25rem\"\n              />\n            </li>\n            <li style=\"height: 1.875rem; width: 100%\"></li>\n            <li\n              v-for=\"i in 4\"\n              :key=\"i + 4\"\n              class=\"cards m-0 static\"\n              style=\"width: 25%\"\n              :class=\"{ drag: dragItem == i + 5 }\"\n              :style=\"{\n                height: (cards[i + 5].length * 30 + 120) / 16 + 'rem',\n                zIndex: dragItem == i + 5 ? 10 : 1,\n              }\"\n              ref=\"downBox\"\n              @mouseenter=\"enter(i + 5)\"\n              @touchenter=\"enter(i + 5)\"\n              @mouseleave=\"leave(i + 5)\"\n              @touchleave=\"leave(i + 5)\"\n            >\n              <CardImage\n                v-for=\"(item, j) in cards[i + 5]\"\n                :key=\"item + (fresh[i + 5] * 3 + 3) * number\"\n                class=\"m-0 card abso\"\n                style=\"width: 25%; height: 9.375rem\"\n                :style=\"{\n                  top: (j * 30 + 360) / 16 + 'rem',\n                  left: (i - 1) * 25 + '%',\n                }\"\n                :class=\"{\n                  drag: dragItem == i + 5,\n                  opa0: dragItem == i + 5 && dragCard >= item && enterItem >= 0,\n                  shanshuo: sign == item,\n                }\"\n                v-move=\"{ start, end, move }\"\n                ref=\"down\"\n                :card-id=\"item\"\n              />\n              <CardImage\n                v-for=\"(item, j) in cards[dragItem]\"\n                :key=\"j + 8\"\n                :card-id=\"item\"\n                :style=\"{\n                  top:\n                    (cards[i + 5].length * 30 +\n                      (j - cards[dragItem].indexOf(dragCard)) * 30 +\n                      360) /\n                      16 +\n                    'rem',\n                  left: (i - 1) * 25 + '%',\n                }\"\n                class=\"card m-0 abso\"\n                v-show=\"\n                  enterItem == i + 5 &&\n                  ((dragItem >= 6 && dragCard >= item) || dragCard == item)\n                \"\n                style=\"width: 25%; height: 9.375rem\"\n              />\n            </li>\n          </ul>\n        </div>\n      </div>\n    </template>\n  </GameLayout>\n</template>\n\n<script>\nimport SpiderComponent from \"./Spider.js\";\n\nconst component = SpiderComponent;\n\nexport default component;\n</script>\n\n<style scoped>\n@import url(\"./sum.css\");\n.card,\n.cards {\n  z-index: 1;\n}\n.drag {\n  pointer-events: none;\n  z-index: 0;\n}\n.opa0 {\n  opacity: 0;\n}\n</style>\n","var move = {};\nvar getPosition = function (e, isTouch) {\n  if (isTouch) {\n    e = e.touches[0];\n  }\n  return [e.clientX, e.clientY];\n};\nvar updateMoveData = function (el, e, isTouch) {\n  const data = el._moveData;\n  data.position = getPosition(e, isTouch);\n  data.offsetX = data.position[0] - data.startPosition[0];\n  data.offsetY = data.position[1] - data.startPosition[1];\n};\nvar prevent = function (e, bubbles) {\n  e.cancelable && e.preventDefault();\n  !bubbles && e.stopPropagation();\n  return false;\n};\nvar emit = (el, name, detail, bubbles, cancelable) => {\n  el.dispatchEvent(\n    new CustomEvent(name, {\n      detail,\n      bubbles,\n      cancelable,\n    }),\n  );\n};\nmove.emit = emit;\nvar listenEvents = (el, events, handles = {}) => {\n  for (const name of events) {\n    typeof handles[name] === \"function\" &&\n      el.addEventListener(name, handles[name]);\n  }\n};\nmove.listenEvents = listenEvents;\nmove.mounted = function (el, binding, vnode) {\n  if (el._isInitMove) {\n    return;\n  }\n  el._isInitMove = true;\n  var { page = window } = binding.value || {};\n  var { bubbles } = binding.modifiers;\n  listenEvents(el, [\"start\", \"move\", \"end\"], binding.value);\n  var isMove = false;\n  var isTouch;\n\n  function cancel() {\n    isMove = false;\n    el.removeEventListener(\"cancel\", cancel);\n    if (isTouch) {\n      page.removeEventListener(\"touchend\", _end);\n      page.removeEventListener(\"touchmove\", _move);\n      page.removeEventListener(\"touchcancel\", _end);\n    } else {\n      page.removeEventListener(\"mouseup\", _end);\n      page.removeEventListener(\"mousemove\", _move);\n    }\n  }\n\n  function _start(e) {\n    isTouch = e.type === \"touchstart\";\n    el.addEventListener(\"cancel\", cancel);\n    if (isTouch) {\n      page.addEventListener(\"touchend\", _end, { passive: false });\n      page.addEventListener(\"touchmove\", _move, { passive: false });\n      page.addEventListener(\"touchcancel\", _end, { passive: false });\n    } else {\n      page.addEventListener(\"mouseup\", _end, { passive: false });\n      page.addEventListener(\"mousemove\", _move, { passive: false });\n    }\n    if (!el._moveData) {\n      el._moveData = { isTouch };\n    }\n    el._moveData.startPosition = getPosition(e, isTouch);\n    // updateMoveData(el, e, isTouch)\n    emit(el, \"start\", {\n      el,\n      binding,\n      vnode,\n    });\n    return prevent(e, bubbles);\n  }\n\n  function _move(e) {\n    updateMoveData(el, e, isTouch);\n    emit(el, \"move\", {\n      el,\n      binding,\n      vnode,\n    });\n    isMove = true;\n    return prevent(e, bubbles);\n  }\n\n  function _end(e) {\n    if (!isMove) {\n      const data = el._moveData;\n      data.offsetX = 0;\n      data.offsetY = 0;\n      emit(el, \"notmove\");\n    }\n    emit(el, \"end\", {\n      el,\n      binding,\n      vnode,\n    });\n    emit(el, \"cancel\");\n    return prevent(e, bubbles);\n  }\n  el.addEventListener(\"touchstart\", _start);\n  el.addEventListener(\"mousedown\", _start);\n};\nmove.bind = move.mounted;\nmove.install = function (Vue) {\n  Vue.directive(\"move\", move);\n};\nexport default move;\n","import { shuffleCards, wait, checkDeadForeach } from \"../utils/help.js\";\nimport move from \"../directives/move.js\";\nimport { GameComponentPresets } from \"../utils/gameComponentFactory.js\";\nimport { getCardPlaceholderText } from \"../utils/cardUtils.js\";\n\nconst Spider = {\n  name: \"Spider\",\n  data() {\n    return {\n      title: \"Spider\",\n      cards: [[], [], [], [], [], [], [], [], [], []],\n      fresh: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      sign: -99,\n      index: -99,\n      dragCard: -99,\n      dragItem: -99,\n      enterItem: -99,\n      turn: 1,\n      number: 52,\n    };\n  },\n  directives: { move },\n  created: function () {\n    this.setupGameStateListeners();\n  },\n  mounted() {\n    let enter = (i) => () => this.moveEnter(i);\n    if (!this.$refs.middleBox || !this.$refs.downBox) return;\n    this.middleEnters = [];\n    this.downEnters = [];\n    for (let i = 0; i < 4; i++) {\n      let middle = this.$refs.middleBox[i];\n      let down = this.$refs.downBox[i];\n      this.middleEnters[i] = enter(i + 2);\n      this.downEnters[i] = enter(i + 6);\n      middle.addEventListener(\"mousemove\", this.middleEnters[i]);\n      middle.addEventListener(\"touchmove\", this.middleEnters[i]);\n      down.addEventListener(\"mousemove\", this.downEnters[i]);\n      down.addEventListener(\"touchmove\", this.downEnters[i]);\n    }\n  },\n  beforeUnmount() {\n    this.gameManager.off(\"stateChange\");\n    if (!this.$refs.middleBox || !this.$refs.downBox) return;\n    for (let i = 0; i < 4; i++) {\n      let middle = this.$refs.middleBox[i];\n      let down = this.$refs.downBox[i];\n      middle.removeEventListener(\"mousemove\", this.middleEnters[i]);\n      middle.addEventListener(\"touchmove\", this.middleEnters[i]);\n      down.addEventListener(\"mousemove\", this.downEnters[i]);\n      down.addEventListener(\"touchmove\", this.downEnters[i]);\n    }\n  },\n  // 初始化\n  methods: {\n    setupGameStateListeners() {\n      // 监听游戏状态变化\n      this.gameManager.on(\"stateChange\", () => {\n        this.$forceUpdate(); // 强制更新视图\n      });\n    },\n    init() {\n      this.gameManager.init();\n      for (let i = 0; i < 10; i++) {\n        this.cards[i].splice(0);\n      }\n      this.fresh = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      this.turn = 1;\n      this.sign = -99;\n      this.dragItem = -99;\n      this.dragCard = -99;\n      this.enterItem = -99;\n      let cards = this.cards[0];\n      for (let i = 0; i < this.number; i++) {\n        cards.push(i);\n      }\n      shuffleCards(cards, this.number);\n      for (let i = 6; i < 10; i++) {\n        this.cards[i].push(this.cards[0].splice(-1)[0]);\n      }\n    },\n    findPos(card) {\n      for (let i = 2; i < 10; i++) {\n        if (this.cards[i].indexOf(card) >= 0) {\n          return i;\n        }\n      }\n      return -99;\n    },\n    addAndCheck(card, type) {\n      let res = checkDeadForeach(this.record, [card, type]);\n      if (!res) return false;\n      this.record.unshift([card, type]);\n      return true;\n    },\n    checkDown(card) {\n      if (!this.addAndCheck(card, 1)) return;\n      let type = card % 2;\n      let level = card >> 2;\n      if (level == 12) {\n        return false;\n      }\n      let up1 = ((level + 1) % 13) * 4 + !type;\n      let up2 = up1 + 2;\n      let pos1 = this.findPos(up1);\n      let pos2 = this.findPos(up2);\n      if (pos1 < 0 && pos2 < 0) {\n        return false;\n      } else if (pos1 >= 6 && pos2 >= 6) {\n        let pos = this.findPos(card);\n        let top1 = this.cards[pos1][this.cards[pos1].length - 1];\n        let top2 = this.cards[pos2][this.cards[pos2].length - 1];\n        if (top1 != up1 && top2 != up2) {\n          return false;\n        }\n        if (pos == (top1 == up1 ? pos1 : pos2)) {\n          return false;\n        }\n        return [pos, top1 == up1 ? pos1 : pos2];\n      }\n      if (pos1 >= 6 || pos2 >= 6) {\n        let cards = pos1 >= 6 ? this.cards[pos1] : this.cards[pos2];\n        let up = pos1 >= 6 ? up1 : up2;\n        let index = cards.indexOf(up);\n        if (index == cards.length - 1) {\n          let pos = this.findPos(card);\n          if (pos != (pos1 >= 6 ? pos1 : pos2)) {\n            return [pos, pos1 >= 6 ? pos1 : pos2];\n          }\n        } else {\n          let res = this.checkUp(cards[index + 1]);\n          if (res) {\n            return res;\n          }\n        }\n        if (pos1 < 0 || pos2 < 0) {\n          return false;\n        }\n      }\n      let first;\n      if (pos1 - 2 == up1 % 4) {\n        let i = 0;\n        let top = this.cards[pos1][this.cards[pos1].length - 1];\n        while (top - 4 * i >= up1) {\n          let res = this.checkDown(top - 4 * i);\n          if (!res) {\n            break;\n          }\n          if (!first) {\n            first = res;\n          }\n          i++;\n        }\n        if (top - 4 * i < up1) {\n          return first;\n        }\n      }\n      if (pos2 - 2 == up2 % 4) {\n        let i = 0;\n        let top = this.cards[pos2][this.cards[pos2].length - 1];\n        while (top - 4 * i >= up2) {\n          let res = this.checkDown(top - 4 * i);\n          if (!res) {\n            break;\n          }\n          if (!first) {\n            first = res;\n          }\n          i++;\n        }\n        if (top - 4 * i < up2) {\n          return first;\n        }\n      }\n      return false;\n    },\n    checkUp(card) {\n      if (!this.addAndCheck(card, 2)) return;\n      let type = card % 4;\n      let level = card >> 2;\n      let result = [];\n      for (let i = 0; i <= level; i++) {\n        let temp = i * 4 + type;\n        let pos = this.findPos(temp);\n        if (pos < 0) {\n          if (i == level) {\n            result.push([pos, type + 2]);\n            break;\n          }\n          return false;\n        }\n        if (pos == type + 2) {\n          continue;\n        }\n        let index = this.cards[pos].indexOf(temp);\n        if (index == this.cards[pos].length - 1) {\n          result.push([pos, type + 2]);\n          continue;\n        }\n        let res = this.checkMove(this.cards[pos][index + 1]);\n        if (!res) {\n          return false;\n        }\n        result.push(res);\n      }\n      return result[0];\n    },\n    checkMove(card) {\n      if (!this.addAndCheck(card, 0)) return;\n      return this.checkDown(card) || this.checkUp(card);\n    },\n    async stepFn() {\n      await this.gameManager.step(async () => {\n        let next = false;\n        for (let i = 6; i < 10; i++) {\n          this.record = [];\n          next = this.checkMove(this.cards[i][0]);\n          if (next) {\n            if (\n              !this.skipCheck &&\n              !checkDeadForeach(this.gameManager.history, [next[1], next[0]])\n            )\n              continue;\n            break;\n          }\n        }\n        this.record = [];\n        !next &&\n          this.cards[1].length > 0 &&\n          (next = this.checkMove(this.cards[1][0]));\n        if (\n          !next ||\n          (!this.skipCheck &&\n            !checkDeadForeach(this.gameManager.history, [next[1], next[0]]))\n        ) {\n          return this.clickCard(0);\n        }\n        this.skipCheck = false;\n        this.sign = -99;\n        await this.clickCard(next[0] < 0 ? 1 : next[0]);\n        console.log(next, this.sign);\n        await wait(this.gameManager.autoStepDelay);\n        await this.clickCard(next[1]);\n      });\n    },\n    async addCard() {\n      for (let i = 6; i < 10; i++) {\n        if (this.cards[i].length <= 0) {\n          if (this.cards[1].length > 0) {\n            this.gameManager.recordOperation([i, 1, 0, 1], true);\n            this.cards[i].push(this.cards[1].splice(0, 1)[0]);\n          } else if (this.cards[0].length > 0) {\n            this.gameManager.recordOperation(\n              [i, 0, this.cards[0].length - 1, 1],\n              true,\n            );\n            this.cards[i].push(this.cards[0].splice(-1)[0]);\n          }\n        }\n      }\n      if (this.cards[0].length <= 0 && this.cards[1].length <= 0) {\n        if (this.lock) {\n          return false;\n        }\n        this.dragCard = -99;\n        this.dragItem = -99;\n        this.enterItem = -99;\n        this.lock = true;\n        for (let i = 0; i < this.number; i++) {\n          let type = i % 4;\n          while (this.cards[type + 2].length <= i >> 2) {\n            this.record = [];\n            let next = this.checkUp(i);\n            if (\n              !next ||\n              (!this.skipCheck &&\n                !checkDeadForeach(this.gameManager.history, [next[1], next[0]]))\n            ) {\n              for (let j = 6; j < 10; j++) {\n                if (this.cards[j].length <= 0 || this.cards[j][0] >> 2 >= 12) {\n                  continue;\n                }\n                this.record = [];\n                next = this.checkMove(this.cards[j][0]);\n                if (next) {\n                  if (\n                    !this.skipCheck &&\n                    !checkDeadForeach(this.gameManager.history, [\n                      next[1],\n                      next[0],\n                    ])\n                  ) {\n                    next = false;\n                    continue;\n                  }\n                  break;\n                }\n              }\n            }\n            if (!next) {\n              this.skipCheck = true;\n              continue;\n            }\n            this.skipCheck = false;\n            console.log(next);\n            this.sign = -99;\n            await this.clickCard(next[0]);\n            await wait(this.gameManager.autoStepDelay);\n            await this.clickCard(next[1]);\n            for (let k = 6; k < 10; k++) {\n              if (this.cards[k].length <= 0) {\n                let pos = this.findPos(i);\n                if (this.cards[pos][this.cards[pos].length - 1] != i) {\n                  let index = this.cards[pos].indexOf(i);\n                  let next = [\n                    k,\n                    pos,\n                    index + 1,\n                    this.cards[pos].length - index - 1,\n                    i,\n                  ];\n                  this.cards[k].push(...this.cards[pos].splice(index + 1));\n                  this.gameManager.recordOperation(next, true);\n                  continue;\n                }\n                let l;\n                for (l = 48; l < 52; l++) {\n                  let pos = this.findPos(l);\n                  if (pos < 6) {\n                    continue;\n                  }\n                  let index = this.cards[pos].indexOf(l);\n                  if (l <= 0) {\n                    continue;\n                  }\n                  let next = [k, pos, index, this.cards[pos].length - index, l];\n                  console.log(next);\n                  if (!checkDeadForeach(this.gameManager.history, next)) {\n                    continue;\n                  }\n                  this.cards[k].push(...this.cards[pos].splice(index));\n                  this.gameManager.recordOperation(next, true);\n                  break;\n                }\n                if (l < 52) {\n                  continue;\n                }\n                for (l = 6; l < 10; l++) {\n                  if (this.cards[l].length > 1) {\n                    let next = [k, l, this.cards[l].length - 1, 1];\n                    if (!checkDeadForeach(this.gameManager.history, next)) {\n                      continue;\n                    }\n                    this.cards[k].push(this.cards[l].splice(-1)[0]);\n                    this.gameManager.recordOperation(next, true);\n                    break;\n                  }\n                }\n              }\n            }\n          }\n        }\n        this.sign = -99;\n        this.gameManager.setWin();\n        this.lock = false;\n      }\n    },\n    async clickCard(index) {\n      let len = this.cards[index].length;\n      if (index == 0) {\n        if (this.cards[0].length > 0) {\n          this.gameManager.recordOperation(\n            [1, 0, this.turn > 3 ? 1 : 4 - this.turn],\n            true,\n          );\n          this.cards[1].unshift(\n            ...this.cards[0].splice(this.turn > 3 ? -1 : this.turn - 4),\n          );\n        } else {\n          for (let i = 0; i < this.gameManager.history.length; i++) {\n            let step = this.gameManager.history[i];\n            if (step[0] == 0 && step[1] == 1) {\n              this.skipCheck = true;\n            } else if (step[0] != 1 || step[1] != 0) {\n              break;\n            }\n          }\n          this.gameManager.recordOperation([0, 1, this.cards[1].length], true);\n          this.cards[0].unshift(...this.cards[1].splice(0));\n          this.turn++;\n        }\n        this.sign = -99;\n      } else if (index == 1) {\n        if (len > 0) {\n          this.sign = this.cards[index][0];\n          this.index = index;\n        }\n      } else if (index < 6) {\n        if (this.sign == index - 2 + len * 4) {\n          this.gameManager.recordOperation(\n            [index, this.index, this.cards[this.index].indexOf(this.sign), 1],\n            true,\n          );\n          this.cards[index].push(\n            this.cards[this.index].splice(\n              this.cards[this.index].indexOf(this.sign),\n              1,\n            )[0],\n          );\n          this.sign = -99;\n        } else {\n          if (len > 0) {\n            this.sign = this.cards[index][len - 1];\n            this.index = index;\n          }\n        }\n      } else {\n        let top = this.cards[index][len - 1],\n          i;\n        if (\n          this.sign >= 0 &&\n          this.index >= 6 &&\n          (i = this.cards[this.index].findIndex((card) => {\n            return (\n              card >> 2 < 13 &&\n              card % 2 != top % 2 &&\n              ((card >> 2) + 1) % 13 == top >> 2\n            );\n          })) >= 0\n        ) {\n          this.gameManager.recordOperation(\n            [index, this.index, i, this.cards[this.index].length - i, top],\n            true,\n          );\n          this.cards[index].push(...this.cards[this.index].splice(i));\n          this.sign = -99;\n        } else if (\n          this.sign >= 0 &&\n          this.index < 6 &&\n          this.sign >> 2 < 13 &&\n          this.sign % 2 != top % 2 &&\n          ((this.sign >> 2) + 1) % 13 == top >> 2\n        ) {\n          this.gameManager.recordOperation(\n            [\n              index,\n              this.index,\n              this.cards[this.index].indexOf(this.sign),\n              1,\n              top,\n            ],\n            true,\n          );\n          this.cards[index].push(\n            this.cards[this.index].splice(\n              this.cards[this.index].indexOf(this.sign),\n              1,\n            )[0],\n          );\n          this.sign = -99;\n        } else if (len > 0) {\n          this.sign = top;\n          this.index = index;\n        }\n      }\n      if (this.sign < 0) {\n        await this.addCard();\n      }\n    },\n    undo() {\n      this.sign = -99;\n      if (this.step <= 0) {\n        return;\n      }\n      let temp = this.gameManager.history.shift(),\n        add = false;\n      if (temp[1] == 0) {\n        if (temp[0] == 1)\n          return this.cards[0].push(...this.cards[1].splice(0, temp[2]));\n        else {\n          add = true;\n          this.cards[0].push(this.cards[temp[0]].splice(0, 1)[0]);\n        }\n      } else if (temp[1] == 1) {\n        if (temp[0] != 0) {\n          this.cards[1].unshift(this.cards[temp[0]].splice(-1)[0]);\n          add = true;\n          if (temp[0] < 6 || this.cards[temp[0]].length > 0) {\n            return;\n          }\n        } else {\n          this.cards[1].unshift(...this.cards[0].splice(0));\n          this.turn--;\n          return;\n        }\n      }\n      if (add) {\n        temp = this.gameManager.history.shift();\n      }\n      this.cards[temp[1]].splice(\n        temp[2],\n        0,\n        ...this.cards[temp[0]].splice(-temp[3]),\n      );\n    },\n    start(e) {\n      // 方法1：尝试从绑定的组件实例获取数据\n      let item = -1;\n      \n      // 检查e.detail.binding.value，这可能包含组件的props数据\n      if (e.detail.binding && e.detail.binding.value && e.detail.binding.value.cardId !== undefined) {\n        item = parseInt(e.detail.binding.value.cardId);\n      }\n      \n      // 方法2：尝试从vnode上下文获取数据\n      if (item < 0 && e.detail.vnode && e.detail.vnode.componentInstance) {\n        const vm = e.detail.vnode.componentInstance;\n        if (vm.cardId !== undefined) {\n          item = parseInt(vm.cardId);\n        }\n      }\n      \n      // 方法3：使用Vue的数据属性机制\n      if (item < 0 && e.detail.el.dataset.cardId) {\n        item = parseInt(e.detail.el.dataset.cardId);\n      }\n      \n      // 如果仍然无法获取有效ID，返回\n      if (!this.canOperate || item < 0) {\n        return false;\n      }\n      \n      let drag = this.findPos(item);\n      if (drag < 0 && item != this.cards[1][0]) {\n        return;\n      }\n      let data = e.detail.el._moveData;\n      data.offsetLeft = e.detail.el.offsetLeft;\n      data.offsetTop = e.detail.el.offsetTop;\n      this.dragItem = drag;\n      if (this.dragItem < 0) {\n        this.dragItem = 1;\n      }\n      this.dragCard = item;\n      this.enterItem = -99;\n    },\n    async end(e) {\n      let drag = this.dragItem;\n      if (!this.canOperate) {\n        return;\n      }\n      if (drag == 1 && this.dragCard != this.cards[1][0]) {\n        return;\n      }\n      let data = e.detail.el._moveData;\n      let left = data.offsetX + data.offsetLeft;\n      let top = data.offsetY + data.offsetTop;\n      let index = Math.floor((left + 50) / this.cardWidth);\n      if (index >= 0 && index < 4 && top >= 115 && top <= this.height - 75) {\n        index += top <= 330 ? 2 : 6;\n        await this.clickCard(drag).catch(console.log);\n        if (this.sign >= 0 && index != drag && index >= 0) {\n          await this.clickCard(index).catch(console.log);\n        }\n      }\n      this.fresh[drag]++;\n      this.enterItem = -99;\n      this.dragItem = -99;\n      this.dragCard = -99;\n    },\n    enter(item) {\n      console.log(\"enter\", item);\n      // this.enterItem = item\n    },\n    leave(item) {\n      console.log(\"leave\", item);\n      // if (this.enterItem == item) {\n      //   this.enterItem = -99\n      // }\n    },\n    moveEnter(item) {\n      console.log(\"moveEnter\", item, this.dragItem);\n      // if (item == this.dragItem) {\n      //   return\n      // }\n      // this.enterItem = item\n      // this.moveflag = false\n    },\n    move(e) {\n      if (!this.canOperate) {\n        return false;\n      }\n      if (this.dragItem == 1 && this.dragCard != this.cards[1][0]) {\n        return;\n      }\n      let data = e.detail.el._moveData;\n      let left = data.offsetX + data.offsetLeft;\n      let top = data.offsetY + data.offsetTop;\n      let index = Math.floor((left + 50) / this.cardWidth);\n      if (index >= 0 && index < 4 && top >= 115 && top <= this.height - 75) {\n        index += top <= 330 ? 2 : 6;\n        if (this.dragItem != index) this.enterItem = index;\n      } else {\n        this.enterItem = -99;\n      }\n      e.detail.el.style.left = left / 16 + \"rem\";\n      e.detail.el.style.top = top / 16 + \"rem\";\n      if (this.dragItem >= 6) {\n        let index = this.cards[this.dragItem].indexOf(this.dragCard);\n        let j = 0;\n        for (let down of this.$refs.down) {\n          let res = down.$el._cardImageRoot.className.match(\"drag\");\n          if (!res || ++j <= index) {\n            continue;\n          }\n          down.$el._cardImageRoot.style.left = (data.offsetX + data.offsetLeft) / 16 + \"rem\";\n          down.$el._cardImageRoot.style.top =\n            (data.offsetY + data.offsetTop + (j - index - 1) * 30) / 16 + \"rem\";\n        }\n      }\n    },\n    \n    /**\n     * 渲染文本视图 - 显示当前游戏状态\n     * 用于终端交互式游戏\n     */\n    renderTextView() {\n      console.log('\\n╔════════════════════════════════════════════════╗');\n      console.log('║            蜘蛛纸牌 (Spider)                  ║');\n      console.log('╚════════════════════════════════════════════════╝');\n      \n      // 统计信息\n      const totalCards = this.cards.slice(1).reduce((sum, col) => sum + col.length, 0);\n      const deckCards = this.cards[0].length;\n      console.log(`\\n步数: ${this.step} | 牌堆剩余: ${deckCards} 张 | 场上: ${totalCards} 张\\n`);\n      \n      // 显示牌堆\n      console.log('━━━ 牌堆 ━━━');\n      if (deckCards > 0) {\n        console.log(`  [0] 🂠 ${deckCards} 张 (点击发牌)`);\n      } else {\n        console.log('  [0] (空)');\n      }\n      console.log('');\n      \n      // 显示9列卡片（cards数组索引1-9）\n      for (let i = 1; i < this.cards.length; i++) {\n        const col = this.cards[i];\n        console.log(`━━━ 第 ${i} 列 ━━━`);\n        \n        if (col.length === 0) {\n          console.log('  (空列)');\n        } else {\n          // 只显示最后5张牌，避免输出过长\n          const displayCount = Math.min(5, col.length);\n          const startIdx = col.length - displayCount;\n          \n          if (startIdx > 0) {\n            console.log(`  ... (隐藏 ${startIdx} 张)`);\n          }\n          \n          for (let j = startIdx; j < col.length; j++) {\n            const card = col[j];\n            const cardText = getCardPlaceholderText(card);\n            const isLast = j === col.length - 1;\n            console.log(`  [${j}] ${cardText}${isLast ? ' ←' : ''}`);\n          }\n        }\n        console.log('');\n      }\n      \n      console.log('提示: ← 表示该列顶牌');\n      \n      return '渲染完成';\n    },\n    \n    /**\n     * 获取当前可用的操作列表\n     * 用于终端交互式游戏\n     */\n    getAvailableActions() {\n      const actions = [];\n      \n      // 撤销按钮\n      actions.push({\n        id: 1,\n        label: '撤销 (◀︎)',\n        method: 'undo',\n        args: [],\n        disabled: !this.canUndo\n      });\n      \n      // 重新开始按钮\n      actions.push({\n        id: 2,\n        label: '重新开始 (RESTART)',\n        method: 'goon',\n        args: []\n      });\n      \n      // 单步执行按钮\n      actions.push({\n        id: 3,\n        label: '单步执行 (►)',\n        method: 'stepFn',\n        args: []\n      });\n      \n      // 自动运行按钮\n      const isAutoRunning = this.gameManager?.isAutoRunning || false;\n      actions.push({\n        id: 4,\n        label: isAutoRunning ? '停止自动 (STOP)' : '自动运行 (AUTO)',\n        method: 'pass',\n        args: []\n      });\n      \n      // 发牌按钮（如果牌堆有牌）\n      if (this.cards[0].length > 0) {\n        actions.push({\n          id: 5,\n          label: '从牌堆发牌',\n          method: 'clickCard',\n          args: [0]\n        });\n      }\n      \n      // 过滤掉禁用的按钮\n      return actions.filter(a => !a.disabled);\n    },\n  },\n  computed: {\n    // 保留Spider特有的计算属性\n    height() {\n      return (\n        Math.max(...this.cards.slice(-4).map((cards) => cards.length)) * 30 +\n        480\n      );\n    },\n    cardWidth() {\n      return this.$refs.container ? this.$refs.container.offsetWidth >> 2 : 500;\n    },\n  },\n};\n\n// 使用工厂函数创建增强的Spider组件并导出\nexport default GameComponentPresets.cardGame(Spider, 500);\n","import { render } from \"./Spider.vue?vue&type=template&id=f91447be&scoped=true\"\nimport script from \"./Spider.vue?vue&type=script&lang=js\"\nexport * from \"./Spider.vue?vue&type=script&lang=js\"\n\nimport \"./Spider.vue?vue&type=style&index=0&id=f91447be&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f91447be\"]])\n\nexport default __exports__","<template>\n  <GameLayout\n    v-bind=\"gameLayoutProps\"\n    :container-style=\"{ width: '100%' }\"\n    @undo=\"undo\"\n    @goon=\"goon\"\n    @step=\"stepTwiceFn\"\n    @auto=\"pass\"\n  >\n    <template #game-content>\n      <div class=\"row center\">\n        <div>\n          <div\n            class=\"cardsul center\"\n            style=\"\n              padding-left: 0;\n              margin: 0;\n              width: 100%;\n              max-width: 37.5rem;\n              background-color: #719192;\n              padding: 0.3125rem 0;\n            \"\n          >\n            <div\n              v-for=\"(item, i) in cards1\"\n              :key=\"i\"\n              class=\"m-0 center\"\n              style=\"width: 16%; border-radius: 50%; overflow: hidden\"\n              @click=\"canOperate && clickCard(i)\"\n            >\n              <div\n                class=\"center\"\n                style=\"width: 100%; position: relative\"\n                :style=\"{\n                  backgroundColor:\n                    item < 0\n                      ? 'transparent'\n                      : !cards2[item]\n                        ? '#fff'\n                        : item == sign\n                          ? '#FFB800'\n                          : grades[item] == grade\n                            ? '#01AAED'\n                            : '#5FB878',\n                }\"\n              >\n                <div\n                  class=\"shanshuo abso\"\n                  v-show=\"validBoxes.indexOf(i) >= 0\"\n                  style=\"\n                    width: 100%;\n                    height: 100%;\n                    background-color: #ff5722;\n                    top: 0;\n                    left: 0;\n                  \"\n                ></div>\n                <img\n                  :style=\"{\n                    transform:\n                      cards2[item] && grades[item] != grade\n                        ? 'rotate(180deg)'\n                        : 'rotate(0)',\n                    opacity: item < 0 ? 0 : 100,\n                  }\"\n                  :src=\"\n                    !cards2[item]\n                      ? './static/avatar/logo.webp'\n                      : './static/avatar/' + item + '.webp'\n                  \"\n                  style=\"width: 100%\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <span class=\"m-0 scrore\">{{ lowCount + \" : \" + highCount }}</span>\n      </div>\n    </template>\n  </GameLayout>\n</template>\n\n<script>\nimport GridBattleComponent from \"./Chess.js\";\nexport default GridBattleComponent;\n</script>\n\n<style scoped>\n@import url(\"./sum.css\");\n</style>\n","import { shuffleCards, wait, seededRandom } from \"../utils/help.js\";\nimport { GameComponentPresets } from \"../utils/gameComponentFactory.js\";\n\nlet _modes = [\n  [1, 0],\n  [1, 1],\n  [2, 1],\n  [2, 2],\n  [3, 1],\n  [3, 2],\n  [3, 3],\n];\n\nconst GridBattle = {\n  name: \"GridBattle\",\n  data() {\n    return {\n      title: \"GridBattle\",\n      cards1: [],\n      cards2: [],\n      // 移除arr数组，因为现在由GameStateManager管理历史记录\n      // arr: [],\n      sign: -1,\n      number: 36,\n      grade: -1,\n      modes: [\n        0, 1, 3, 6, 10, 15, 2, 5, 7, 13, 18, 21, 4, 8, 14, 17, 24, 27, 9, 12,\n        20, 25, 26, 31, 11, 19, 23, 29, 30, 35, 16, 22, 28, 32, 34, 33,\n      ],\n      grades: [\n        1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1,\n        1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1,\n      ],\n    };\n  },\n  computed: {\n    validBoxes() {\n      return this.getValidBoxes(this.sign);\n    },\n    lowCount() {\n      return this.cards1.filter((item) => this.grades[item] === 0).length;\n    },\n    highCount() {\n      return this.cards1.filter((item) => this.grades[item] === 1).length;\n    },\n  },\n  // 初始化\n  methods: {\n    init() {\n      this.sign = -1;\n      this.grade = -1;\n      this.cards1.splice(0);\n      this.cards2.splice(0);\n      let cards = this.cards1;\n      // return cards.splice(0, 0, ...this.modes)\n      for (let i = 0; i < this.number; i++) {\n        cards.push(i);\n        this.cards2.push(false); // 初始化cards2为36个false\n      }\n      shuffleCards(cards, this.number);\n    },\n    // 记录移动操作\n    recordMove(from, to, card, sign, signIndex) {\n      this.gameManager.recordOperation({\n        type: \"move\",\n        from: from,\n        to: to,\n        card: card,\n        sign: sign,\n        signIndex: signIndex,\n        timestamp: Date.now(),\n      });\n    },\n\n    // 记录翻转操作\n    recordFlip(card) {\n      this.gameManager.recordOperation({\n        type: \"flip\",\n        card: card,\n        timestamp: Date.now(),\n      });\n    },\n\n    // 处理撤销操作\n    handleUndo(operation) {\n      // 根据操作类型执行相应的撤销逻辑\n      switch (operation.type) {\n        case \"move\":\n          // 撤销移动操作\n          this.cards1.splice(operation.signIndex, 1, operation.sign);\n          this.cards1.splice(\n            operation.to,\n            1,\n            operation.card >= 0 ? operation.card : -1,\n          );\n          break;\n        case \"flip\":\n          // 撤销翻转操作\n          this.cards2[operation.card] = false; // 直接赋值而不是splice\n          break;\n      }\n    },\n\n    // 重写undo方法\n    undo() {\n      // 原代码中每执行一次undo会弹出两个操作，这里也保持一致\n      this.gameManager.undo();\n      this.gameManager.undo();\n    },\n\n    // 重写clickCard方法，使用GameStateManager记录操作\n    async clickCard(i, isAuto) {\n      let card = this.cards1[i];\n      if (this.grade < 0) {\n        this.grade = this.grades[card];\n      }\n      if (card >= 0 && !this.cards2[card]) {\n        this.cards2[card] = true; // 直接赋值而不是splice\n        this.recordFlip(card); // 使用GameStateManager记录操作\n        this.sign = -1;\n        if (!isAuto) {\n          this.gameManager.step(async () => {\n            await wait(this.gameManager.autoStepDelay);\n            await this.stepFn();\n          });\n        }\n        return;\n      }\n      let grade = this.step % 2 == 0 ? this.grade : !this.grade;\n      if (this.sign >= 0 && this.grades[this.sign] != grade) {\n        this.sign =\n          card != this.sign && card >= 0 && this.grades[card] != grade\n            ? card\n            : -1;\n        return;\n      }\n      if (this.sign >= 0 && this.grades[this.sign] == grade) {\n        if (card >= 0 && this.grades[card] == grade) {\n          this.sign = this.sign == card ? -1 : card;\n          return;\n        }\n        if (this.validBoxes.indexOf(i) >= 0) {\n          let signIndex = this.cards1.indexOf(this.sign);\n          this.cards1.splice(signIndex, 1, -1);\n          this.cards1.splice(i, 1, this.sign);\n          this.recordMove(signIndex, i, card, this.sign, signIndex); // 使用GameStateManager记录操作\n          this.sign = -1;\n          if (card >= 0) {\n            if (this.lowCount <= 0) {\n              if (this.grade == 1) {\n                this.gameManager.setWin();\n              } else {\n                this.gameManager.setLose();\n              }\n            }\n            if (this.highCount <= 0) {\n              if (this.grade == 0) {\n                this.gameManager.setWin();\n              } else {\n                this.gameManager.setLose();\n              }\n            }\n            if (this.lowCount == 1 && this.highCount == 1) {\n              this.gameManager.setDraw();\n            }\n          }\n          if (!isAuto) {\n            this.gameManager.step(async () => {\n              await wait(this.gameManager.autoStepDelay);\n              await this.stepFn();\n            });\n          }\n          return;\n        }\n      }\n      this.sign = card;\n    },\n\n    // 重写stepTwiceFn方法\n    async stepTwiceFn() {\n      await this.gameManager.step(async () => {\n        await this.stepFn();\n        await wait(this.gameManager.autoStepDelay);\n        await this.stepFn();\n      });\n    },\n    getValidBoxes(item) {\n      let arr = [];\n      // let item = this.cards1[index];\n      let index = this.cards1.indexOf(item);\n      if (item < 0 || index < 0) {\n        return arr;\n      }\n      let mode = this.modes.indexOf(item);\n      let h = _modes[Math.floor(mode / 6)],\n        v = _modes[mode % 6];\n      if (index + v[0] * 6 < 36 && (index % 6) + v[1] < 6)\n        arr.push(index + v[0] * 6 + v[1]);\n      if (index - v[0] * 6 >= 0 && (index % 6) + v[1] < 6)\n        arr.push(index - v[0] * 6 + v[1]);\n      if (index + v[0] * 6 < 36 && (index % 6) - v[1] >= 0)\n        arr.push(index + v[0] * 6 - v[1]);\n      if (index - v[0] * 6 >= 0 && (index % 6) - v[1] >= 0)\n        arr.push(index - v[0] * 6 - v[1]);\n      if (index + h[1] * 6 < 36 && (index % 6) + h[0] < 6)\n        arr.push(index + h[1] * 6 + h[0]);\n      if (index - h[1] * 6 >= 0 && (index % 6) + h[0] < 6)\n        arr.push(index - h[1] * 6 + h[0]);\n      if (index + h[1] * 6 < 36 && (index % 6) - h[0] >= 0)\n        arr.push(index + h[1] * 6 - h[0]);\n      if (index - h[1] * 6 >= 0 && (index % 6) - h[0] >= 0)\n        arr.push(index - h[1] * 6 - h[0]);\n      return arr;\n    },\n    async stepFn() {\n      // 1.挪2.送3.翻4.翻吃5.坏翻6.中翻7.友8.躲9.敌10.吃\n      let temp = [];\n      let hide = [],\n        friends = [];\n      let grade = this.step % 2 == 0 ? this.grade : !this.grade;\n      let _this = this;\n      let moveFn = async function (from, to) {\n        _this.sign = -1;\n        await _this.clickCard(from, true);\n        await wait(_this.gameManager.autoStepDelay);\n        await _this.clickCard(to, true);\n      };\n      for (let i = 0; i < this.cards1.length; i++) {\n        let item = this.cards1[i];\n        if (item < 0) {\n          temp[i] = temp[i] || 1;\n          continue;\n        }\n        if (!this.cards2[item]) {\n          temp[i] = temp[i] || 3;\n          hide.push(i);\n          continue;\n        }\n        if (this.grades[item] == grade) {\n          temp[i] = 7;\n          friends.push(i);\n          let boxes = this.getValidBoxes(item);\n          for (let b of boxes) {\n            let c = this.cards1[b];\n            if (c < 0) {\n              continue;\n            }\n            if (!this.cards2[c]) {\n              temp[b] = temp[b] == 5 || temp[b] == 6 ? 6 : 4;\n              continue;\n            }\n            if (this.grades[c] != grade) {\n              return await moveFn(i, b);\n            }\n          }\n          continue;\n        }\n        temp[i] = 9;\n        let boxes = this.getValidBoxes(item);\n        for (let b of boxes) {\n          let c = this.cards1[b];\n          if (c < 0) {\n            temp[b] = 2;\n            continue;\n          }\n          if (!this.cards2[c]) {\n            temp[b] = temp[b] == 4 || temp[b] == 6 ? 6 : 5;\n            continue;\n          }\n          if (this.grades[c] == grade) {\n            temp[b] = 8;\n          }\n        }\n      }\n      // 1.吃2.躲3.翻吃4.中翻5.翻6.挪7.坏翻8.送\n      for (let f of friends) {\n        let t = temp[f];\n        if (t == 8) {\n          let c = this.cards1[f];\n          let boxes = this.getValidBoxes(c);\n          for (let box of boxes) {\n            if (temp[box] == 1) {\n              return await moveFn(f, box);\n            }\n          }\n        }\n      }\n      let best = -1;\n      let worst = -1;\n      for (let i = 0; i < hide.length; i++) {\n        let h = hide[i];\n        let t = temp[h];\n        if (t == 4) {\n          return await this.clickCard(h, true);\n        }\n        if (t == 5) {\n          worst = h;\n          hide.splice(i, 1);\n          i--;\n        }\n        if (t == 6) {\n          best = h;\n        }\n      }\n      if (best >= 0) {\n        return await this.clickCard(best, true);\n      }\n      if (hide.length > 0) {\n        let random = Math.floor(seededRandom() * hide.length);\n        return await this.clickCard(hide[random], true);\n      }\n      let suicide = false;\n      let road = [];\n      let protectedRoad = [];\n      // 预先收集所有友方棋子可以到达的空位\n      let friendsReach = {};\n      for (let f of friends) {\n        let c = this.cards1[f];\n        let boxes = this.getValidBoxes(c);\n        for (let box of boxes) {\n          if (temp[box] == 1) {\n            friendsReach[box] = (friendsReach[box] || 0) + 1;\n          }\n        }\n      }\n      // 收集路径，区分受保护和普通路径\n      for (let f of friends) {\n        let c = this.cards1[f];\n        let boxes = this.getValidBoxes(c);\n        for (let box of boxes) {\n          if (temp[box] == 1) {\n            if (friendsReach[box] >= 2) {\n              protectedRoad.push([f, box]);\n            } else {\n              road.push([f, box]);\n            }\n          }\n          if (temp[box] == 2) {\n            suicide = [f, box];\n          }\n        }\n      }\n      // 优先移动到受保护的位置\n      if (protectedRoad.length > 0) {\n        let random = Math.floor(seededRandom() * protectedRoad.length);\n        return await moveFn(protectedRoad[random][0], protectedRoad[random][1]);\n      }\n      // 其次移动到普通空位\n      if (road.length > 0) {\n        let random = Math.floor(seededRandom() * road.length);\n        return await moveFn(road[random][0], road[random][1]);\n      }\n      if (worst >= 0) {\n        return await this.clickCard(worst, true);\n      }\n      if (suicide) {\n        return await moveFn(suicide[0], suicide[1]);\n      } else {\n        throw new Error(\"unkown error\");\n      }\n    },\n    \n    /**\n     * 渲染文本视图 - 显示当前游戏状态\n     * 用于终端交互式游戏\n     */\n    renderTextView() {\n      console.log('\\n╔════════════════════════════════════════════════╗');\n      console.log('║           国际象棋 (GridBattle)               ║');\n      console.log('╚════════════════════════════════════════════════╝');\n      console.log(`\\n步数: ${this.step}`);\n      console.log(`高子: ${this.highCount} | 低子: ${this.lowCount}\\n`);\n      \n      // 显示6x6棋盘\n      console.log('    0   1   2   3   4   5');\n      console.log('  ┌───┬───┬───┬───┬───┬───┐');\n      \n      for (let row = 0; row < 6; row++) {\n        let line = `${row} │`;\n        for (let col = 0; col < 6; col++) {\n          const idx = row * 6 + col;\n          const card = this.cards1[idx];\n          \n          if (this.cards2[card]) {\n            // 已翻开\n            const grade = this.grades[card];\n            const symbol = grade === 1 ? ' H ' : ' L '; // H=高子，L=低子\n            const isSelected = idx === this.sign;\n            line += isSelected ? `[${symbol.trim()}]` : symbol;\n          } else if (this.cards1[idx] >= 0) {\n            // 未翻开\n            line += ' ? ';\n          } else {\n            // 空位置\n            line += ' - ';\n          }\n          line += '│';\n        }\n        console.log(line);\n        \n        if (row < 5) {\n          console.log('  ├───┼───┼───┼───┼───┼───┤');\n        }\n      }\n      console.log('  └───┴───┴───┴───┴───┴───┘');\n      \n      console.log('\\n图例:');\n      console.log('  ? = 未翻开  - = 空位置  H = 高子  L = 低子  [H/L] = 已选中');\n      \n      if (this.sign >= 0) {\n        const row = Math.floor(this.sign / 6);\n        const col = this.sign % 6;\n        console.log(`\\n当前选中: (${row},${col})`);\n        \n        const validMoves = this.validBoxes;\n        if (validMoves && validMoves.length > 0) {\n          const moves = validMoves.map(idx => {\n            const r = Math.floor(idx / 6);\n            const c = idx % 6;\n            return `(${r},${c})`;\n          }).join(', ');\n          console.log(`可移动到: ${moves}`);\n        }\n      }\n      \n      return '渲染完成';\n    },\n    \n    /**\n     * 获取当前可用的操作列表\n     * 用于终端交互式游戏\n     */\n    getAvailableActions() {\n      const actions = [];\n      \n      // 撤销按钮\n      actions.push({\n        id: 1,\n        label: '撤销 (◀︎)',\n        method: 'undo',\n        args: [],\n        disabled: !this.canUndo\n      });\n      \n      // 重新开始按钮\n      actions.push({\n        id: 2,\n        label: '重新开始 (RESTART)',\n        method: 'goon',\n        args: []\n      });\n      \n      // 单步执行按钮\n      actions.push({\n        id: 3,\n        label: '单步执行 (►)',\n        method: 'stepFn',\n        args: []\n      });\n      \n      // 自动运行按钮\n      const isAutoRunning = this.gameManager?.isAutoRunning || false;\n      actions.push({\n        id: 4,\n        label: isAutoRunning ? '停止自动 (STOP)' : '自动运行 (AUTO)',\n        method: 'pass',\n        args: []\n      });\n      \n      // 过滤掉禁用的按钮\n      return actions.filter(a => !a.disabled);\n    },\n  },\n};\n\n// 使用工厂函数创建增强的GridBattle组件并导出\nexport default GameComponentPresets.strategyGame(GridBattle, 1200);\n","import { render } from \"./Chess.vue?vue&type=template&id=f1b2a642&scoped=true\"\nimport script from \"./Chess.vue?vue&type=script&lang=js\"\nexport * from \"./Chess.vue?vue&type=script&lang=js\"\n\nimport \"./Chess.vue?vue&type=style&index=0&id=f1b2a642&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f1b2a642\"]])\n\nexport default __exports__","import { createRouter, createWebHashHistory } from \"vue-router\";\nimport Sum from \"@/components/sum.vue\";\nimport Fish from \"@/components/fish.vue\";\nimport point24 from \"@/components/point24.vue\";\nimport Month from \"@/components/month.vue\";\nimport Tortoise from \"@/components/Tortoise.vue\";\nimport Sort from \"@/components/Sort.vue\";\nimport Pairs from \"@/components/Pairs.vue\";\nimport Spider from \"@/components/Spider.vue\";\nimport GridBattle from \"@/components/Chess.vue\";\n\nconst routes = [\n  {\n    path: \"/\",\n    redirect: \"/month\",\n  },\n  {\n    path: \"/month\",\n    component: Month,\n  },\n  {\n    path: \"/fish\",\n    component: Fish,\n  },\n  {\n    path: \"/point24\",\n    component: point24,\n  },\n  {\n    path: \"/blackjack\",\n    component: Sum,\n  },\n  {\n    path: \"/Tortoise\",\n    component: Tortoise,\n  },\n  {\n    path: \"/Sort\",\n    component: Sort,\n  },\n  {\n    path: \"/Pairs\",\n    component: Pairs,\n  },\n  {\n    path: \"/Spider\",\n    component: Spider,\n  },\n  {\n    path: \"/GridBattle\",\n    component: GridBattle,\n  },\n];\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes,\n});\n\nexport default router;\n","import { createStore } from \"vuex\";\n\nexport default createStore({\n  state: {},\n  mutations: {},\n  actions: {},\n  modules: {},\n});\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport store from \"./store\";\n// import { preload } from \"./utils/help.js\";\n\n// preload();\n\nconst app = createApp(App);\napp.use(router);\napp.use(store);\napp.mount(\"#app\");\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"82\":\"d355a5cf\",\"229\":\"2e631267\",\"279\":\"189bb8a8\",\"294\":\"f71c8c9e\",\"526\":\"5b1344ba\",\"876\":\"c6a6bbfd\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"css/\" + chunkId + \".\" + {\"82\":\"0ec60025\",\"229\":\"46ed9241\",\"279\":\"94d13aed\",\"294\":\"493cbb4c\",\"526\":\"b5aab8a0\",\"876\":\"f4a913f1\"}[chunkId] + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"tsubaki-game-library:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"\";","if (typeof document === \"undefined\") return;\nvar createStylesheet = function(chunkId, fullhref, oldTag, resolve, reject) {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tif (__webpack_require__.nc) {\n\t\tlinkTag.nonce = __webpack_require__.nc;\n\t}\n\tvar onLinkComplete = function(event) {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && event.type;\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + errorType + \": \" + realHref + \")\");\n\t\t\terr.name = \"ChunkLoadError\";\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tif (linkTag.parentNode) linkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\n\tif (oldTag) {\n\t\toldTag.parentNode.insertBefore(linkTag, oldTag.nextSibling);\n\t} else {\n\t\tdocument.head.appendChild(linkTag);\n\t}\n\treturn linkTag;\n};\nvar findStylesheet = function(href, fullhref) {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = function(chunkId) {\n\treturn new Promise(function(resolve, reject) {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, null, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.miniCss = function(chunkId, promises) {\n\tvar cssChunks = {\"82\":1,\"229\":1,\"279\":1,\"294\":1,\"526\":1,\"876\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(function() {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, function(e) {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr\n\n// no prefetching\n\n// no preloaded","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktsubaki_game_library\"] = self[\"webpackChunktsubaki_game_library\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(6134); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["GameSettingsManager","constructor","this","listeners","getDelay","gameName","gameDelay","localStorage","getItem","parseInt","globalDelay","saveDelay","delay","applyToAll","setItem","toString","keys","Object","forEach","key","startsWith","removeItem","notifyListeners","reset","clear","addListener","callback","push","removeListener","index","indexOf","splice","error","console","CARD_TYPES","CARD_POINTS","getCardPlaceholderText","cardId","types","points","suit","point","getCardImageSrc","id","_createElementBlock","_hoisted_1","_createVNode","_component_router_view","script","__exports__","render","class","style","_createBlock","_component_GameLayout","_mergeProps","_ctx","gameLayoutProps","text","goon","backgroundColor","onGoon","_withCtx","_createElementVNode","src","_hoisted_2","_toDisplayString","score1","_hoisted_3","_hoisted_4","_Fragment","_renderList","arr1","item","_component_CardImage","_hoisted_5","_hoisted_6","arr2","_hoisted_7","_hoisted_8","score2","_component_GameControls","buttons","stepDisabled","autoDisabled","onHitBtn","_cache","$event","hit","cardsChg","onPassBtn","pass","shuffleCards","cards","num","rand","tmp","last","i","Math","floor","seededRandom","timeout","handle","time","Promise","resolve","setTimeout","wait","r","equalArray","length","checkDeadForeach","array","newest","j","count","join","log","values","s","setSeed","seed","GameStateManager","options","hitflag","winflag","loseflag","drawflag","history","isAutoRunning","autoInterval","autoStepDelay","_listeners","init","stopAuto","emit","recordOperation","operation","backword","unshift","undo","pop","getStepCount","canUndo","startAuto","stepCallback","stepCount","maxSteps","clearInterval","setAutoStepDelay","getAutoStepDelay","step","setWin","setLose","setDraw","resetCallback","on","event","listener","off","data","getState","setState","state","assign","getDefaultComputedProperties","manager","gameManager","undoDisabled","restartDisabled","canOperate","gameState","gameRules","month","fish","point24","Tortoise","Sort","Pairs","Spider","GridBattle","blackjack","GameResultModal","GameControls","GameLayout","CardImage","createEnhancedGameComponent","baseComponent","computed","methods","hasUndo","hasRestart","customInit","customCleanup","components","baseData","call","created","Date","now","loadDelaySettings","_settingsChangeHandler","handleSettingsChanged","bind","gameSettingsManager","handleUndo","handleHistoryUpdate","autoCalc","beforeUnmount","gameControlsConfig","showUndo","showRestart","currentGame","$route","path","substring","title","gameRule","async","seen","WeakMap","pathStack","replacer","value","has","currentPath","set","beforeState","JSON","stringify","$data","stepFn","renderTextView","afterState","warn","settings","window","name","template","props","defineAsyncComponent","GameComponentPresets","cardGame","simpleGame","includes","arr","cards2","pairGame","_timer","puzzleGame","showHint","strategyGame","difficulty","setDifficulty","level","actionGame","score","combo","addScore","resetCombo","customGame","config","features","customLogic","feature","gameTime","_gameTimer","startTimer","setInterval","stopTimer","highScore","updateScore","delays","easy","normal","hard","Sum","component","currentCard","shift","getScore","player","flag","dealerScore","dealerCards","map","c","playerScore","playerCards","remainingCards","getAvailableActions","actions","label","method","args","SumComponent","onStep","onAuto","_component_message","show1","_normalizeStyle","opacity","diff1","diff2","diff3","score3","diff4","_hoisted_9","score4","_hoisted_10","_hoisted_11","_normalizeClass","ssArr","flyin1","flyin2","flyout1","flyout2","message","Fish","cards1","cards3","cards4","findIndex","cardCounts","padStart","cardTexts","watch","val","old","FishComponent","style1","onUndo","_component_point24card","card","choose","sign","onClick","clickSign","signs","calc","toFixed","clickCard","point24card","opts","process","nums","len","aim","numij","k","abs","fns","a","b","Number","isFinite","num1","num2","first","Point24","number","type","timestamp","combined","left","right","Error","temp","index1","index2","result","f","temp00","temp02","l","undefined","cardText","h","idx","disabled","filter","Point24Component","class1","visibleCards","Month","months","count13","hasCards","MonthComponent","originalItem","shanshuo","check","done","next","top","up","next_i","max","fn","m","d","signIndex","signCard","CANVAS_ROWS","CANVAS_COLS","canvas","Array","fill","CARD_ROWS","CARD_COLS","LAYOUT_WIDTH","LAYOUT_HEIGHT","activeCards","posIdx","mapInfo","canClick","isSelected","parseFloat","zIndex","sort","startCol","round","startRow","safeStartRow","min","safeStartCol","row","col","canvasRow","canvasCol","char","borderedCanvas","repeat","nextCards","TortoiseComponent","n","height","canMoveCard","hide","getCurrentCandidateCard","createCandidate","targetCard","slotIndex","context","candidatePriority","t","currentTargetIdx","ruleBasedScore","currentCandidate","_getters","slotPriority","excludeReason","_feature2","matchNextCard","adjacentEmptyCount","columnEmptyCount","_deep","deep","_winProbability","simulatedCards","slotId","estimateWinProbability","_diff","_feature0","_feature1","_feature3","_feature4","_feature5","countEmptyInColumn","_feature6","countEmptyAbove","_feature7","countEmptyBelow","_feature8","_feature9","_feature10","_feature11","countCardsAbove","_feature12","countCorrectBelow","_feature13","countSameRankCandidates","_feature14","countPossibleMoves","_feature15","calculateEmptyEntropy","_feature16","countRestoredCards","_feature17","matchMode","_feature18","_feature19","_feature20","isBetterCandidate","candidateA","candidateB","valueA","valueB","gameEvaluationMethods","calculateRuleBasedPriority","slotInfo","candidateCard","candidateIdx","slotPrevCard","colSize","slotRow","candidateCol","candidateRow","slotPrevRank","candidateRank","candidateSuit","candidateGroup","candidateScore","prevPosInCandidateCol","prevCardInCandidateCol","prevRankInCandidateCol","prevSuitInCandidateCol","prevGroupInCandidateCol","matchNextCardScore","nextPosInCandidateCol","nextCardInCandidateCol","nextRankInCandidateCol","nextSuitInCandidateCol","nextGroupInCandidateCol","colStart","compareRuleBasedPriority","scoreA","scoreB","colIdx","colEnd","pos","slotIdx","cRank","cSuit","expectedRank","slot","prevCard","prevRank","targetRank","cardGroup","emptyPerCol","totalEmpty","entropy","p","log2","cards1Array","card_group","cardIdx","restoredCount","rank","targetGroup","expectedPosition","allBelowCorrect","checkRank","checkPos","cardAtPos","cardAtPosRank","cardAtPosSuit","cardAtPosGroup","totalCols","totalScore","maxScore","rowScore","evaluateRowScore","blockPenalty","calculateBlockPenalty","baseScore","finalScore","emptySlotsAbove","countEmptySlotsAbove","cardRank","cardSuit","expectedGroup","checkRowBelowCorrect","checkRow","penalty","upperCard","upperRank","possibleMoves","sign_index","candidateIntervals","currentCandidates","$nextTick","updateAllCandidateCycling","beforeDestroy","stopCandidateCycling","startCandidateCycling","getCandidateCardsForSlot","candidates","findAllCardsByRankOffset","currentIndex","calculateStateHash","isStateHashRepeated","hash","find","record","stateHash","recordMove","from","to","executeMove","cardToMove","targetEmptyIndex","cardToMoveIndex","emptySlot","findNextCard","updateN","errorState","findPrevCard","document","scrollTop","wrapper","querySelector","documentElement","body","evaluateCandidateScore","candidate","selectBestCandidate","bestScore","bestIdx","findCardByRankOffset","offset","condition","returnAll","target_rank","target_card","nextIdx","over","prior","slotsToResetPriority","priority","_in","able","bestCard","dead","candidatePriorities","Map","prevFn","prev_c","accumulatedPriority","maxPriority","next_idx","subPriority","get","nextFn","next_c","emptySlotId","card_at_n","prevCandidates","prevCandidate","candidatesWithPriority","tempCards","simulatedHash","allCandidates","ind","road","bestCandidate","candidateInfo","allPrioritiesZero","validSlotCount","setMatchMode","mode","getMatchModeDescription","descriptions","colWidth","header","headerRow","separator","footer","slice","rowStr","cellContent","highlight","emptySlotIndex","prevCardIndex","emptyLabel","firstCandidate","candidateText","canMove","isTarget","padding","leftPad","rightPad","targetSlotCard","targetSlot","hasValidMove","handler","SortComponent","sign2","gameOver","matched","cols","rows","line","prefix","padEnd","PairsComponent","calss","ref","drag","dragItem","turn","fresh","dragCard","enterItem","start","end","move","color","onMouseenter","enter","onTouchenter","onMouseleave","leave","onTouchleave","getPosition","e","isTouch","touches","clientX","clientY","updateMoveData","el","_moveData","position","offsetX","startPosition","offsetY","prevent","bubbles","cancelable","preventDefault","stopPropagation","detail","dispatchEvent","CustomEvent","listenEvents","events","handles","addEventListener","mounted","binding","vnode","_isInitMove","page","modifiers","isMove","_start","cancel","removeEventListener","_end","_move","passive","install","Vue","directive","directives","setupGameStateListeners","moveEnter","$refs","middleBox","downBox","middleEnters","downEnters","middle","down","$forceUpdate","findPos","addAndCheck","res","checkDown","up1","up2","pos1","pos2","top1","top2","checkUp","checkMove","skipCheck","addCard","lock","add","componentInstance","vm","dataset","offsetLeft","offsetTop","cardWidth","catch","$el","_cardImageRoot","className","match","totalCards","reduce","sum","deckCards","displayCount","startIdx","isLast","container","offsetWidth","SpiderComponent","width","stepTwiceFn","grades","grade","validBoxes","lowCount","highCount","_modes","modes","getValidBoxes","recordFlip","isAuto","v","friends","_this","moveFn","boxes","box","best","worst","random","suicide","protectedRoad","friendsReach","symbol","trim","validMoves","moves","routes","redirect","router","createRouter","createWebHashHistory","createStore","mutations","modules","app","createApp","App","use","store","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","deferred","O","chunkIds","notFulfilled","Infinity","fulfilled","every","getter","__esModule","definition","o","defineProperty","enumerable","chunkId","all","promises","u","miniCssF","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","url","needAttach","scripts","getElementsByTagName","getAttribute","createElement","charset","nc","setAttribute","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","target","head","appendChild","Symbol","toStringTag","createStylesheet","fullhref","oldTag","reject","linkTag","rel","nonce","onLinkComplete","errorType","realHref","href","err","code","request","insertBefore","nextSibling","findStylesheet","existingLinkTags","tag","dataHref","existingStyleTags","loadStylesheet","installedCssChunks","miniCss","cssChunks","then","installedChunks","installedChunkData","promise","loadingEnded","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}