(function(){"use strict";var t={432:function(t,e,s){s(4114),s(8111),s(7588);class i{constructor(){this.listeners=[]}getDelay(t){const e=localStorage.getItem(`game-delay-${t}`);if(e)return parseInt(e);const s=localStorage.getItem("game-global-delay");return s?parseInt(s):500}saveDelay(t,e,s=!1){if(s){localStorage.setItem("game-global-delay",e.toString());const t=Object.keys(localStorage);t.forEach(t=>{t.startsWith("game-delay-")&&"game-global-delay"!==t&&localStorage.removeItem(t)})}else t&&localStorage.setItem(`game-delay-${t}`,e.toString());this.notifyListeners(e,s,t)}reset(){localStorage.clear()}addListener(t){this.listeners.push(t)}removeListener(t){const e=this.listeners.indexOf(t);e>-1&&this.listeners.splice(e,1)}notifyListeners(t,e,s){this.listeners.forEach(i=>{try{i({delay:t,applyToAll:e,gameName:s})}catch(n){console.error("Error in settings listener:",n)}})}}e.A=new i},5249:function(t,e,s){s.d(e,{P_:function(){return n},bt:function(){return i},mS:function(){return o},zT:function(){return r}});const i=["♥","♠","♦","♣"],n=["A",2,3,4,5,6,7,8,9,10,"J","Q","K","JOKER"];function r(t,e=i,s=n){if("number"===typeof t){const i=t<52?e[t%4]:"",n=s[t>>2];return`${i}${n}`}return""}function o(t){return`./static/${t}.webp`}},8376:function(t,e,s){var i=s(5130),n=s(6768);const r={id:"app"};function o(t,e){const s=(0,n.g2)("router-view");return(0,n.uX)(),(0,n.CE)("div",r,[(0,n.bF)(s)])}var a=s(1241);const l={},c=(0,a.A)(l,[["render",o]]);var h=c,d=s(1387),u=s(4232);const g={class:"row center"},f={class:"scrore"},m={class:"row"},p={class:"cardsul"},v={class:"row",style:{"margin-top":"0.625rem"}},w={class:"cardsul reverse"},b={class:"row center"},C={class:"scrore"};function y(t,e,s,i,r,o){const a=(0,n.g2)("CardImage"),l=(0,n.g2)("GameControls"),c=(0,n.g2)("GameLayout");return(0,n.uX)(),(0,n.Wv)(c,(0,n.v6)(t.gameLayoutProps,{"win-buttons":[{text:"GO ON",action:"goon",callback:t.goon}],"win-modal-style":{backgroundColor:"rgba(0, 0, 0, 0.7)"},"win-custom-class":"lose","lose-buttons":[{text:"AGAIN",action:"goon",callback:t.goon}],"lose-modal-style":{backgroundColor:"rgba(0, 0, 0, 0.7)"},"lose-custom-class":"lose","draw-buttons":[{text:"GO ON",action:"goon",callback:t.goon}],"draw-modal-style":{backgroundColor:"rgba(0, 0, 0, 0.7)"},"draw-custom-class":"draw lose",onGoon:t.goon}),{"game-content":(0,n.k6)(()=>[(0,n.Lk)("div",g,[e[0]||(e[0]=(0,n.Lk)("img",{class:"avatar",src:"./static/avatar/17.webp"},null,-1)),(0,n.Lk)("span",f,(0,u.v_)(t.score1),1)]),(0,n.Lk)("div",m,[(0,n.Lk)("div",null,[(0,n.Lk)("ul",p,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(t.arr1,t=>((0,n.uX)(),(0,n.Wv)(a,{key:t.id,class:"card","card-id":t.id},null,8,["card-id"]))),128))])])]),(0,n.Lk)("div",v,[(0,n.Lk)("div",null,[(0,n.Lk)("ul",w,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(t.arr2,t=>((0,n.uX)(),(0,n.Wv)(a,{key:t.id,class:"card","card-id":t.id},null,8,["card-id"]))),128))])])]),(0,n.Lk)("div",b,[e[1]||(e[1]=(0,n.Lk)("img",{class:"avatar",src:"./static/avatar/32.webp"},null,-1)),(0,n.Lk)("span",C,(0,u.v_)(t.score2),1)])]),"bottom-controls":(0,n.k6)(()=>[(0,n.bF)(l,{buttons:[{label:"HIT",action:"hitBtn",disabled:t.stepDisabled},{label:"PASS",action:"passBtn",disabled:t.autoDisabled}],onHitBtn:t.handleHitBtn,onPassBtn:t.pass},null,8,["buttons","onHitBtn","onPassBtn"])]),_:1},16,["win-buttons","lose-buttons","draw-buttons","onGoon"])}s(4114),s(8111),s(1701),s(2489),s(7588);class k{constructor(t={}){this.hitflag=!0,this.winflag=!1,this.loseflag=!1,this.drawflag=!1,this.history=[],this.isAutoRunning=!1,this.autoInterval=null,this.autoStepDelay=t.autoStepDelay/10||500,this.maxSteps=t.maxSteps||400,this._listeners={}}init(){this.hitflag=!0,this.winflag=!1,this.loseflag=!1,this.drawflag=!1,this.history=[],this.stopAuto(),this.emit("init")}recordOperation(t,e=!1){e?this.history.unshift(t):this.history.push(t),this.emit("historyUpdate",this.history)}undo(){if(0===this.history.length)return null;const t=this.history.pop();return this.emit("undo",t),this.emit("historyUpdate",this.history),this.winflag=!1,this.loseflag=!1,this.drawflag=!1,t}getStepCount(){return this.history.length}canUndo(){return this.history.length>0&&this.hitflag&&!this.isAutoRunning}async startAuto(t){if(this.isAutoRunning||this.winflag||this.loseflag||this.drawflag)return void console.log(`startAuto被跳过: isAutoRunning=${this.isAutoRunning}, win=${this.winflag}, lose=${this.loseflag}, draw=${this.drawflag}`);console.log("开始自动模式..."),this.isAutoRunning=!0,this.emit("autoStart");let e=0;try{while(this.isAutoRunning&&!this.overflag&&e<this.maxSteps)await t(),e++,await this.wait();e>=this.maxSteps&&(console.log(`达到最大步数${this.maxSteps}`),this.stopAuto())}catch(s){console.error("Auto mode error:",s)}finally{console.log(`自动模式结束，总共执行了${e}步`),this.stopAuto()}}stopAuto(){this.isAutoRunning&&(this.isAutoRunning=!1,this.autoInterval&&(clearInterval(this.autoInterval),this.autoInterval=null),this.emit("autoStop"))}setAutoStepDelay(t){this.autoStepDelay=t,this.emit("delayChanged",t)}getAutoStepDelay(){return this.autoStepDelay}async wait(t=null){const e=null!==t?t:this.autoStepDelay;return this.emit("beforeWait",e),new Promise(t=>setTimeout(t,e))}async step(t){if(this.hitflag&&!this.overflag){this.hitflag=!1;try{await t()}catch(e){console.error("Step error:",e)}finally{this.hitflag=!0}}}setWin(){this.winflag=!0,this.stopAuto(),this.emit("win")}setLose(){this.loseflag=!0,this.stopAuto(),this.emit("lose")}setDraw(){this.drawflag=!0,this.stopAuto(),this.emit("draw")}reset(t){this.stopAuto(),this.init(),t&&t(),this.emit("reset")}on(t,e){this._listeners[t]||(this._listeners[t]=[]),this._listeners[t].push(e)}off(t,e){if(!this._listeners[t])return;const s=this._listeners[t].indexOf(e);s>-1&&this._listeners[t].splice(s,1)}emit(t,e){this._listeners[t]&&this._listeners[t].forEach(s=>{try{s(e)}catch(i){console.error(`Error in event listener for ${t}:`,i)}})}getState(){return{hitflag:this.hitflag,winflag:this.winflag,loseflag:this.loseflag,drawflag:this.drawflag,step:this.getStepCount(),isAutoRunning:this.isAutoRunning}}setState(t){Object.assign(this,t),this.emit("stateChange",this.getState())}static getDefaultComputedProperties(){return{hitflag(){const t=this.gameManager;return!t||t.hitflag},overflag(){const t=this.gameManager;return!!t&&t.overflag},winflag(){const t=this.gameManager;return!!t&&t.winflag},loseflag(){const t=this.gameManager;return!!t&&t.loseflag},drawflag(){const t=this.gameManager;return!!t&&t.drawflag},step(){const t=this.gameManager;return t?t.getStepCount():0},undoDisabled(){const t=this.gameManager;return!t||!t.canUndo()},restartDisabled(){const t=this.gameManager;return!t||!t.hitflag||t.isAutoRunning},stepDisabled(){const t=this.gameManager;return!t||!t.hitflag||t.isAutoRunning||t.overflag},autoDisabled(){const t=this.gameManager;return!t||!t.hitflag||t.overflag},canOperate(){const t=this.gameManager;return t&&t.hitflag&&!t.isAutoRunning},gameState(){const t=this.gameManager;return t?t.getState():{}}}}}var M=s(432);function x(t,e){let s,i,n=e-1;for(let r=0;r<1e3;r++)s=Math.floor(E()*n),i=t[n],t[n]=t[s],t[s]=i;return t}function S(t,e){if(!e)return!1;for(let s=0;s<e.length;s++)if(t[s]!=e[s])return!1;return!0}function L(t,e){for(let s=0;s<t.length>>1;s++){if(!S(t[s],e))continue;let i,n={};for(i=0;i<s;i++)if(n[t[s].join(".")]=n[t[s].join(".")]?n[t[s].join(".")]+1:1,!S(t[i],t[i+s+1]))break;if(i>=s)return s>40&&console.log("dead foreach",t,e,s),!1;let r=Object.values(n).indexOf(1);if(r<0)return!1}return!0}let _=1234;function I(t){_=t}function E(){return _=(9301*_+49297)%233280,_/233280}var T=s(5249);const A={cardGame:(t,e=500)=>F(t,{autoStepDelay:e,hasUndo:!0,hasRestart:!0}),simpleGame:(t,e=1e3)=>F(t,{autoStepDelay:e,hasUndo:!1,hasRestart:!0,customInit(){this.title&&this.title.includes("FISHING")&&(this.stepFn=async()=>{await this.gameManager.step(async()=>{let t,e=this["cards"+(this.step%4+1)];while(e.length<=0)this.gameManager.recordOperation(),e=this["cards"+(this.step%4+1)];for(await this.hit(e,this.arr),t=1;t<=4;t++)if(this.step%4+1!=t&&this["cards"+t].length>0)break;t>4?this.gameManager.setWin():this.gameManager.recordOperation()})}),this.title&&"Month"===this.title&&(this.stepFn=async()=>{this.cards2[12]>=4&&this.gameManager.setLose(),await this.gameManager.step(async()=>{await this.hit()})})}}),pairGame:(t,e=500,s={})=>F(t,{autoStepDelay:e,hasUndo:!1,hasRestart:!0,methods:s,customCleanup(){this._timer&&clearInterval(this._timer)}}),puzzleGame:(t,e=800,s={})=>F(t,{autoStepDelay:e,hasUndo:!0,hasRestart:!0,methods:s,customInit(){this.title&&(this.title.includes("24")||this.title.includes("PUZZLE"))&&(this.showHint=function(){console.log("显示提示")})}}),strategyGame:(t,e=1200)=>F(t,{autoStepDelay:e,hasUndo:!0,hasRestart:!0,customInit(){this.difficulty="normal",this.setDifficulty=function(t){this.difficulty=t}}}),actionGame:(t,e=300)=>F(t,{autoStepDelay:e,hasUndo:!1,hasRestart:!0,customInit(){this.score=0,this.combo=0,this.addScore=function(t){this.score+=t*(this.combo+1),this.combo++},this.resetCombo=function(){this.combo=0}}}),customGame:(t,e={})=>{const{autoStepDelay:s=500,hasUndo:i=!0,hasRestart:n=!0,features:r=[],customLogic:o=null}=e;return F(t,{autoStepDelay:s,hasUndo:i,hasRestart:n,customInit(){r.forEach(t=>{switch(t){case"timer":this.gameTime=0,this._gameTimer=null,this.startTimer=function(){this._gameTimer=setInterval(()=>{this.gameTime++},1e3)},this.stopTimer=function(){this._gameTimer&&(clearInterval(this._gameTimer),this._gameTimer=null)};break;case"score":this.score=0,this.highScore=parseInt(localStorage.getItem(`${this.title}_highScore`)||"0"),this.updateScore=function(t){this.score+=t,this.score>this.highScore&&(this.highScore=this.score,localStorage.setItem(`${this.title}_highScore`,this.highScore.toString()))};break;case"difficulty":this.difficulty="normal",this.setDifficulty=function(t){this.difficulty=t;const e={easy:800,normal:500,hard:300};this.gameManager.setAutoStepDelay(e[t]||500)};break}}),o&&"function"===typeof o&&o.call(this)},customCleanup(){this._gameTimer&&clearInterval(this._gameTimer)}})}};const $={month:"The game has 13 positions (12 months + 1 deck). Each turn, take the top card from the current position and move it to the position corresponding to its value. If the deck reaches 4 cards, the game ends.",fish:"A 4-player game where each player starts with cards. On your turn, draw the top card from your deck. If it matches a card in the center, collect those cards. Special cards let you take cards from other players. The player who collects all cards wins.",point24:"Use 4 given numbers and apply +, -, ×, ÷ operations to make the result equal to 24. Each number can be used exactly once. You can combine numbers by selecting an operator and clicking cards to perform calculations.",Tortoise:"A card matching game with hierarchical dependencies. Cards have z-index priorities and connection requirements. Match cards of the same value pair (cards with same base number). Cards can only be matched when all their prerequisite cards are already matched. Complete all pairs to win.",Sort:"A card sorting puzzle with 3 difficulty modes: simple (by number), medium (by color), and hard (by suit). Move cards to empty slots following specific rules. Cards can only be placed in valid positions. The goal is to arrange all cards in the correct order.",Pairs:"A memory matching game with 48 cards. Flip cards to find pairs. Cards are paired based on their base value (4 cards share the same base value). Find all matching pairs as quickly as possible to win.",Spider:"A classic Spider Solitaire game with 52 standard playing cards. Arrange cards in descending order by number. Cards can be moved in sequences to build foundations. The goal is to sort all cards by suit and rank to win.",GridBattle:"A strategy game on a 6x6 grid with two types of pieces: high (1) and low (0) grade. Pieces move according to specific rules defined by their positions. Win by eliminating all opponent's pieces of the opposite grade, or reach a draw when only one of each remains.",blackjack:"A card game using a 54-card deck. The goal is to get as close to 21 as possible without exceeding it. Cards 2-10 are worth their face value, J/Q/K are worth 10, and Aces can be worth 1 or 11. If your score exceeds 21, you bust. Both player and dealer start with 2 cards.",NumberMaze:"A 6x6 grid puzzle game with numbered blocks. Move number blocks to adjacent empty spaces to create a valid path from start (0) to end (99). The path must have strictly increasing numbers. Use strategy to rearrange blocks and find the optimal path. Win when a valid ascending path exists from start to end.",NumberSequence:"A strategic puzzle game on a 5x5 grid with numbered blocks (1-9). Build ascending sequences by selecting adjacent numbers (minimum 3). Selected sequences are cleared and blocks fall down to fill gaps. Clear all numbers to win. Plan your moves carefully as sequences must be strictly increasing and adjacent."};let z,O,P,G;function F(t,e={}){const{computed:s={},methods:i={},autoStepDelay:n=500,hasUndo:r=!0,hasRestart:o=!0,customInit:a=null,customCleanup:l=null}=e;return{...t,components:{...t.components,GameResultModal:z,GameControls:O,GameLayout:P,CardImage:G},data(){const e=t.data?t.data.call(this):{};return{types:T.bt,point:T.P_,...e,gameManager:new k({autoStepDelay:n}),customButtons:[]}},created(){this.setSeed(this.seed?this.seed:Date.now()),this.gameManager.init(),this.loadDelaySettings(),this._settingsChangeHandler=this.handleSettingsChanged.bind(this),M.A.addListener(this._settingsChangeHandler),this.handleUndo&&this.gameManager.on("undo",this.handleUndo),this.gameManager.on("beforeWait",()=>{this.renderTextView&&"function"===typeof this.renderTextView&&this.renderTextView()}),this.gameManager.on("historyUpdate",()=>{this.handleHistoryUpdate&&"function"===typeof this.handleHistoryUpdate&&this.handleHistoryUpdate(),this.autoCalc&&"function"===typeof this.autoCalc&&this.autoCalc()}),a&&a.call(this),t.created&&t.created.call(this),this.init&&this.init()},beforeUnmount(){this.gameManager.stopAuto(),this.gameManager.off("undo"),this.gameManager.off("beforeWait"),this.gameManager.off("historyUpdate"),this._settingsChangeHandler&&M.A.removeListener(this._settingsChangeHandler),l&&l.call(this),t.beforeUnmount&&t.beforeUnmount.call(this)},computed:{...k.getDefaultComputedProperties(),displayButtons(){if(this.gameControlsConfig?.buttons&&this.gameControlsConfig.buttons.length>0)return this.gameControlsConfig.buttons;const t=[];return r&&t.push({label:"◀︎",action:"undo",disabled:this.undoDisabled}),o&&t.push({label:"RESTART",action:"goon",disabled:this.restartDisabled}),t.push({label:this.isAutoRunning?"STOP":"AUTO",action:"auto",disabled:this.autoDisabled}),t.push({label:"►",action:"step",disabled:this.stepDisabled}),t},gameControlsConfig(){return{buttons:this.displayButtons,undoDisabled:this.undoDisabled,restartDisabled:this.restartDisabled,stepDisabled:this.stepDisabled,autoDisabled:this.autoDisabled,isAutoRunning:this.gameManager?.isAutoRunning||!1}},gameLayoutProps(){const t=this.$route?.path?.substring(1)||"";return{title:this.title,gameControlsConfig:this.gameControlsConfig,winflag:this.winflag,loseflag:this.loseflag,drawflag:this.drawflag,step:this.step,gameRule:$[t],customButtons:this.collectedGameButtons}},collectedGameButtons(){return[...this.displayButtons,...this.customButtons.filter(t=>t.action)]},...t.computed,...s},methods:{getCardPlaceholderText:T.zT,setSeed(t){this.seed=t,I(t)},async wait(t=null){return this.gameManager.wait(t)},undo(){this.gameManager.undo()},async pass(){this.gameManager.isAutoRunning?this.gameManager.stopAuto():await this.gameManager.startAuto(async()=>{let t=new WeakMap,e=[];const s=function(s,i){if("string"!==typeof s||!s.startsWith("_")){if("object"===typeof i&&null!==i){if(t.has(i))return;const n=e.join(".")+(s?"."+s:"");t.set(i,n),e.push(s)}return i}},i=JSON.stringify(this.$data,s);await this.stepFn(),t=new WeakMap,e=[];const n=JSON.stringify(this.$data,s);i===n&&(console.warn("移动无效，游戏可能陷入死锁"),this.gameManager.stopAuto())})},goon(){this.gameManager.reset(()=>{this.init&&this.init()})},loadDelaySettings(){const t=this.$route?.path?.substring(1)||"",e=M.A.getDelay(t);this.gameManager.setAutoStepDelay(e)},handleSettingsChanged(t){const e=this.$route?.path?.substring(1)||"";(t.applyToAll||t.gameName===e)&&this.gameManager.setAutoStepDelay(t.delay)},getAvailableActions(){const t=[],e={undo:"undo",goon:"goon",step:"stepFn",auto:"pass"};return this.collectedGameButtons.forEach((s,i)=>{const n=s.method||e[s.action]||s.action;this[n]&&"function"===typeof this[n]?t.push({id:i+1,label:s.label||`${s.action.toUpperCase()}`,method:n,args:s.args||[],disabled:s.disabled||!1}):console.log(`未找到对应方法 ${n} 的操作按钮 ${s.action}`)}),t.filter(t=>!t.disabled)},...t.methods,...i}}}"undefined"===typeof window?(z={name:"GameResultModal",template:"<div>Mock GameResultModal</div>",props:["title","subtitle","buttons","show"]},O={name:"GameControls",template:"<div>Mock GameControls</div>",props:["canUndo","canGoon","canRestart","canAuto","canStep"]},P={name:"GameLayout",template:"<div><slot name='game-content'></slot></div>",props:["title","winflag","loseflag","drawflag"]},G={name:"CardImage",template:"<div>Mock CardImage</div>",props:["src","alt"]}):(z=(0,n.$V)(()=>s.e(366).then(s.bind(s,7366))),O=(0,n.$V)(()=>s.e(638).then(s.bind(s,7638))),P=(0,n.$V)(()=>s.e(272).then(s.bind(s,1272))),G=(0,n.$V)(()=>s.e(279).then(s.bind(s,9279))));const N={name:"Sum",data(){return{title:"BlackJack",cardsChg:[],arr1:[],arr2:[],number:54}},component:[],methods:{init(){this.arr1.splice(0),this.arr2.splice(0),0===this.cardsChg.length?this.refillCards():console.log("使用现有牌堆，剩余:",this.cardsChg.length,"张"),this.hit(this.arr1),this.hit(this.arr2),this.hit(this.arr1),this.hit(this.arr2)},hit(t){0===this.cardsChg.length&&(console.log("牌堆已空，重新洗牌..."),this.refillCards());var e=this.cardsChg.shift(),s=e>>2;t.push({id:e,value:++s>10?10:s}),this.gameManager.recordOperation()},refillCards(){this.cardsChg.splice(0);for(let t=0;t<this.number;t++)this.cardsChg.push(t);x(this.cardsChg,this.cardsChg.length),console.log("重新洗牌完成，新牌堆:",this.cardsChg.length,"张")},getScore(t){let e=0,s=this["arr"+t],i=!1;for(let n=0;n<s.length;n++)e+=s[n].value,1===s[n].value&&(i=!0);return e<=11&&!0===i?e+=10:e>21&&(e=0,2==t?this.gameManager.setLose():this.gameManager.setWin()),e},async stepFn(){this.score1===this.score2?this.gameManager.setDraw():this.score1<this.score2?this.hit(this.arr1):this.score1>this.score2&&this.gameManager.setLose()},handleHitBtn(){this.hit(this.arr2)},renderTextView(){console.log("\n╔════════════════════════════════════════════════╗"),console.log("║            黑杰克 (BlackJack)                 ║"),console.log("╚════════════════════════════════════════════════╝"),console.log(`\n步数: ${this.step}\n`),console.log("规则: 点数接近21获胜，超过21爆牌"),console.log("━━━ 牌堆 ━━━");const t=this.cardsChg?this.cardsChg.length:0;console.log(`  剩余: ${t} 张\n`),console.log("━━━ 庄家 ━━━");const e=this.getScore(1);if(this.arr1&&this.arr1.length>0){const t=this.arr1.map(t=>(0,T.zT)(t.id)).join(" ");console.log(`  ${t}`),console.log(`  分数: ${e}${e>21?" 💥 爆牌!":21===e?" 🎉 BlackJack!":""}\n`)}else console.log("  (无牌)\n");console.log("━━━ 玩家 ━━━");const s=this.getScore(2);if(this.arr2&&this.arr2.length>0){const t=this.arr2.map(t=>(0,T.zT)(t.id)).join(" ");console.log(`  ${t}`),console.log(`  分数: ${s}${s>21?" 💥 爆牌!":""}\n`)}else console.log("  (无牌)\n");return"渲染完成"},getAvailableActions(){const t=[];t.push({id:1,label:"重新开始 (RESTART)",method:"goon",args:[]});const e=this.getScore(1);return e<21&&t.push({id:2,label:"摘牌 (HIT)",method:"handleHitBtn",args:[]}),t.push({id:3,label:"停牌 (PASS)",method:"pass",args:[]}),t}},computed:{score1:function(){return this.getScore(1)},score2:function(){return this.getScore(2)}}};var D=A.strategyGame(N,1e3);const B=D;var R=B;const X=(0,a.A)(R,[["render",y],["__scopeId","data-v-45783e8e"]]);var W=X;const U={class:"row flex-row",style:{"padding-top":"0.625rem","justify-content":"space-around"}},V={class:"flex-col center rela",style:{"max-width":"25%"}},j={class:"scrore"},q={class:"flex-col center rela",style:{"max-width":"25%"}},H={class:"scrore"},K={class:"flex-col center rela",style:{"max-width":"25%"}},J={class:"scrore"},Y={class:"flex-col center rela",style:{"max-width":"25%"}},Q={class:"scrore"},Z={class:"row"},tt={class:"cardsul",style:{"padding-left":"0",margin:"0","min-height":"9.375rem"}},et=["src"];function st(t,e,s,i,r,o){const a=(0,n.g2)("message"),l=(0,n.g2)("CardImage"),c=(0,n.g2)("GameLayout");return(0,n.uX)(),(0,n.Wv)(c,(0,n.v6)(t.gameLayoutProps,{"win-title":"",onStep:t.stepFn,onAuto:t.pass,onGoon:t.goon}),{"game-content":(0,n.k6)(()=>[(0,n.Lk)("div",U,[(0,n.Lk)("div",V,[(0,n.bF)(a,{class:"abso",style:{top:"4.375rem",left:"0",width:"100%"},show1:"1"},{default:(0,n.k6)(()=>[...e[0]||(e[0]=[(0,n.eW)("1",-1)])]),_:1}),e[1]||(e[1]=(0,n.Lk)("img",{class:"avatar",src:"./static/avatar/32.webp"},null,-1)),(0,n.Lk)("span",{class:"diff",style:(0,u.Tr)({opacity:0!=t.diff1?1:0})},(0,u.v_)(t.diff1>0?"+":"")+(0,u.v_)(t.diff1),5),(0,n.Lk)("span",j,(0,u.v_)(t.score1),1)]),(0,n.Lk)("div",q,[(0,n.bF)(a,{class:"abso",style:{top:"4.375rem",left:"0",width:"100%"}},{default:(0,n.k6)(()=>[...e[2]||(e[2]=[(0,n.eW)("asfasfasdfasfdasdfasdfas",-1)])]),_:1}),e[3]||(e[3]=(0,n.Lk)("img",{class:"avatar",src:"./static/avatar/31.webp"},null,-1)),(0,n.Lk)("span",{class:"diff",style:(0,u.Tr)({opacity:0!=t.diff2?1:0})},(0,u.v_)(t.diff2>0?"+":"")+(0,u.v_)(t.diff2),5),(0,n.Lk)("span",H,(0,u.v_)(t.score2),1)]),(0,n.Lk)("div",K,[(0,n.bF)(a,{class:"abso",style:{top:"4.375rem",left:"0",width:"100%"}},{default:(0,n.k6)(()=>[...e[4]||(e[4]=[(0,n.eW)("1",-1)])]),_:1}),e[5]||(e[5]=(0,n.Lk)("img",{class:"avatar",src:"./static/avatar/29.webp"},null,-1)),(0,n.Lk)("span",{class:"diff",style:(0,u.Tr)({opacity:0!=t.diff3?1:0})},(0,u.v_)(t.diff3>0?"+":"")+(0,u.v_)(t.diff3),5),(0,n.Lk)("span",J,(0,u.v_)(t.score3),1)]),(0,n.Lk)("div",Y,[(0,n.bF)(a,{class:"abso",style:{top:"4.375rem",left:"0",width:"100%"}},{default:(0,n.k6)(()=>[...e[6]||(e[6]=[(0,n.eW)("1",-1)])]),_:1}),e[7]||(e[7]=(0,n.Lk)("img",{class:"avatar",src:"./static/avatar/30.webp"},null,-1)),(0,n.Lk)("span",{class:"diff",style:(0,u.Tr)({opacity:0!=t.diff4?1:0})},(0,u.v_)(t.diff4>0?"+":"")+(0,u.v_)(t.diff4),5),(0,n.Lk)("span",Q,(0,u.v_)(t.score4),1)])]),(0,n.Lk)("div",Z,[(0,n.Lk)("div",null,[(0,n.Lk)("ul",tt,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(t.arr,e=>((0,n.uX)(),(0,n.Wv)(l,{key:e,class:(0,u.C4)(["card m-0",{shanshuo:t.ssArr.indexOf(e)>=0,flyin1:t.flyin1.indexOf(e)>=0,flyin2:t.flyin2.indexOf(e)>=0,flyout1:t.flyout1.indexOf(e)>=0,flyout2:t.flyout2.indexOf(e)>=0}]),style:{"max-width":"25%"},"card-id":e},null,8,["class","card-id"]))),128))])])])]),"win-content":(0,n.k6)(()=>[(0,n.Lk)("h1",null,[(0,n.Lk)("img",{class:"avatar",src:"./static/avatar/"+[32,31,29,30][t.step%4]+".webp"},null,8,et),e[8]||(e[8]=(0,n.eW)("WIN! ",-1))])]),_:1},16,["onStep","onAuto","onGoon"])}const it="undefined"===typeof window?{name:"message",template:"<div>Mock message</div>"}:(0,n.$V)(()=>s.e(82).then(s.bind(s,7082))),nt={name:"Fish",components:{message:it},data(){return{title:"FISHING CONTEST OF DOG TEAM",diff1:0,diff2:0,diff3:0,diff4:0,cards1:[],cards2:[],cards3:[],cards4:[],ssArr:[],flyin1:[],flyin2:[],flyout1:[],flyout2:[],arr:[],number:54}},methods:{init(){this.cards1.splice(0),this.cards2.splice(0),this.cards3.splice(0),this.cards4.splice(0);let t=this.cards1;this.arr.splice(0);for(let e=0;e<this.number;e++)t.push(e);x(t,this.number),this.cards2.push(...t.splice(-14)),this.cards3.push(...t.splice(-13)),this.cards4.push(...t.splice(-13))},time(t,e){return new Promise(s=>{setTimeout(()=>{s(),t()},e)})},async push(t,e){t.push(e)},async hit(t,e){var s=t.shift(),i=s>>2;if(13==i)return this.push(e,s),this.ssArr.push(s),await this.time(()=>{this.ssArr.splice(0);for(let t=1;t<=4;t++)t!=this.step%4+1&&e.push(...this["cards"+t].splice(0,53==s?5:3))},this.gameManager.autoStepDelay);var n=10==i?0:e.findIndex(t=>t>>2==i);this.push(e,s),n<0||(this.ssArr.push(s,e[n]),await this.time(()=>{this.ssArr.splice(0),t.push(...e.splice(n))},this.gameManager.autoStepDelay))},renderTextView(){console.log("\n╔════════════════════════════════════════════════╗"),console.log("║              钓鱼游戏 (Fish)                  ║"),console.log("╚════════════════════════════════════════════════╝"),console.log(`\n步数: ${this.step}\n`),console.log("│ 玩家1(你) │  玩家2  │  玩家3  │  玩家4  │");const t=[];for(let e=1;e<=4;e++){const s=this[`cards${e}`];t.push(s.length>0?`${s.length}张`:"已出完")}if(console.log(`│${t[0].padStart(9," ")}│${t[1].padStart(9," ")}│${t[2].padStart(9," ")}│${t[3].padStart(9," ")}│`),console.log("\n━━━ 中央区域 ━━━"),this.arr.length>0){const t=this.arr.map(t=>(0,T.zT)(t)).join(" ");console.log(`  ${t}`)}else console.log("  (空)");return"渲染完成"}},computed:{score1:function(){return this.cards1.length},score2:function(){return this.cards2.length},score3:function(){return this.cards3.length},score4:function(){return this.cards4.length}},watch:{score4(t,e){this.diff4=t-e,this.time(()=>{this.diff4=0},this.gameManager.autoStepDelay)},score3(t,e){this.diff3=t-e,this.time(()=>{this.diff3=0},this.gameManager.autoStepDelay)},score2(t,e){this.diff2=t-e,this.time(()=>{this.diff2=0},this.gameManager.autoStepDelay)},score1(t,e){this.diff1=t-e,this.time(()=>{this.diff1=0},this.gameManager.autoStepDelay)}}};var rt=A.simpleGame(nt,1e3);const ot=rt;var at=ot;const lt=(0,a.A)(at,[["render",st],["__scopeId","data-v-a9f40ed8"]]);var ct=lt;const ht={class:"row center",style1:"overflow:scroll"},dt={class:"flex-row center"},ut={class:"cardsul flex-row center",style:{"padding-left":"0"}},gt={class:"flex-col center m-0"},ft={class:"flex-row"},mt=["onClick"],pt={class:"m-0"},vt={class:"cardsul flex-row center",style:{"padding-left":"0","margin-left":"1.25rem"}},wt={key:0,class:"flex-row center m-0"},bt=["onClick"];function Ct(t,e,s,r,o,a){const l=(0,n.g2)("point24card"),c=(0,n.g2)("CardImage"),h=(0,n.g2)("GameLayout");return(0,n.uX)(),(0,n.Wv)(h,(0,n.v6)(t.gameLayoutProps,{"lose-subtitle":"NO EXP = 24",onUndo:t.undo,onGoon:t.goon,onStep:t.stepFn,onAuto:t.pass}),{"game-content":(0,n.k6)(()=>[(0,n.Lk)("div",ht,[(0,n.Lk)("div",dt,[(0,n.Lk)("ul",ut,[(0,n.Lk)("div",gt,[(0,n.bF)(l,{card:t.arr[0]},null,8,["card"]),(0,n.bo)((0,n.Lk)("div",ft,[((0,n.uX)(),(0,n.CE)(n.FK,null,(0,n.pI)(4,e=>(0,n.Lk)("span",{key:e,class:(0,u.C4)(["sign center",{choose:t.sign==e}]),onClick:s=>t.canOperate&&t.clickSign(e)},(0,u.v_)(t.signs[e]),11,mt)),64))],512),[[i.aG,t.step<3]]),0!=t.sign?((0,n.uX)(),(0,n.Wv)(c,{key:0,"card-id":"bg",class:"card align-center"})):(0,n.Q3)("",!0),e[0]||(e[0]=(0,n.Lk)("span",{class:"vertical m-0"},"=",-1)),(0,n.Lk)("span",pt,(0,u.v_)(t.calc(t.arr[0]).toFixed(2)),1)])]),(0,n.Lk)("ul",vt,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(t.arr,(e,s)=>((0,n.uX)(),(0,n.CE)("div",{key:s,class:"align-center flex-wrap flex-row center"},[0!=s?((0,n.uX)(),(0,n.CE)("div",wt,[(0,n.Lk)("span",{class:"sign center",onClick:i=>t.canOperate&&t.clickCard(e,s)},(0,u.v_)(t.signs[t.sign]),9,bt),(0,n.bF)(l,{card:e,onClick:i=>t.canOperate&&t.clickCard(e,s)},null,8,["card","onClick"])])):(0,n.Q3)("",!0)]))),128))])])])]),_:1},16,["onUndo","onGoon","onStep","onAuto"])}const yt="undefined"===typeof window?{name:"point24card",template:"<div>Mock point24card</div>"}:(0,n.$V)(()=>s.e(526).then(s.bind(s,9526)));var kt=[1,3,2,2,4,4];function Mt(t,e,s){for(var i=0;i<e;i++)for(var n=i+1;n<e;n++){var r=[t[i],t[n]];t[n]=t[e-1];for(var o=0;o<6;o++)if(t[i]=[r[o%2],kt[o],r[1*!(o%2)]],Mt(t,e-1,s))return!0;t[i]=r[0],t[n]=r[1]}return 1==e&&Math.abs(St(t[0])-s)<1e-7}let xt=[()=>{},(t,e)=>t+e,(t,e)=>t-e,(t,e)=>t*e,(t,e)=>t/e];function St(t){if(Number.isFinite(t))return 1+(t>>2);{let[e,s,i]=t;return e=St(e),i=St(i),xt[s](e,i)}}function Lt(t){return Number.isFinite(t)?t:Lt(t[0])}const _t={name:"point24",components:{point24card:yt},data(){return{title:"Point24",sign:0,cards1:[],cards2:[0,0,0],signs:["UP","+","-","X","/"],arr:[],number:52}},methods:{init(){this.sign=0,this.cards1.splice(0),this.arr.splice(0);let t=this.cards1;for(let e=0;e<this.number;e++)t.push(e);x(t,this.number),this.arr.push(...t.splice(0,4)),this.autoCalc()},calc:St,first:Lt,process:Mt,clickSign(t){this.sign=this.sign==t?0:t},recordOperation(t,e){this.gameManager.recordOperation({type:t,...e,timestamp:Date.now()})},handleUndo(t){switch(t.type){case"combine":this.cards2.splice(this.step,1),this.arr.splice(this.arr.findIndex(e=>this.first(e)==this.first(t.combined)),1,t.left,t.right);break}},clickCard(t,e){if(0!=e){if(-1===e)throw new Error("没找到该卡片");if(0!=this.sign){let t=this.arr[0],s=this.arr.splice(e,1)[0],i=[t,this.sign,s];this.arr.splice(0,1,i),this.sign=0,this.cards2.splice(this.step,1,i),this.recordOperation("combine",{left:t,right:s,combined:i})}else{let t=this.arr[0];this.arr.splice(0,1,this.arr[e]),this.arr.splice(e,1,t)}}else console.log("索引为0，直接返回")},async stepFn(){await this.gameManager.step(async()=>{if(this.step>=3)return void console.log("步数已达到3，检查游戏结果...");let t=this.cards2[this.step];this.sign=0;const e=this.arr.findIndex(e=>this.first(e)==this.first(t[0]));this.clickCard(t[0],e),await this.wait(),this.clickSign(t[1]),await this.wait();const s=this.arr.findIndex(e=>this.first(e)==this.first(t[2]));this.clickCard(t[2],s)})},autoCalc(){if(this.step>=3){try{const t=this.calc(this.arr[0]);24==t?(console.log("游戏胜利！"),this.gameManager.setWin()):(console.log("游戏失败！"),this.gameManager.setLose())}catch(a){console.log("计算过程出错:",a.message),this.gameManager.stopAuto()}return}let t=this.step,e=[...this.arr],s=this.process(e,e.length,24);if(!s)return void this.gameManager.setLose();if(this.cards2.splice(2,1,e[0]),t>=2)return;let i=e[0][0],n=e[0][2],r=Number.isFinite(i),o=Number.isFinite(n);this.cards2.splice(1,1,r?n:o?e[0][0]:Lt(i)==Lt(this.cards2[0])?n:i),t>=1||this.cards2.splice(0,1,r?Number.isFinite(n[0])?n[2]:n[0]:o?Number.isFinite(i[0])?i[2]:i[0]:i)},formulaToString(t){if(Number.isFinite(t))return(0,T.zT)(t);if(Array.isArray(t)&&3===t.length){const[e,s,i]=t,n=this.signs[s]||this.signs[0],r=this.formulaToString(e),o=this.formulaToString(i);return`(${r} ${n} ${o})`}return String(t)},renderTextView(){console.log("\n╔════════════════════════════════════════════════╗"),console.log("║              24点游戏 (Point24)               ║"),console.log("╚════════════════════════════════════════════════╝"),console.log(`\n步数: ${this.step}\n`),console.log("━━━ 当前牌面 ━━━");const t=[];for(let e=0;e<4;e++)if(void 0!==this.arr[e]){const s=this.formulaToString(this.arr[e]);t.push(`[${e}] ${s}`)}return console.log(`  ${t.join("  ")}\n`),console.log("━━━ 可用运算符 ━━━"),console.log("  [+] 加  [-] 减  [×] 乘  [÷] 除\n"),this.history&&this.history.length>0&&(console.log("━━━ 计算历史 ━━━"),this.history.forEach((t,e)=>{console.log(`  ${e+1}. ${t}`)}),console.log("")),void 0!==this.result&&null!==this.result&&(console.log(`当前结果: ${this.result}`),24===this.result&&console.log("🎉 恭喜！达到24点！")),"渲染完成"}}};var It=A.puzzleGame(_t,800);const Et=It;var Tt=Et;const At=(0,a.A)(Tt,[["render",Ct],["__scopeId","data-v-eaeab1bc"]]);var $t=At;const zt={class:"row"},Ot={class:"center"},Pt={class:"cardsul",style:{"padding-left":"0","max-width":"43.125rem","justify-content":"space-between","margin-top":"11.25rem"}},Gt={class:"m-0 card",style:{"background-color":"#719192"}},Ft={class1:"row",style:{"margin-top":"0.625rem"}},Nt={class:"cardsul",style:{"padding-left":"0","max-width":"46.25rem"}};function Dt(t,e,s,r,o,a){const l=(0,n.g2)("CardImage"),c=(0,n.g2)("GameLayout");return(0,n.uX)(),(0,n.Wv)(c,(0,n.v6)(t.gameLayoutProps,{"lose-title":"","lose-subtitle":"YOUR LUCKY CLASSES:","lose-buttons":[{text:"GO ON",action:"goon",callback:t.goon,disabled:!1}],"lose-modal-style":{backgroundColor:"rgba(0,0,0,0.8)"},onStep:t.stepFn,onAuto:t.pass,onGoon:t.goon}),{"game-content":(0,n.k6)(()=>[(0,n.Lk)("div",zt,[(0,n.Lk)("div",Ot,[(0,n.Lk)("ul",Pt,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(t.arr,(e,s)=>((0,n.uX)(),(0,n.CE)("li",{key:s,class:(0,u.C4)(["cards m-0","cards"+s])},[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(e,(e,i)=>((0,n.uX)(),(0,n.Wv)(l,{key:e,class:"m-0 card abso",style:(0,u.Tr)({top:30*(t.month==s?i:1+i)/16+"rem",left:0}),"card-id":t.cards2[s]>i||t.month==s&&(12==t.month&&3==i||4==i)?e:"bg"},null,8,["style","card-id"]))),128)),(0,n.bo)((0,n.Lk)("div",Gt,null,512),[[i.aG,12==s&&t.month!=s]])],2))),128))])])])]),"lose-cards":(0,n.k6)(()=>[(0,n.Lk)("div",Ft,[(0,n.Lk)("div",null,[(0,n.Lk)("ul",Nt,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(t.visibleCards,(t,e)=>((0,n.uX)(),(0,n.Wv)(l,{key:e,"card-id":t.cardId,class:"card"},null,8,["card-id"]))),128))])])])]),_:1},16,["lose-buttons","onStep","onAuto","onGoon"])}const Bt={name:"Month",data(){return{title:"Month",month:12,cards1:[],cards2:[],arr:[],number:52}},methods:{init(){this.month=12,this.cards1.splice(0),this.cards2.splice(0),this.arr.splice(0);let t=this.cards1;for(let e=0;e<this.number;e++)t.push(e);x(t,this.number);for(let e=0;e<this.number>>2;e++)this.cards2.push(0),this.arr.push(t.splice(0,4))},async push(t,e){t.push(e)},async hit(){let t=this.arr[this.month].pop();var e=t>>2;this.arr[e].unshift(t),this.month=e,this.cards2[e]++},renderTextView(){console.log("\n╔════════════════════════════════════════════════╗"),console.log("║              月份游戏 (Month)                 ║"),console.log("╚════════════════════════════════════════════════╝"),console.log(`\n步数: ${this.step}\n`);const t=["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"];for(let s=0;s<12;s++){const e=this.cards2[s];console.log(`  [${t[s]}] `+this.arr[s].map((t,s)=>`${s<e||s>=4?(0,T.zT)(t):"[?]"}`).join(" ")+(e>=4?" [✓] 已完成":""))}const e=this.cards2[12];return console.log("  [牌堆] "+this.arr[12].map((t,s)=>`${s<e||s>=3?(0,T.zT)(t):"[?]"}`).join(" ")+(e>=4?" [✓] 已完成":`剩余 ${4-e} 次机会`)),"渲染完成"}}};var Rt=A.simpleGame(Bt,1e3);const Xt={...Rt,computed:{...Rt.computed,visibleCards(){return this.cards2.map((t,e)=>({originalItem:t,index:e,cardId:4*e+1})).filter(t=>t.originalItem>=4&&t.index<12)}}};var Wt=Xt;const Ut=(0,a.A)(Wt,[["render",Dt],["__scopeId","data-v-cebf8f72"]]);var Vt=Ut;const jt={class:"row"},qt={class:"cardsul cards",style:{"padding-left":"0",width:"100%",height:"46.875rem","max-width":"31.25rem",margin:"auto"}};function Ht(t,e,s,r,o,a){const l=(0,n.g2)("CardImage"),c=(0,n.g2)("GameLayout");return(0,n.uX)(),(0,n.Wv)(c,(0,n.v6)(t.gameLayoutProps,{"lose-subtitle":"NO PAIR",onUndo:t.undo,onGoon:t.goon,onStep:t.stepFn,onAuto:t.pass}),{"game-content":(0,n.k6)(()=>[(0,n.Lk)("div",jt,[(0,n.Lk)("div",null,[(0,n.Lk)("ul",qt,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(t.cards1,(e,s)=>(0,n.bo)(((0,n.uX)(),(0,n.Wv)(l,{key:s,class:(0,u.C4)(["card abso",{shanshuo:t.sign==e}]),style:(0,u.Tr)([t.map[s],{width:"20%",height:"9.375rem",margin:"0"}]),"card-id":t.check(s)?e:"bg",onClick:i=>t.canOperate&&t.clickCard(e,s)},null,8,["style","card-id","onClick","class"])),[[i.aG,!t.done(e)]])),128))])])])]),_:1},16,["onUndo","onGoon","onStep","onAuto"])}const Kt={name:"Tortoise",data(){return{title:"Tortoise",sign:-1,cards1:[],next:[],number:54,map:[{"z-index":0,left:"10%",top:"4.6875rem",up:[16,30]},{"z-index":0,left:"30%",top:"4.6875rem",up:[16,17,31]},{"z-index":0,left:"50%",top:"4.6875rem",up:[17,18,31]},{"z-index":0,left:"70%",top:"4.6875rem",up:[18,32]},{"z-index":0,left:"10%",top:"14.0625rem",up:[16,19,37]},{"z-index":0,left:"30%",top:"14.0625rem",up:[16,17,19,20]},{"z-index":0,left:"50%",top:"14.0625rem",up:[17,18,20,21]},{"z-index":0,left:"70%",top:"14.0625rem",up:[18,21,33]},{"z-index":0,left:"10%",top:"23.4375rem",up:[19,22,37]},{"z-index":0,left:"30%",top:"23.4375rem",up:[19,20,22,23]},{"z-index":0,left:"50%",top:"23.4375rem",up:[20,21,23,24]},{"z-index":0,left:"70%",top:"23.4375rem",up:[21,24,33]},{"z-index":0,left:"10%",top:"32.8125rem",up:[22,36]},{"z-index":0,left:"30%",top:"32.8125rem",up:[22,23,35]},{"z-index":0,left:"50%",top:"32.8125rem",up:[23,24,35]},{"z-index":0,left:"70%",top:"32.8125rem",up:[24,34]},{"z-index":1,left:"20%",top:"9.375rem",up:[25]},{"z-index":1,left:"40%",top:"9.375rem",up:[25,26]},{"z-index":1,left:"60%",top:"9.375rem",up:[26]},{"z-index":1,left:"20%",top:"18.75rem",up:[25,27]},{"z-index":1,left:"40%",top:"18.75rem",up:[25,26,27,28]},{"z-index":1,left:"60%",top:"18.75rem",up:[26,28]},{"z-index":1,left:"20%",top:"28.125rem",up:[27]},{"z-index":1,left:"40%",top:"28.125rem",up:[27,28]},{"z-index":1,left:"60%",top:"28.125rem",up:[28]},{"z-index":2,left:"30%",top:"14.0625rem",up:[29]},{"z-index":2,left:"50%",top:"14.0625rem",up:[29]},{"z-index":2,left:"30%",top:"23.4375rem",up:[29]},{"z-index":2,left:"50%",top:"23.4375rem",up:[29]},{"z-index":3,left:"40%",top:"18.75rem",up:[]},{"z-index":1,left:"0",top:"0",up:[38]},{"z-index":1,left:"40%",top:"0",up:[39]},{"z-index":1,left:"80%",top:"0",up:[40]},{"z-index":1,left:"80%",top:"18.75rem",up:[41]},{"z-index":1,left:"80%",top:"37.5rem",up:[42]},{"z-index":1,left:"40%",top:"37.5rem",up:[43]},{"z-index":1,left:"0",top:"37.5rem",up:[44]},{"z-index":1,left:"0",top:"18.75rem",up:[45]},{"z-index":2,left:"0",top:"2.3438rem",up:[46]},{"z-index":2,left:"35%",top:"0",up:[47]},{"z-index":2,left:"75%",top:"0",up:[48]},{"z-index":2,left:"80%",top:"16.4063rem",up:[49]},{"z-index":2,left:"80%",top:"35.1563rem",up:[50]},{"z-index":2,left:"45%",top:"37.5rem",up:[51]},{"z-index":2,left:"5%",top:"37.5rem",up:[52]},{"z-index":2,left:"0",top:"21.0938rem",up:[53]},{"z-index":3,left:"0",top:"4.6875rem",up:[]},{"z-index":3,left:"30%",top:"0",up:[]},{"z-index":3,left:"70%",top:"0",up:[]},{"z-index":3,left:"80%",top:"14.0625rem",up:[]},{"z-index":3,left:"80%",top:"32.8125rem",up:[]},{"z-index":3,left:"50%",top:"37.5rem",up:[]},{"z-index":3,left:"10%",top:"37.5rem",up:[]},{"z-index":3,left:"0",top:"23.4375rem",up:[]}]}},methods:{init(){this.sign=-1,this.cards1.splice(0);let t=this.cards1;for(let e=0;e<this.number;e++)t.push(e);x(t,this.number),this.autoCalc()},async stepFn(){this.step>=this.number||await this.gameManager.step(async()=>{let t,e,s=-1,i=i=>{if(i==this.sign)return;if(this.done(i))return;let n=this.cards1.indexOf(i);this.check(n)&&this.map[n]["z-index"]>s&&(t=i,e=n,s=this.map[n]["z-index"])};if(-1!=this.sign&&this.sign<<2!=this.next[0]<<2){let t=this.sign>>2;for(let e=0;e<4;e++){let s=4*t+e;i(s)}}if(s<0)for(let n of this.next)i(n);this.clickCard(t,e)})},check(t){return this.map[t]&&this.map[t].up.findIndex(t=>!this.done(this.cards1[t]))<0},done(t){return this.gameManager.history.indexOf(t)>=0},clickCard(t,e){this.check(e)&&(this.sign==t?this.sign=-1:this.sign>>2!=t>>2?this.sign=t:(this.gameManager.recordOperation(this.sign),this.gameManager.recordOperation(t),this.sign=-1))},undo(){this.sign=-1,this.gameManager.undo(),this.gameManager.undo()},autoCalc(){let t=this.step;if(t%2==1)return;if(t>=this.number)return void this.gameManager.setWin();let e,s=[],i=-1,n=-1,r=!1;for(e=this.number-1;e>=0;e--){if(this.done(e))r=!0;else{let t=this.cards1.indexOf(e);this.check(t)&&(s.push(e),this.map[t]["z-index"]>i&&(i=this.map[t]["z-index"]))}if(e%4==0){if(s.length>1){if(r)return void(this.next=s);i>n&&(this.next=s,n=i)}i=-1,s=[],r=!1}}n<0&&this.gameManager.setLose()},renderTextView(){if(console.log("\n╔════════════════════════════════════════════════╗"),console.log("║              龟兔赛跑 (Tortoise)              ║"),console.log("╚════════════════════════════════════════════════╝"),console.log(`\n步数: ${this.step} / ${this.number}`),console.log(`已配对: ${this.step} 张 | 剩余: ${this.number-this.step} 张\n`),console.log("\n图例:"),console.log("  ┌──┐ = 卡牌边框  ▄ = 选中卡牌边框 ♥5 = 可点击卡牌内容  ·· = 不可点击卡牌"),this.next&&this.next.length>0){const t=this.next.map(t=>(0,T.zT)(t)).join(", ");console.log(`\n💡 提示: 可配对的卡片: ${t}`)}if(-1!==this.sign){const t=this.cards1.indexOf(this.sign),e=(0,T.zT)(this.sign);console.log(`🎯 当前选中: ${e} (位置 ${t})\n`)}const t=20,e=20,s=Array(t).fill(null).map(()=>Array(e).fill("·")),i=4,n=4,r=100,o=46.875,a=[];this.cards1.forEach((t,e)=>{if(!this.done(t)){const s=this.map[e],i=this.check(e),n=t===this.sign;a.push({cardId:t,posIdx:e,left:parseFloat(s.left),top:parseFloat(s.top),zIndex:s["z-index"],canClick:i,isSelected:n,cardText:(0,T.zT)(t)})}}),a.sort((t,e)=>t.zIndex-e.zIndex),a.forEach(a=>{const l=Math.round(a.left/r*(e-n)),c=Math.round(a.top/o*(t-i)),h=Math.max(0,Math.min(c,t-i)),d=Math.max(0,Math.min(l,e-n));for(let r=0;r<i;r++)for(let o=0;o<n;o++){const l=h+r,c=d+o;if(l<t&&c<e){let t=" ";0===r?t=this.sign==a.cardId?"▄":0===o?"┌":o===n-1?"┐":"──":r===i-1?t=this.sign==a.cardId?"▀":0===o?"└":o===n-1?"┘":"──":0===o||o===n-1?t=this.sign==a.cardId?"█":"│":a.canClick?1===r&&1===o?t=a.cardText[0]||" ":1===r&&2===o||2===r&&1===o?t=a.cardText[1]||" ":2===r&&2===o&&(t=a.cardText[0]||" "):(1!==r||1!==o&&2!==o)&&(2!==r||1!==o&&2!==o)||(t="·"),"──"===t?(s[l][c]="─",c+1<e&&(s[l][c+1]="─")):s[l][c]=t}}}),console.log("\n━━━ 游戏布局 (字符画) ━━━"),console.log("画布: 20行 × 20列，每张卡牌: 4行 × 4列\n");const l=[];return l.push("┌"+"─".repeat(e)+"┐"),s.forEach(t=>{l.push("│"+t.join("")+"│")}),l.push("└"+"─".repeat(e)+"┘"),console.log(l.join("\n")),"字符画渲染完成"}}};var Jt=A.cardGame(Kt,500);const Yt=Jt;var Qt=Yt;const Zt=(0,a.A)(Qt,[["render",Ht],["__scopeId","data-v-0ad3d044"]]);var te=Zt;const ee={class:"row"},se={key:0,class:"m-0"};function ie(t,e,s,i,r,o){const a=(0,n.g2)("CardImage"),l=(0,n.g2)("GameLayout");return(0,n.uX)(),(0,n.Wv)(l,(0,n.v6)(t.gameLayoutProps,{"lose-subtitle":t.n+"/"+4*(t.number+1),"lose-buttons":[{text:"RESTART",action:"goon",callback:t.goon,disabled:!1},{text:"UNDO",action:"undo",callback:t.undo,disabled:t.undoDisabled}],onUndo:t.undo,onGoon:t.goon,onStep:t.stepFn,onAuto:t.pass}),{"game-content":(0,n.k6)(()=>[(0,n.Lk)("div",ee,[(0,n.Lk)("div",null,[(0,n.Lk)("ul",{class:"cardsul flex-col",style:(0,u.Tr)([{height:150*(t.number+1)/16+"rem"},{"padding-left":"0",width:"100%","max-width":"31.25rem",margin:"0 auto",position:"static"}])},[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(t.cards1,(e,s)=>((0,n.uX)(),(0,n.Wv)(a,{key:s,class:(0,u.C4)(["card m-0",{shanshuo:e>=0&&t.canMoveCard(e)}]),style:{width:"25%",height:"9.375rem"},"card-id":e,hide:e<0,onClick:i=>t.canOperate&&(e>=0?t.clickCard(e):t.cards1[s-1]>=4&&t.clickSign(s))},{default:(0,n.k6)(()=>[t.cards1[s-1]>=4?((0,n.uX)(),(0,n.CE)("span",se,(0,u.v_)(t.getCurrentCandidateCard(s)),1)):(0,n.Q3)("",!0)]),_:2},1032,["card-id","hide","onClick","class"]))),128))],4)])])]),_:1},16,["lose-subtitle","lose-buttons","onUndo","onGoon","onStep","onAuto"])}s(116);function ne(t,e,s,i,n,r,o=null){const a={targetCard:t,slotIndex:e,ruleBasedScore:o,_getters:[()=>o?o.slotPriority:i,()=>o&&o.excludeReason?-1e6:0,()=>(void 0===a._feature2&&(a._feature2=r%(s.number+1)),-a._feature2),()=>o?o.matchNextCard:0,()=>o?o.adjacentEmptyCount:0,()=>o?o.columnEmptyCount:0,()=>i,()=>(a._deep||(a._deep=n.deep),a._deep),()=>{if(void 0===a._winProbability){const e=[...s.cards1],i=e[n.index];e[r]=i,e[n.index]=t,a._winProbability=s.estimateWinProbability(e)}return a._winProbability},()=>(a._diff||(a._diff=Math.abs((t>>2)-(s.number-1)+n.index%(s.number+1))),-a._diff),()=>(void 0===a._feature0&&(a._feature0=t>>2),a._feature0),()=>(void 0===a._feature1&&(a._feature1=t%4),a._feature1),()=>(void 0===a._feature3&&(a._feature3=n.index%(s.number+1)),-a._feature3),()=>(void 0===a._feature4&&(a._feature4=n.card>>2),a._feature4),()=>(void 0===a._feature5&&(a._feature5=s.countEmptyInColumn(s.cards1,Math.floor(r/(s.number+1)))),a._feature5),()=>(void 0===a._feature6&&(a._feature6=s.countEmptyAbove(s.cards1,r)),a._feature6),()=>(void 0===a._feature7&&(a._feature7=s.countEmptyBelow(s.cards1,r)),-a._feature7),()=>(void 0===a._feature8&&(a._feature8=s.countEmptyInColumn(s.cards1,Math.floor(n.index/(s.number+1)))),-a._feature8),()=>(void 0===a._feature9&&(a._feature9=s.countEmptyAbove(s.cards1,n.index)),a._feature9),()=>(void 0===a._feature10&&(a._feature10=s.cards1.filter(t=>t<0).length),-a._feature10),()=>(void 0===a._feature11&&(a._feature11=s.countCardsAbove(s.cards1,r)),a._feature11),()=>(void 0===a._feature12&&(a._feature12=s.countCorrectBelow(s.cards1,n.index)),a._feature12),()=>(void 0===a._feature13&&(a._feature13=s.countSameRankCandidates(s.cards1,n)),a._feature13),()=>{if(void 0===a._feature14){const e=[...s.cards1],i=e[n.index];e[r]=i,e[n.index]=t,a._feature14=s.countPossibleMoves(e)}return a._feature14},()=>{if(void 0===a._feature15){const e=[...s.cards1],i=e[n.index];e[r]=i,e[n.index]=t,a._feature15=s.calculateEmptyEntropy(e)}return-a._feature15},()=>{if(void 0===a._feature16){const e=[...s.cards1],i=e[n.index];e[r]=i,e[n.index]=t,a._feature16=s.countRestoredCards(e)}return a._feature16},()=>(void 0===a._feature17&&(a._feature17=Math.abs(r%(s.number+1)-(s.number-1-(t>>2)))+Math.abs(Math.floor(r/(s.number+1))-t%4%s.matchMode)),a._feature17),()=>(void 0===a._feature18&&(a._feature18=Math.floor(r/(s.number+1))!==Math.floor(n.index/(s.number+1))?1:0),a._feature18),()=>(void 0===a._feature19&&(a._feature19=10*(n.card>>2)-n.index%(s.number+1)),a._feature19),()=>(void 0===a._feature20&&(a._feature20=(n.card>>2)*s.countEmptyBelow(s.cards1,n.index)),-a._feature20)]};return a}function re(t,e){for(let s=0;s<t._getters.length;s++){const i=t._getters[s](),n=e._getters[s]();if(i>n)return!0;if(i<n)return!1}return!1}const oe={calculateRuleBasedPriority(t,e,s,i,n){const{cards1:r,number:o,matchMode:a}=t,l=s.index,c=s.card,h=o+1,d=l%h,u=Math.floor(n/h),g=n%h,f=c>>2,m=i>>2,p=i%4,v=p%a,w=-f;let b={slotPriority:w,excludeReason:null,matchNextCard:0,adjacentEmptyCount:0,columnEmptyCount:0};if(g>0){const t=n-1,e=r[t];if(e>=0){const t=e>>2,s=e%4,i=s%a;v===i&&m===t-1&&(b.excludeReason="rule1_same_group_rank_minus_1")}}d<g&&(b.excludeReason="rule2_slot_row_greater");let C=0;if(g<o){const t=n+1,e=r[t];if(e>=0){const t=e>>2,s=e%4,i=s%a;if(v===i&&m===t+1&&(C=1e4,C-=100*g,g>0)){const t=n-1,e=r[t],s=e>>2;C-=s}}}b.matchNextCard=C;let y=0;g>0&&r[n-1]<0&&y++,g<o&&r[n+1]<0&&y++,b.adjacentEmptyCount=y;let k=0;const M=u*h;for(let x=M;x<M+h;x++)r[x]<0&&k++;return b.columnEmptyCount=k,b},compareRuleBasedPriority(t,e){return t.slotPriority!==e.slotPriority?t.slotPriority-e.slotPriority:t.excludeReason&&!e.excludeReason?1:!t.excludeReason&&e.excludeReason?-1:t.excludeReason&&e.excludeReason?0:t.matchNextCard!==e.matchNextCard?e.matchNextCard-t.matchNextCard:t.adjacentEmptyCount!==e.adjacentEmptyCount?e.adjacentEmptyCount-t.adjacentEmptyCount:t.columnEmptyCount!==e.columnEmptyCount?e.columnEmptyCount-t.columnEmptyCount:0},countEmptyInColumn(t,e){const s=e*(this.number+1),i=s+this.number+1;let n=0;for(let r=s;r<i;r++)t[r]<0&&n++;return n},countEmptyAbove(t,e){const s=Math.floor(e/(this.number+1)),i=(s+1)*(this.number+1);let n=0;for(let r=e+1;r<i;r++)t[r]<0&&n++;return n},countEmptyBelow(t,e){const s=Math.floor(e/(this.number+1)),i=s*(this.number+1);let n=0;for(let r=i;r<e;r++)t[r]<0&&n++;return n},countCardsAbove(t,e){const s=Math.floor(e/(this.number+1)),i=(s+1)*(this.number+1);let n=0;for(let r=e+1;r<i;r++)t[r]>=0&&n++;return n},countCorrectBelow(t,e){const s=Math.floor(e/(this.number+1)),i=s*(this.number+1);let n=0;for(let r=i;r<e;r++){const e=t[r];if(e<0)break;const i=e>>2,o=e%4,a=this.number-1-r%(this.number+1);if(o%this.matchMode!==s%this.matchMode||i!==a)break;n++}return n},countSameRankCandidates(t,e){let s=0;const i=e.card,n=i>>2,r=n-1;if(r<0)return 0;const o=i%this.matchMode;for(let a=o;a<4;a+=this.matchMode){const e=4*r+a,i=t.indexOf(e);i>=0&&i+1<t.length&&t[i+1]<0&&s++}return s},calculateEmptyEntropy(t){const e=[0,0,0,0];let s=0;for(let n=0;n<t.length;n++)if(t[n]<0){s++;const t=Math.floor(n/(this.number+1));e[t]++}if(0===s)return 0;let i=0;for(let n of e)if(n>0){const t=n/s;i-=t*Math.log2(t)}return i},countPossibleMoves(t){let e=0;for(let s=0;s<t.length;s++){if(t[s]>=0)continue;const i=s>0?t[s-1]:null;if(null===i||i<0)continue;const n=i>>2,r=n-1;if(r<0)continue;const o=i%this.matchMode;for(let s=o;s<4;s+=this.matchMode){const i=4*r+s,n=t.indexOf(i);n>=0&&e++}}return e},countRestoredCards(t){let e=0;const s=this.number+1;for(let i=this.number-1;i>=0;i--)for(let n=0;n<4;n++){const r=4*i+n,o=t.indexOf(r);if(o<0)continue;const a=n%this.matchMode,l=a*s,c=l+(this.number-1-i);if(o===c){let s=!0;for(let e=i+1;e<this.number;e++){const i=l+(this.number-1-e),n=t[i];if(n<0){s=!1;break}const r=n>>2,o=n%4,c=o%this.matchMode;if(c!==a||r!==e){s=!1;break}}s&&e++}}return e},estimateWinProbability(t){const e=this.number+1,s=4;let i=0,n=0;for(let l=0;l<e;l++){const r=this.evaluateRowScore(t,l,e,s);i+=r.score,n+=r.maxScore}const r=this.calculateBlockPenalty(t),o=n>0?i/n*80:0,a=Math.max(0,o-r);return a},evaluateRowScore(t,e,s,i){let n=0,r=0;for(let o=0;o<i;o++){const i=o*s+e,a=t[i];if(r+=10,a<0){const e=this.countEmptySlotsAbove(t,i);n+=Math.max(0,10-2*e);continue}const l=a>>2,c=a%4,h=c%this.matchMode,d=this.number-1-e,u=o%this.matchMode;h===u?l===d?(n+=10,this.checkRowBelowCorrect(t,e,o,s)&&(n+=5,r+=5)):n+=l>d?5:2:(n+=3,l===d&&(n+=2))}return{score:n,maxScore:r}},countEmptySlotsAbove(t,e){let s=0;const i=Math.floor(e/(this.number+1)),n=i*(this.number+1),r=n+this.number+1;for(let o=e+1;o<r;o++)t[o]<0&&s++;return s},checkRowBelowCorrect(t,e,s,i){for(let n=e+1;n<this.number;n++){const e=s*i+n,r=t[e];if(r<0)return!1;const o=r>>2,a=this.number-1-n;if(o!==a)return!1}return!0},calculateBlockPenalty(t){let e=0;const s=this.number+1;for(let n=0;n<4;n++){const i=n*s;for(let n=i;n<i+s-1;n++){const r=t[n];if(r<0)continue;const o=r>>2;for(let a=n+1;a<i+s;a++){const s=t[a];if(s<0)continue;const i=s>>2;i<o&&(e+=5)}}}const i=this.countPossibleMoves(t);return 0===i?e+=20:1===i&&(e+=10),e}},ae={name:"Sort",data(){return{title:"Sort",cards1:[],number:4,n:0,sign_index:-1,matchMode:1,candidateIntervals:{},currentCandidates:{}}},methods:{init(){this.sign_index=-1,this.cards1.splice(0);let t=this.cards1;for(let e=0;e<4*this.number;e++)t.push(e);x(t,4*this.number);for(let e=0;e<4;e++)t.splice(t.indexOf(4*this.number-1-e),1,-1-e);for(let e=0;e<4;e++)t.splice(e*(this.number+1),0,4*this.number-4+e);this.autoCalc(),this.$nextTick(()=>{this.updateAllCandidateCycling()})},beforeDestroy(){Object.keys(this.candidateIntervals).forEach(t=>{this.stopCandidateCycling(parseInt(t))})},updateAllCandidateCycling(){Object.keys(this.candidateIntervals).forEach(t=>{this.stopCandidateCycling(parseInt(t))});for(let t=0;t<this.cards1.length;t++)this.cards1[t]<0&&t>0&&this.cards1[t-1]>=4&&this.startCandidateCycling(t)},getCandidateCardsForSlot(t){const e=this.cards1[t-1];if(e<4)return[];const s=this.findAllCardsByRankOffset(e,-1);return s.map(t=>t.card)},startCandidateCycling(t){this.stopCandidateCycling(t);const e=this.getCandidateCardsForSlot(t);0!==e.length&&(this.currentCandidates[t]=0,this.candidateIntervals[t]=setInterval(()=>{e.length>0&&(this.currentCandidates[t]=(this.currentCandidates[t]+1)%e.length)},this.gameManager.autoStepDelay))},stopCandidateCycling(t){this.candidateIntervals[t]&&(clearInterval(this.candidateIntervals[t]),delete this.candidateIntervals[t],delete this.currentCandidates[t])},getCurrentCandidateCard(t){const e=this.getCandidateCardsForSlot(t);if(0===e.length)return"";const s=this.currentCandidates[t]||0;return this.getCardPlaceholderText(e[s])},calculateStateHash(){return this.cards1.join(",")},isStateHashRepeated(t){return this.gameManager.history.find(e=>e.stateHash==t)},recordMove(t,e,s,i){const n=this.calculateStateHash();this.gameManager.recordOperation({type:"move",from:t,to:e,card:s,sign:i,timestamp:Date.now(),stateHash:n})},handleUndo(t){switch(t.type){case"move":this.cards1.splice(t.to,1,t.sign),this.cards1.splice(t.from,1,t.card);break}},executeMove(t,e){const s=this.cards1.indexOf(t),i=this.cards1[e];if(this.findNextCard(t,t=>t==e-1)<0)return console.warn("❌ 无效的移动");this.cards1.splice(s,1,i),this.cards1.splice(e,1,t),this.recordMove(s,e,t,i)},clickCard(t){let e=this.findNextCard(t,t=>this.sign_index>=0?t==this.sign_index-1:this.cards1[t+1]<0);if(e>=0){let s=e+1;this.executeMove(t,s)}else console.error(`❌ clickCard: 移动失败 card=${t}, 找不到有效目标位置。Seed:${this.seed}`);this.sign_index=-1},updateN(){this.n=0;for(let t=0;t<4*this.number+4;t++)this.cards1[t]>>2==this.number-1-t%(this.number+1)&&this.n++},async stepFn(){if(!this.next||this.next[0]<0){console.error("❌ stepFn: this.next 无效",this.next);const t={cards1:[...this.cards1],next:this.next,sign_index:this.sign_index,n:this.n};return console.error("💾 故障状态已保存:",JSON.stringify(t)),this.updateN(),this.n>=4*(this.number+1)&&this.gameManager.setWin(),void this.gameManager.stopAuto()}await this.gameManager.step(async()=>{this.clickSign(this.next[1]),await this.wait(),this.executeMove(this.next[0],this.next[1])})},clickSign(t){let e=this.cards1[t-1];if(e<4)return;let s=this.findPrevCard(e);if(s>=0&&"undefined"!==typeof window&&window.document){const t=s%(this.number+1)*150,e=document.querySelector(".game-content-wrapper");e?e.scrollTop=t:(document.documentElement.scrollTop=t,document.body.scrollTop=t)}this.sign_index=t},evaluateCandidateScore(t){if(!t||t.idx<0)return-999999;let e=0,s=t.idx;this.cards1[s+1]<0&&(e+=1e5);let i=s%(this.number+1);e+=10*(this.number-i);let n=t.card%4;return e+=4-n,e},selectBestCandidate(t){if(!t||0===t.length)return-1;if(1===t.length)return t[0].idx;let e=-999999,s=-1;for(let i of t){let t=this.evaluateCandidateScore(i);t>e&&(e=t,s=i.idx)}return s},findCardByRankOffset(t,e,s=null,i=!1){let n=(t>>2)+e,r=t%this.matchMode,o=[];for(let a=r;a<4;a+=this.matchMode){let t=4*n+a,e=this.cards1.indexOf(t);e>=0&&(s&&!s(e)||o.push({idx:e,card:t}))}return i?o:0===o.length?-1:1===o.length?o[0].idx:this.selectBestCandidate(o)},findAllCardsByRankOffset(t,e,s=null){return this.findCardByRankOffset(t,e,s,!0)},findNextCard(t,e=null){return this.findCardByRankOffset(t,1,e)},findPrevCard(t){return this.findCardByRankOffset(t,-1)},canMoveCard(t){if(t<0)return!1;let e=this.findNextCard(t,t=>this.cards1[t+1]<0);return e>=0},...oe,autoCalc(){let t=!0,e={},s=[],i=[];for(let o=-4;o<0;o++){let t=this.cards1.indexOf(o),s=this.cards1[t-1];e[o]={index:t,card:s,priority:0,_in:0,able:!0,bestCard:null}}for(let o=-4;o<0;o++){let n=e[o].index,r=e[o].card,a=[],l=new Map,c=this.findAllCardsByRankOffset(r,-1);for(let t of c)l.set(t.card,0);let h=(t,i,n=0)=>{if(t<0)return s.push([o,t,i]),e[t].priority=Math.max(e[t].priority,++n),e[t]._in++,n;{if(t>=48)return 0;if(!L(a,[t,0]))return 0;a.unshift([t,0]);let e=this.findAllCardsByRankOffset(t,1);if(0===e.length)return 0;let s=0;for(let t of e){let e=t.idx,r=this.cards1[e+1],o=h(r,i,n);s=Math.max(s,o),l.has(t.card)&&l.set(t.card,Math.max(l.get(t.card),o))}return s}},d=(t,i,n,r=0)=>{if(!L(a,[i,1]))return 0;if(a.unshift([i,1]),n>0&&i>=8){let e=this.cards1[t+1];h(e,n,r)}if(i=this.cards1[t-1],i<4){let a=t-2,c=1;while(i<0)i=this.cards1[a],a--,c++;if(i>=4*c){s.push([o,this.cards1[t-1],n]);let i=this.cards1[t-1];return e[i].priority=Math.max(e[i].priority,++r),e[i]._in++,r}i+=4;while(a%(this.number+1)>0){let t=this.cards1[a];if(!(t>=0&&t>>2==i>>2&&t%this.matchMode==i%this.matchMode))break;a--,i+=4,n++}if(a%(this.number+1)==0)return 0;let d=this.cards1[this.cards1.indexOf(i)+1],u=h(d,n,r);return l.has(i)&&l.set(i,Math.max(l.get(i),u)),u}let c=this.findAllCardsByRankOffset(i,-1),u=0;for(let e of c){let t=d(e.idx,i,n,r);u=Math.max(u,t),l.has(e.card)&&l.set(e.card,Math.max(l.get(e.card),t))}return u};if(r>=4&&(t=!1),d(n,o,0),r>=4){let t=this.findAllCardsByRankOffset(r,-1);if(t.length>0){let s=[];for(let e of t){let t=this.cards1.indexOf(r);if(t<0)continue;let i=[...this.cards1];i[e.idx]=o,i[n]=e.card;let a=i.join(","),c=l.get(e.card)||0;const h=this.calculateRuleBasedPriority(this,o,{index:n,card:r},e.card,e.idx);s.push({card:e.card,idx:e.idx,priority:c,ruleBasedScore:h,stateHash:a})}s.length>0?e[o].allCandidates=s:t.length>0&&i.push(o)}}}for(let o of i)e[o]&&(e[o].priority=0);if(t)return this.updateN(),void(this.n>=4*(this.number+1)?this.gameManager.setWin():this.gameManager.setLose());let n=[-1,-2,-3,-4];while(n.length>0){let t;for(t=0;t<n.length;t++)if(e[n[t]]._in<=0)break;if(t<n.length){let i=n.splice(t,1)[0],r=0;while(r<s.length)s[r][0]==i?(e[s[r][1]]._in--,e[s[r][1]].deep=s[r][2],s.splice(r,1),e[i].able=!1):r++}else{let t=[n[0]];while(s.length>0){let i=s.findIndex(e=>e[1]==t[0]),n=t.indexOf(s[i][0]);if(n>=0){e[s[i][1]]._in--,s.splice(i,1);for(let i=0;i<n;i++)for(let n=0;n<s.length;n++)if(s[n][0]==t[i]&&s[n][1]==t[i+1]){e[s[n][1]]._in--,s.splice(n,1);break}break}t.unshift(s[i][0])}}}this.next=[-1,-1];let r=null;for(let o=-4;o<0;o++){let t=e[o];if(t.card<4)continue;let s=t.allCandidates;if(s&&0!==s.length&&!(this.cards1[t.index]>=0))for(let e of s){let i=e.card,n=e.priority,o=e.ruleBasedScore,a=this.cards1.indexOf(i);if(a<0)continue;if(this.isStateHashRepeated(e.stateHash)){s.splice(s.indexOf(e),1);continue}const l=a-1,c=this.cards1[l];if(c>=0){const t=c>>2,e=c%4,s=e%this.matchMode;if(i%this.matchMode===s&&i>>2===t-1)continue}const h=ne(i,t.index,this,n,t,a,o);r&&!re(h,r)||(r=h,this.next=[h.targetCard,h.slotIndex])}}if(this.next[0]<0){let t=!0,s=0;for(let i=-4;i<0;i++)if(e[i]&&e[i].card>=4){s++;const n=e[i].allCandidates;e[i].priority>0&&n&&n.length>0&&(t=!1)}this.updateN(),this.n>=4*this.number?this.gameManager.setWin():t&&s>0&&this.gameManager.setLose()}else this.updateN()},setMatchMode(t){[1,2,4].includes(t)?(this.matchMode=t,this.init(),console.log("✅ 难度已设置为: "+(1===t?"简单(数值)":2===t?"中等(颜色)":"困难(花色)"))):console.error("❌ 无效的难度模式，请使用 1, 2 或 4")},getMatchModeDescription(){const t={1:"简单(数值匹配) - 任意点数相同即可连接",2:"中等(颜色匹配) - 同颜色的牌可以连接",4:"困难(花色匹配) - 必须同花色才能连接"};return t[this.matchMode]||"未知难度"},renderTextView(){if(console.log("\n╔════════════════════════════════════════════════╗"),console.log("║                排序游戏 (Sort)                ║"),console.log("╚════════════════════════════════════════════════╝"),console.log(`\n难度: ${this.getMatchModeDescription()}`),console.log(`完成度: ${this.n} / ${4*(this.number+1)} 张\n`),console.log("\n图例: [-n] = 无卡牌可放入  [?X] = 有卡牌可放入  * = 可移动  → = 推荐移动"),this.next&&this.next[0]>=0){const t=(0,T.zT)(this.next[0]),e=this.cards1[this.next[1]],s=e<0?["[-1]","[-2]","[-3]","[-4]"][Math.abs(e)-1]:`[${this.next[1]}]`;console.log(`\n💡 建议移动: ${t} → ${s}`)}const t=this.number+1;let e="┌────┬",s="│    │",i="├────┼",n="└────┴";for(let r=0;r<4;r++)e+="───────┬",s+=`  列${r+1}  │`,i+="───────┼",n+="───────┴";e=e.slice(0,-1)+"┐",s=s.slice(0,-1)+"│",i=i.slice(0,-1)+"┤",n=n.slice(0,-1)+"┘",console.log(e),console.log(s),console.log(i);for(let r=0;r<t;r++){let e=`│行${(r+1).toString().padStart(2)}│`;for(let s=0;s<4;s++){const i=s*t+r,n=this.cards1[i];let o="",a="";if(n<0){const t=Math.abs(n)-1,e=i-1,s=this.cards1[e],r=["[-1]","[-2]","[-3]","[-4]"][t];if(o=r,s>=4){const t=this.findAllCardsByRankOffset(s,-1);if(t&&t.length>0){const e=t[0],s=(0,T.zT)(e.card);o=`[?${s.slice(1)}]`}}}else{const t=(0,T.zT)(n),e=this.canMoveCard(n),s=this.next&&this.next[0]===n;s?(a="→",o=`${a}${t}`):e?(a="*",o=`${a}${t}`):o=t}const l=Math.max(0,7-o.length),c=Math.floor(l/2),h=l-c;e+=" ".repeat(c)+o+" ".repeat(h)+"│"}console.log(e)}return console.log(n),"渲染完成"},sendCustomButtons(){const t=1===this.matchMode?2:2===this.matchMode?4:1;this.customButtons.push({action:"difficulty",label:"MODE",method:"setMatchMode",args:[t],description:"SWITCH DIFFICULTY MODE (EASY → NORMAL → HARD)"})}},created(){this.sendCustomButtons()},watch:{matchMode(){this.sendCustomButtons()},cards1:{handler(){this.$nextTick(()=>{this.updateAllCandidateCycling()})},deep:!0}}};var le=A.puzzleGame(ae,500);const ce=le;var he=ce;const de=(0,a.A)(he,[["render",ie],["__scopeId","data-v-13db5f3b"]]);var ue=de;const ge={class:"row"},fe={class:"row"},me={class:"cardsul flex-row center",style:{"padding-left":"0",margin:"0"}},pe={class:"small"},ve={class:"small"};function we(t,e,s,i,r,o){const a=(0,n.g2)("CardImage"),l=(0,n.g2)("GameLayout");return(0,n.uX)(),(0,n.Wv)(l,(0,n.v6)(t.gameLayoutProps,{onGoon:t.goon,onStep:t.stepFn,onAuto:t.pass}),{"game-content":(0,n.k6)(()=>[(0,n.Lk)("div",ge,[(0,n.Lk)("span",null,"TIME: "+(0,u.v_)(t.time),1),e[0]||(e[0]=(0,n.Lk)("br",null,null,-1)),(0,n.Lk)("span",null,"STEP: "+(0,u.v_)(t.step),1)]),(0,n.Lk)("div",fe,[(0,n.Lk)("div",null,[(0,n.Lk)("ul",me,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(t.cardPositions,(e,s)=>((0,n.uX)(),(0,n.Wv)(a,{key:s,class:"card m-0 radius",style:{"max-width":"25%"},"card-id":t.selectedCard==e||t.secondSelectedCard==e||t.matchedCards[e]?e:"bg",onClick:i=>t.selectedCard!=e&&t.secondSelectedCard!=e&&!t.matchedCards[e]&&t.canOperate&&t.clickCard(s)},null,8,["card-id","onClick"]))),128))])])])]),"win-content":(0,n.k6)(()=>[(0,n.Lk)("h1",pe,"TIME: "+(0,u.v_)(t.time),1),(0,n.Lk)("h1",ve,"STEP: "+(0,u.v_)(t.step),1)]),_:1},16,["onGoon","onStep","onAuto"])}const be={name:"Pairs",data(){return{title:"Pairs",cardPositions:[],matchedCards:[],seenCards:[],selectedCard:-1,secondSelectedCard:-2,time:0,_timer:0,totalCards:48,n:0}},created(){this.sendCustomButtons()},methods:{init(){this.time=0,clearInterval(this._timer),this._timer=0,this.selectedCard=-1,this.secondSelectedCard=-1,this.cardPositions.splice(0),this.seenCards.splice(0),this.matchedCards.splice(0);const t=this.cardPositions;for(let e=0;e<this.totalCards;e++)t.push(e),this.matchedCards.push(!1);x(t,this.totalCards)},async clickCard(t,e){let s,i;if(void 0===t){let t=!1;for(s=0;s<this.totalCards;s++)if(i=this.cardPositions[s],!this.seenCards[i]&&!this.matchedCards[i]){t=!0;break}if(!t)for(this.seenCards.splice(0),s=0;s<this.totalCards;s++)if(i=this.cardPositions[s],!this.matchedCards[i])break}else if(void 0!==e){const n=8;s=t*n+e,i=this.cardPositions[s]}else s=t,i=this.cardPositions[s];if(this._timer||(this._timer=setInterval(()=>{this.time++},1e3)),this.selectedCard===i||this.matchedCards[i])return;if(this.seenCards[i]=!0,this.gameManager.recordOperation(),this.selectedCard<0)return void(this.selectedCard=i);const n=this.selectedCard>>2===i>>2;n&&(this.matchedCards.splice(i,1,!0),this.matchedCards.splice(this.selectedCard,1,!0),this.selectedCard=-1),this.gameManager.hitflag=!1,this.secondSelectedCard=i,await this.wait(),this.selectedCard=-1,this.secondSelectedCard=-1,this.gameManager.hitflag=!0;const r=this.checkGameCompletion();r&&(this.gameManager.setWin(),clearInterval(this._timer),this._timer=0)},checkGameCompletion(){for(let t=0;t<this.totalCards;t++)if(!this.matchedCards[t])return!1;return!0},async stepFn(){if(this.selectedCard>=0){const t=this.selectedCard-this.selectedCard%4;for(let e=0;e<4;e++){const s=t+e;if(s!==this.selectedCard&&this.seenCards[s]&&!this.matchedCards[s]){const t=this.cardPositions.indexOf(s);if(-1!==t)return await this.clickCard(t)}}}else{let t;for(let e=0;e<this.totalCards;e++)if(e%4===0&&(t=0),this.seenCards[e]&&!this.matchedCards[e]&&t++,t>1){const t=this.cardPositions.indexOf(e);if(-1!==t)return await this.clickCard(t)}}return await this.clickCard()},renderTextView(){console.log("\n╔════════════════════════════════════════════════╗"),console.log("║              配对游戏 (Pairs)                 ║"),console.log("╚════════════════════════════════════════════════╝");const t=this.matchedCards.filter(t=>t).length;console.log(`\n时间: ${this.time}秒 | 已配对: ${t}/${this.totalCards} 张\n`),console.log("\n图例:"),console.log("  [?] = 未翻开  [✓] = 已看过  > = 第一张  * = 第二张"),this.selectedCard>=0?console.log(`\n当前选中: ${(0,T.zT)(this.selectedCard)} (需要配对)`):console.log("\n");const e=8,s=6;for(let i=0;i<s;i++){let t="  ";for(let s=0;s<e;s++){const n=i*e+s,r=this.cardPositions[n],o=this.matchedCards[r]||r===this.selectedCard||r===this.secondSelectedCard,a=this.seenCards[r];if(o){const e=(0,T.zT)(r),s=r===this.selectedCard?">":r===this.secondSelectedCard?"*":"";t+=`${(s+e).padEnd(3)} `}else t+=a?"[✓] ":"[?] "}console.log(t)}return"渲染完成"},sendCustomButtons(){this.customButtons.push({action:"clickCard",label:"CLICK",method:"clickCard",args:[],description:"CLICK ONE CARD"})}}};var Ce=A.pairGame(be,500);const ye=Ce;var ke=ye;const Me=(0,a.A)(ke,[["render",we],["__scopeId","data-v-0f05094e"]]);var xe=Me;const Se={class:"row"},Le={calss:"center"},_e={class:"m-0 center",style:{width:"25%","max-width":"6.25rem",height:"9.375rem"}},Ie=["onMouseenter","onTouchenter","onMouseleave","onTouchleave"],Ee=["onClick"],Te={class:"m-0"},Ae=["onMouseenter","onTouchenter","onMouseleave","onTouchleave"];function $e(t,e,s,r,o,a){const l=(0,n.g2)("CardImage"),c=(0,n.g2)("GameLayout"),h=(0,n.gN)("move");return(0,n.uX)(),(0,n.Wv)(c,(0,n.v6)(t.gameLayoutProps,{onUndo:t.undo,onGoon:t.goon,onStep:t.stepFn,onAuto:t.pass}),{"game-content":(0,n.k6)(()=>[(0,n.Lk)("div",Se,[(0,n.Lk)("div",Le,[(0,n.Lk)("ul",{ref:"container",class:"cardsul rela center",style:(0,u.Tr)([{"padding-left":"0","max-width":"31.25rem",margin:"auto"},{height:t.height/16+"rem"}])},[(0,n.bF)(l,{"card-id":"bg",hide:0===t.cards[0].length,class:"m-0 static card m-0 abso",style:{"max-width":"6.25rem",width:"25%",height:"9.375rem","z-index":"0",left:"0",top:"0"},onClick:e[0]||(e[0]=e=>t.canOperate&&t.clickCard(0))},null,8,["hide"]),(0,n.Lk)("li",{class:(0,u.C4)(["cards m-0 static",{drag:1==t.dragItem}]),style:(0,u.Tr)([{width:"50%",height:"9.375rem"},{zIndex:1==t.dragItem?10:0}])},[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(t.cards[1].length>=(t.turn>3?1:4-t.turn)?t.turn>3?1:4-t.turn:t.cards[1].length,e=>(0,n.bo)(((0,n.uX)(),(0,n.Wv)(l,{key:t.cards[1][e-1]+(3*t.fresh[1]+1)*t.number,class:(0,u.C4)(["m-0 card abso",{drag:1==t.dragItem,opa0:t.dragCard==t.cards[1][e-1]&&t.enterItem>=0,shanshuo:t.sign==t.cards[1][e-1]}]),style:(0,u.Tr)([{width:"25%",top:"0"},{left:12.5*(3-e)+25+"%",zIndex:3-e}]),"card-id":t.cards[1][e-1]},null,8,["style","class","card-id"])),[[h,{start:t.start,end:t.end,move:t.move}]])),128))],6),(0,n.Lk)("li",_e,[(0,n.Lk)("span",{class:"m-0",style:(0,u.Tr)({color:t.turn>3?"red":"inherit"})},(0,u.v_)(t.turn),5),e[1]||(e[1]=(0,n.Lk)("span",{class:"m-0"},"/3",-1))]),e[2]||(e[2]=(0,n.Lk)("li",{style:{height:"1.875rem",width:"100%"}},null,-1)),((0,n.uX)(),(0,n.CE)(n.FK,null,(0,n.pI)(4,e=>(0,n.Lk)("li",{key:e,class:(0,u.C4)(["cards m-0 static center",{drag:t.dragItem==e+1}]),style:(0,u.Tr)([{width:"25%",height:"9.375rem"},{zIndex:t.dragItem==e+1?10:1}]),ref_for:!0,ref:"middleBox",onMouseenter:s=>t.enter(e+1),onTouchenter:s=>t.enter(e+1),onMouseleave:s=>t.leave(e+1),onTouchleave:s=>t.leave(e+1)},[(0,n.Lk)("div",{class:"card m-0 abso",style:(0,u.Tr)([{top:"11.25rem",width:"25%"},{zIndex:t.dragItem==e+1?10:1,left:25*(e-1)+"%"}]),onClick:s=>t.canOperate&&t.clickCard(e+1)},[(0,n.Lk)("span",Te,(0,u.v_)(t.types[e-1]+"A"),1)],12,Ee),((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(t.cards[e+1],s=>(0,n.bo)(((0,n.uX)(),(0,n.Wv)(l,{key:s+(3*t.fresh[e+1]+2)*t.number,class:(0,u.C4)(["card m-0 abso",{drag:t.dragItem==e+1,shanshuo:t.sign==s,opa0:t.dragCard==s&&t.enterItem>=0}]),style:(0,u.Tr)([{top:"11.25rem",width:"25%"},{left:25*(e-1)+"%"}]),"card-id":s},null,8,["style","class","card-id"])),[[h,{start:t.start,end:t.end,move:t.move}]])),128)),(0,n.bo)((0,n.bF)(l,{"card-id":t.dragCard,style:(0,u.Tr)([{left:25*(e-1)+"%"},{width:"25%",height:"9.375rem",top:"11.25rem"}]),class:"card m-0 abso"},null,8,["card-id","style"]),[[i.aG,t.dragCard>=0&&t.enterItem==e+1]])],46,Ie)),64)),e[3]||(e[3]=(0,n.Lk)("li",{style:{height:"1.875rem",width:"100%"}},null,-1)),((0,n.uX)(),(0,n.CE)(n.FK,null,(0,n.pI)(4,e=>(0,n.Lk)("li",{key:e+4,class:(0,u.C4)(["cards m-0 static",{drag:t.dragItem==e+5}]),style:(0,u.Tr)([{width:"25%"},{height:(30*t.cards[e+5].length+120)/16+"rem",zIndex:t.dragItem==e+5?10:1}]),ref_for:!0,ref:"downBox",onMouseenter:s=>t.enter(e+5),onTouchenter:s=>t.enter(e+5),onMouseleave:s=>t.leave(e+5),onTouchleave:s=>t.leave(e+5)},[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(t.cards[e+5],(s,i)=>(0,n.bo)(((0,n.uX)(),(0,n.Wv)(l,{key:s+(3*t.fresh[e+5]+3)*t.number,class:(0,u.C4)(["m-0 card abso",{drag:t.dragItem==e+5,opa0:t.dragItem==e+5&&t.dragCard>=s&&t.enterItem>=0,shanshuo:t.sign==s}]),style:(0,u.Tr)([{width:"25%",height:"9.375rem"},{top:(30*i+360)/16+"rem",left:25*(e-1)+"%"}]),ref_for:!0,ref:"down","card-id":s},null,8,["style","class","card-id"])),[[h,{start:t.start,end:t.end,move:t.move}]])),128)),((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(t.cards[t.dragItem],(s,r)=>(0,n.bo)(((0,n.uX)(),(0,n.Wv)(l,{key:r+8,"card-id":s,style:(0,u.Tr)([{top:(30*t.cards[e+5].length+30*(r-t.cards[t.dragItem].indexOf(t.dragCard))+360)/16+"rem",left:25*(e-1)+"%"},{width:"25%",height:"9.375rem"}]),class:"card m-0 abso"},null,8,["card-id","style"])),[[i.aG,t.enterItem==e+5&&(t.dragItem>=6&&t.dragCard>=s||t.dragCard==s)]])),128))],46,Ae)),64))],4)])])]),_:1},16,["onUndo","onGoon","onStep","onAuto"])}s(8237);var ze={},Oe=function(t,e){return e&&(t=t.touches[0]),[t.clientX,t.clientY]},Pe=function(t,e,s){const i=t._moveData;i.position=Oe(e,s),i.offsetX=i.position[0]-i.startPosition[0],i.offsetY=i.position[1]-i.startPosition[1]},Ge=function(t,e){return t.cancelable&&t.preventDefault(),!e&&t.stopPropagation(),!1},Fe=(t,e,s,i,n)=>{t.dispatchEvent(new CustomEvent(e,{detail:s,bubbles:i,cancelable:n}))};ze.emit=Fe;var Ne=(t,e,s={})=>{for(const i of e)"function"===typeof s[i]&&t.addEventListener(i,s[i])};ze.listenEvents=Ne,ze.mounted=function(t,e,s){if(!t._isInitMove){t._isInitMove=!0;var{page:i=window}=e.value||{},{bubbles:n}=e.modifiers;Ne(t,["start","move","end"],e.value);var r,o=!1;t.addEventListener("touchstart",l),t.addEventListener("mousedown",l)}function a(){o=!1,t.removeEventListener("cancel",a),r?(i.removeEventListener("touchend",h),i.removeEventListener("touchmove",c),i.removeEventListener("touchcancel",h)):(i.removeEventListener("mouseup",h),i.removeEventListener("mousemove",c))}function l(o){return r="touchstart"===o.type,t.addEventListener("cancel",a),r?(i.addEventListener("touchend",h,{passive:!1}),i.addEventListener("touchmove",c,{passive:!1}),i.addEventListener("touchcancel",h,{passive:!1})):(i.addEventListener("mouseup",h,{passive:!1}),i.addEventListener("mousemove",c,{passive:!1})),t._moveData||(t._moveData={isTouch:r}),t._moveData.startPosition=Oe(o,r),Fe(t,"start",{el:t,binding:e,vnode:s}),Ge(o,n)}function c(i){return Pe(t,i,r),Fe(t,"move",{el:t,binding:e,vnode:s}),o=!0,Ge(i,n)}function h(i){if(!o){const e=t._moveData;e.offsetX=0,e.offsetY=0,Fe(t,"notmove")}return Fe(t,"end",{el:t,binding:e,vnode:s}),Fe(t,"cancel"),Ge(i,n)}},ze.bind=ze.mounted,ze.install=function(t){t.directive("move",ze)};var De=ze;const Be={name:"Spider",data(){return{title:"Spider",cards:[[],[],[],[],[],[],[],[],[],[]],fresh:[0,0,0,0,0,0,0,0,0,0],sign:-99,index:-99,dragCard:-99,dragItem:-99,enterItem:-99,turn:1,number:52}},directives:{move:De},created:function(){this.sendCustomButtons(),this.setupGameStateListeners()},mounted(){let t=t=>()=>this.moveEnter(t);if(this.$refs.middleBox&&this.$refs.downBox){this.middleEnters=[],this.downEnters=[];for(let e=0;e<4;e++){let s=this.$refs.middleBox[e],i=this.$refs.downBox[e];this.middleEnters[e]=t(e+2),this.downEnters[e]=t(e+6),s.addEventListener("mousemove",this.middleEnters[e]),s.addEventListener("touchmove",this.middleEnters[e]),i.addEventListener("mousemove",this.downEnters[e]),i.addEventListener("touchmove",this.downEnters[e])}}},beforeUnmount(){if(this.gameManager.off("stateChange"),this.$refs.middleBox&&this.$refs.downBox&&this.middleEnters&&this.downEnters)for(let t=0;t<4;t++){let e=this.$refs.middleBox[t],s=this.$refs.downBox[t];e.removeEventListener("mousemove",this.middleEnters[t]),e.addEventListener("touchmove",this.middleEnters[t]),s.addEventListener("mousemove",this.downEnters[t]),s.addEventListener("touchmove",this.downEnters[t])}},methods:{setupGameStateListeners(){this.gameManager.on("stateChange",()=>{this.$forceUpdate()})},init(){this.gameManager.init();for(let e=0;e<10;e++)this.cards[e].splice(0);this.fresh=[0,0,0,0,0,0,0,0,0,0],this.turn=1,this.sign=-99,this.dragItem=-99,this.dragCard=-99,this.enterItem=-99;let t=this.cards[0];for(let e=0;e<this.number;e++)t.push(e);x(t,this.number);for(let e=6;e<10;e++)this.cards[e].push(this.cards[0].splice(-1)[0])},findPos(t){for(let e=2;e<10;e++)if(this.cards[e].indexOf(t)>=0)return e;return-99},addAndCheck(t,e){let s=L(this.record,[t,e]);return!!s&&(this.record.unshift([t,e]),!0)},checkDown(t){if(!this.addAndCheck(t,1))return;let e=t%2,s=t>>2;if(12==s)return!1;let i,n=(s+1)%13*4+!e,r=n+2,o=this.findPos(n),a=this.findPos(r);if(o<0&&a<0)return!1;if(o>=6&&a>=6){let e=this.findPos(t),s=this.cards[o][this.cards[o].length-1],i=this.cards[a][this.cards[a].length-1];return(s==n||i==r)&&(e!=(s==n?o:a)&&[e,s==n?o:a])}if(o>=6||a>=6){let e=o>=6?this.cards[o]:this.cards[a],s=o>=6?n:r,i=e.indexOf(s);if(i==e.length-1){let e=this.findPos(t);if(e!=(o>=6?o:a))return[e,o>=6?o:a]}else{let t=this.checkUp(e[i+1]);if(t)return t}if(o<0||a<0)return!1}if(o-2==n%4){let t=0,e=this.cards[o][this.cards[o].length-1];while(e-4*t>=n){let s=this.checkDown(e-4*t);if(!s)break;i||(i=s),t++}if(e-4*t<n)return i}if(a-2==r%4){let t=0,e=this.cards[a][this.cards[a].length-1];while(e-4*t>=r){let s=this.checkDown(e-4*t);if(!s)break;i||(i=s),t++}if(e-4*t<r)return i}return!1},checkUp(t){if(!this.addAndCheck(t,2))return;let e=t%4,s=t>>2,i=[];for(let n=0;n<=s;n++){let t=4*n+e,r=this.findPos(t);if(r<0){if(n==s){i.push([r,e+2]);break}return!1}if(r==e+2)continue;let o=this.cards[r].indexOf(t);if(o==this.cards[r].length-1){i.push([r,e+2]);continue}let a=this.checkMove(this.cards[r][o+1]);if(!a)return!1;i.push(a)}return i[0]},checkMove(t){if(this.addAndCheck(t,0))return this.checkDown(t)||this.checkUp(t)},async stepFn(){await this.gameManager.step(async()=>{let t=!1;for(let e=6;e<10;e++)if(this.record=[],t=this.checkMove(this.cards[e][0]),t){if(!this.skipCheck&&!L(this.gameManager.history,[t[1],t[0]]))continue;break}if(this.record=[],!t&&this.cards[1].length>0&&(t=this.checkMove(this.cards[1][0])),!t||!this.skipCheck&&!L(this.gameManager.history,[t[1],t[0]]))return this.clickCard(0);this.skipCheck=!1,this.sign=-99,await this.clickCard(t[0]<0?1:t[0]),await this.wait(),await this.clickCard(t[1])})},async addCard(){for(let t=6;t<10;t++)this.cards[t].length<=0&&(this.cards[1].length>0?(this.gameManager.recordOperation([t,1,0,1],!0),this.cards[t].push(this.cards[1].splice(0,1)[0])):this.cards[0].length>0&&(this.gameManager.recordOperation([t,0,this.cards[0].length-1,1],!0),this.cards[t].push(this.cards[0].splice(-1)[0])));if(this.cards[0].length<=0&&this.cards[1].length<=0){if(this.lock)return!1;this.dragCard=-99,this.dragItem=-99,this.enterItem=-99,this.lock=!0;for(let t=0;t<this.number;t++){let e=t%4;while(this.cards[e+2].length<=t>>2){this.record=[];let e=this.checkUp(t);if(!e||!this.skipCheck&&!L(this.gameManager.history,[e[1],e[0]]))for(let t=6;t<10;t++)if(!(this.cards[t].length<=0||this.cards[t][0]>>2>=12)&&(this.record=[],e=this.checkMove(this.cards[t][0]),e)){if(!this.skipCheck&&!L(this.gameManager.history,[e[1],e[0]])){e=!1;continue}break}if(e){this.skipCheck=!1,this.sign=-99,await this.clickCard(e[0]),await this.wait(),await this.clickCard(e[1]);for(let e=6;e<10;e++)if(this.cards[e].length<=0){let s,i=this.findPos(t);if(this.cards[i][this.cards[i].length-1]!=t){let s=this.cards[i].indexOf(t),n=[e,i,s+1,this.cards[i].length-s-1,t];this.cards[e].push(...this.cards[i].splice(s+1)),this.gameManager.recordOperation(n,!0);continue}for(s=48;s<52;s++){let t=this.findPos(s);if(t<6)continue;let i=this.cards[t].indexOf(s);if(s<=0)continue;let n=[e,t,i,this.cards[t].length-i,s];if(L(this.gameManager.history,n)){this.cards[e].push(...this.cards[t].splice(i)),this.gameManager.recordOperation(n,!0);break}}if(s<52)continue;for(s=6;s<10;s++)if(this.cards[s].length>1){let t=[e,s,this.cards[s].length-1,1];if(!L(this.gameManager.history,t))continue;this.cards[e].push(this.cards[s].splice(-1)[0]),this.gameManager.recordOperation(t,!0);break}}}else this.skipCheck=!0}}this.sign=-99,this.gameManager.setWin(),this.lock=!1}},async clickCard(t){let e=this.cards[t].length;if(0==t){if(this.cards[0].length>0)this.gameManager.recordOperation([1,0,this.turn>3?1:4-this.turn],!0),this.cards[1].unshift(...this.cards[0].splice(this.turn>3?-1:this.turn-4));else{for(let t=0;t<this.gameManager.history.length;t++){let e=this.gameManager.history[t];if(0==e[0]&&1==e[1])this.skipCheck=!0;else if(1!=e[0]||0!=e[1])break}this.gameManager.recordOperation([0,1,this.cards[1].length],!0),this.cards[0].unshift(...this.cards[1].splice(0)),this.turn++}this.sign=-99}else if(1==t)e>0&&(this.sign=this.cards[t][0],this.index=t);else if(t<6)this.sign==t-2+4*e?(this.gameManager.recordOperation([t,this.index,this.cards[this.index].indexOf(this.sign),1],!0),this.cards[t].push(this.cards[this.index].splice(this.cards[this.index].indexOf(this.sign),1)[0]),this.sign=-99):e>0&&(this.sign=this.cards[t][e-1],this.index=t);else{let s,i=this.cards[t][e-1];this.sign>=0&&this.index>=6&&(s=this.cards[this.index].findIndex(t=>t>>2<13&&t%2!=i%2&&(1+(t>>2))%13==i>>2))>=0?(this.gameManager.recordOperation([t,this.index,s,this.cards[this.index].length-s,i],!0),this.cards[t].push(...this.cards[this.index].splice(s)),this.sign=-99):this.sign>=0&&this.index<6&&this.sign>>2<13&&this.sign%2!=i%2&&(1+(this.sign>>2))%13==i>>2?(this.gameManager.recordOperation([t,this.index,this.cards[this.index].indexOf(this.sign),1,i],!0),this.cards[t].push(this.cards[this.index].splice(this.cards[this.index].indexOf(this.sign),1)[0]),this.sign=-99):e>0&&(this.sign=i,this.index=t)}this.sign<0&&await this.addCard()},undo(){if(this.sign=-99,this.step<=0)return;let t=this.gameManager.history.shift(),e=!1;if(0==t[1]){if(1==t[0])return this.cards[0].push(...this.cards[1].splice(0,t[2]));e=!0,this.cards[0].push(this.cards[t[0]].splice(0,1)[0])}else if(1==t[1]){if(0==t[0])return this.cards[1].unshift(...this.cards[0].splice(0)),void this.turn--;if(this.cards[1].unshift(this.cards[t[0]].splice(-1)[0]),e=!0,t[0]<6||this.cards[t[0]].length>0)return}e&&(t=this.gameManager.history.shift()),this.cards[t[1]].splice(t[2],0,...this.cards[t[0]].splice(-t[3]))},start(t){let e=-1;if(t.detail.binding&&t.detail.binding.value&&void 0!==t.detail.binding.value.cardId&&(e=parseInt(t.detail.binding.value.cardId)),e<0&&t.detail.vnode&&t.detail.vnode.componentInstance){const s=t.detail.vnode.componentInstance;void 0!==s.cardId&&(e=parseInt(s.cardId))}if(e<0&&t.detail.el.dataset.cardId&&(e=parseInt(t.detail.el.dataset.cardId)),!this.canOperate||e<0)return!1;let s=this.findPos(e);if(s<0&&e!=this.cards[1][0])return;let i=t.detail.el._moveData;i.offsetLeft=t.detail.el.offsetLeft,i.offsetTop=t.detail.el.offsetTop,this.dragItem=s,this.dragItem<0&&(this.dragItem=1),this.dragCard=e,this.enterItem=-99},async end(t){let e=this.dragItem;if(!this.canOperate)return;if(1==e&&this.dragCard!=this.cards[1][0])return;let s=t.detail.el._moveData,i=s.offsetX+s.offsetLeft,n=s.offsetY+s.offsetTop,r=Math.floor((i+50)/this.cardWidth);r>=0&&r<4&&n>=115&&n<=this.height-75&&(r+=n<=330?2:6,await this.clickCard(e).catch(console.log),this.sign>=0&&r!=e&&r>=0&&await this.clickCard(r).catch(console.log)),this.fresh[e]++,this.enterItem=-99,this.dragItem=-99,this.dragCard=-99},enter(t){console.log("enter",t)},leave(t){console.log("leave",t)},moveEnter(t){console.log("moveEnter",t,this.dragItem)},move(t){if(!this.canOperate)return!1;if(1==this.dragItem&&this.dragCard!=this.cards[1][0])return;let e=t.detail.el._moveData,s=e.offsetX+e.offsetLeft,i=e.offsetY+e.offsetTop,n=Math.floor((s+50)/this.cardWidth);if(n>=0&&n<4&&i>=115&&i<=this.height-75?(n+=i<=330?2:6,this.dragItem!=n&&(this.enterItem=n)):this.enterItem=-99,t.detail.el.style.left=s/16+"rem",t.detail.el.style.top=i/16+"rem",this.dragItem>=6){let t=this.cards[this.dragItem].indexOf(this.dragCard),s=0;for(let i of this.$refs.down){let n=i.$el._cardImageRoot.className.match("drag");!n||++s<=t||(i.$el._cardImageRoot.style.left=(e.offsetX+e.offsetLeft)/16+"rem",i.$el._cardImageRoot.style.top=(e.offsetY+e.offsetTop+30*(s-t-1))/16+"rem")}}},renderTextView(){console.log("\n╔════════════════════════════════════════════════╗"),console.log("║            蜘蛛纸牌 (Spider)                  ║"),console.log("╚════════════════════════════════════════════════╝");const t=this.cards.slice(1).reduce((t,e)=>t+e.length,0),e=this.cards[0].length;console.log(`\n步数: ${this.step} | 牌堆剩余: ${e} 张 | 场上: ${t} 张\n`),console.log("提示: ← 表示选中的牌"),console.log("┌──────────────┬──────────────┬──────────────┬──────────────┐");const s=this.cards[1],i=e>0?`🂠 ${e}张`:"(空)",n=s.slice(0,3).map(t=>{const e=(0,T.zT)(t),s=this.sign===t;return`${e}${s?" ←":""}`});console.log(`│ 牌堆: ${i.padEnd(5)} │ ${(n[0]||"").padEnd(12)} │ ${(n[1]||"").padEnd(12)} │ ${(n[2]||"").padEnd(12)} │`),console.log("├──────────────┼──────────────┼──────────────┼──────────────┤");const r=[];for(let c=2;c<=5;c++){const t=this.cards[c];if(0===t.length)r.push("-:"+this.types[c-2]+"?");else{const e=t[t.length-1],s=(0,T.zT)(e),i=this.sign===e;r.push(`${t.length-1}:${s}${i?" ←":""}`)}}console.log(`│ ${r[0].padEnd(12)} │ ${r[1].padEnd(12)} │ ${r[2].padEnd(12)} │ ${r[3].padEnd(12)} │`),console.log("├──────────────┼──────────────┼──────────────┼──────────────┤");const o=[];for(let c=6;c<=9;c++){const t=this.cards[c];if(0===t.length)o.push("");else{const e=[];for(let s=0;s<t.length;s++){const i=t[s],n=(0,T.zT)(i),r=this.sign===i;e.push(`${s}:${n}${r?" ←":""}`)}o.push(`${e.join("\n")}`)}}const a=Math.max(...o.map(t=>t.split("\n").length)),l=o.map(t=>{const e=t.split("\n");while(e.length<a)e.push("");return e});for(let c=0;c<a;c++){const t=l.map(t=>t[c].padEnd(12));console.log(`│ ${t.join(" │ ")} │`)}return console.log("└──────────────┴──────────────┴──────────────┴──────────────┘"),"渲染完成"},sendCustomButtons(){this.customButtons.push({action:"deal",label:"DEAL",method:"clickCard",args:[0],description:"DEAL FROM THE DECK"})}},watch:{cards:{handler(){this.sendCustomButtons()},deep:!0}},computed:{height(){return 30*Math.max(...this.cards.slice(-4).map(t=>t.length))+480},cardWidth(){return this.$refs.container?this.$refs.container.offsetWidth>>2:500}}};var Re=A.cardGame(Be,500);const Xe=Re;var We=Xe;const Ue=(0,a.A)(We,[["render",$e],["__scopeId","data-v-f91447be"]]);var Ve=Ue;const je={class:"row center"},qe={class:"cardsul center",style:{"padding-left":"0",margin:"0",width:"100%","max-width":"37.5rem","background-color":"#719192",padding:"0.3125rem 0"}},He=["onClick"],Ke={class:"shanshuo abso",style:{width:"100%",height:"100%","background-color":"#ff5722",top:"0",left:"0"}},Je=["src"],Ye={class:"row"},Qe={class:"m-0 scrore"};function Ze(t,e,s,r,o,a){const l=(0,n.g2)("GameLayout");return(0,n.uX)(),(0,n.Wv)(l,(0,n.v6)(t.gameLayoutProps,{"container-style":{width:"100%"},onUndo:t.undo,onGoon:t.goon,onStep:t.stepTwiceFn,onAuto:t.pass}),{"game-content":(0,n.k6)(()=>[(0,n.Lk)("div",je,[(0,n.Lk)("div",null,[(0,n.Lk)("div",qe,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(t.cards1,(e,s)=>((0,n.uX)(),(0,n.CE)("div",{key:s,class:"m-0 center",style:{width:"16%","border-radius":"50%",overflow:"hidden"},onClick:e=>t.canOperate&&t.clickCard(s)},[(0,n.Lk)("div",{class:"center",style:(0,u.Tr)([{width:"100%",position:"relative"},{backgroundColor:e<0?"transparent":t.cards2[e]?e==t.sign?"#FFB800":t.grades[e]==t.grade?"#01AAED":"#5FB878":"#fff"}])},[(0,n.bo)((0,n.Lk)("div",Ke,null,512),[[i.aG,t.validBoxes.indexOf(s)>=0]]),(0,n.Lk)("img",{style:(0,u.Tr)([{transform:t.cards2[e]&&t.grades[e]!=t.grade?"rotate(180deg)":"rotate(0)",opacity:e<0?0:100},{width:"100%"}]),src:t.cards2[e]?"./static/avatar/"+e+".webp":"./static/avatar/logo.webp"},null,12,Je)],4)],8,He))),128))])])]),(0,n.Lk)("div",Ye,[(0,n.Lk)("span",Qe,(0,u.v_)(t.lowCount+" : "+t.highCount),1)])]),_:1},16,["onUndo","onGoon","onStep","onAuto"])}let ts=[[1,0],[1,1],[2,1],[2,2],[3,1],[3,2],[3,3]];const es={name:"GridBattle",data(){return{title:"GridBattle",cards1:[],cards2:[],sign:-1,number:36,grade:-1,modes:[0,1,3,6,10,15,2,5,7,13,18,21,4,8,14,17,24,27,9,12,20,25,26,31,11,19,23,29,30,35,16,22,28,32,34,33],grades:[1,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,1,1,1,1,1,0,1,1,0,1,0,0,1,1,0,0,1,1,1]}},computed:{validBoxes(){return this.getValidBoxes(this.sign)},lowCount(){return this.cards1.filter(t=>0===this.grades[t]).length},highCount(){return this.cards1.filter(t=>1===this.grades[t]).length}},methods:{init(){this.sign=-1,this.grade=-1,this.cards1.splice(0),this.cards2.splice(0);let t=this.cards1;for(let e=0;e<this.number;e++)t.push(e),this.cards2.push(!1);x(t,this.number)},recordMove(t,e,s,i,n){this.gameManager.recordOperation({type:"move",from:t,to:e,card:s,sign:i,signIndex:n,timestamp:Date.now()})},recordFlip(t){this.gameManager.recordOperation({type:"flip",card:t,timestamp:Date.now()})},handleUndo(t){switch(t.type){case"move":this.cards1.splice(t.signIndex,1,t.sign),this.cards1.splice(t.to,1,t.card>=0?t.card:-1);break;case"flip":this.cards2[t.card]=!1;break}},undo(){this.gameManager.undo(),this.gameManager.undo()},async clickCard(t,e){let s=this.cards1[t];if(this.grade<0&&(this.grade=this.grades[s]),s>=0&&!this.cards2[s])return this.cards2[s]=!0,this.recordFlip(s),this.sign=-1,void(e||this.gameManager.step(async()=>{await this.wait(),await this.stepFn()}));let i=this.step%2==0?this.grade:!this.grade;if(this.sign>=0&&this.grades[this.sign]!=i)this.sign=s!=this.sign&&s>=0&&this.grades[s]!=i?s:-1;else{if(this.sign>=0&&this.grades[this.sign]==i){if(s>=0&&this.grades[s]==i)return void(this.sign=this.sign==s?-1:s);if(this.validBoxes.indexOf(t)>=0){let i=this.cards1.indexOf(this.sign);return this.cards1.splice(i,1,-1),this.cards1.splice(t,1,this.sign),this.recordMove(i,t,s,this.sign,i),this.sign=-1,s>=0&&(this.lowCount<=0&&(1==this.grade?this.gameManager.setWin():this.gameManager.setLose()),this.highCount<=0&&(0==this.grade?this.gameManager.setWin():this.gameManager.setLose()),1==this.lowCount&&1==this.highCount&&this.gameManager.setDraw()),void(e||this.gameManager.step(async()=>{await this.wait(),await this.stepFn()}))}}this.sign=s}},async stepTwiceFn(){await this.gameManager.step(async()=>{await this.stepFn(),await this.wait(),await this.stepFn()})},getValidBoxes(t){let e=[],s=this.cards1.indexOf(t);if(t<0||s<0)return e;let i=this.modes.indexOf(t),n=ts[Math.floor(i/6)],r=ts[i%6];return s+6*r[0]<36&&s%6+r[1]<6&&e.push(s+6*r[0]+r[1]),s-6*r[0]>=0&&s%6+r[1]<6&&e.push(s-6*r[0]+r[1]),s+6*r[0]<36&&s%6-r[1]>=0&&e.push(s+6*r[0]-r[1]),s-6*r[0]>=0&&s%6-r[1]>=0&&e.push(s-6*r[0]-r[1]),s+6*n[1]<36&&s%6+n[0]<6&&e.push(s+6*n[1]+n[0]),s-6*n[1]>=0&&s%6+n[0]<6&&e.push(s-6*n[1]+n[0]),s+6*n[1]<36&&s%6-n[0]>=0&&e.push(s+6*n[1]-n[0]),s-6*n[1]>=0&&s%6-n[0]>=0&&e.push(s-6*n[1]-n[0]),e},async stepFn(){let t=[],e=[],s=[],i=this.step%2==0?this.grade:!this.grade,n=this,r=async function(t,e){n.sign=-1,await n.clickCard(t,!0),await n.wait(),await n.clickCard(e,!0)};for(let u=0;u<this.cards1.length;u++){let n=this.cards1[u];if(n<0){t[u]=t[u]||1;continue}if(!this.cards2[n]){t[u]=t[u]||3,e.push(u);continue}if(this.grades[n]==i){t[u]=7,s.push(u);let e=this.getValidBoxes(n);for(let s of e){let e=this.cards1[s];if(!(e<0))if(this.cards2[e]){if(this.grades[e]!=i)return await r(u,s)}else t[s]=5==t[s]||6==t[s]?6:4}continue}t[u]=9;let o=this.getValidBoxes(n);for(let e of o){let s=this.cards1[e];s<0?t[e]=2:this.cards2[s]?this.grades[s]==i&&(t[e]=8):t[e]=4==t[e]||6==t[e]?6:5}}for(let u of s){let e=t[u];if(8==e){let e=this.cards1[u],s=this.getValidBoxes(e);for(let i of s)if(1==t[i])return await r(u,i)}}let o=-1,a=-1;for(let u=0;u<e.length;u++){let s=e[u],i=t[s];if(4==i)return await this.clickCard(s,!0);5==i&&(a=s,e.splice(u,1),u--),6==i&&(o=s)}if(o>=0)return await this.clickCard(o,!0);if(e.length>0){let t=Math.floor(E()*e.length);return await this.clickCard(e[t],!0)}let l=!1,c=[],h=[],d={};for(let u of s){let e=this.cards1[u],s=this.getValidBoxes(e);for(let i of s)1==t[i]&&(d[i]=(d[i]||0)+1)}for(let u of s){let e=this.cards1[u],s=this.getValidBoxes(e);for(let i of s)1==t[i]&&(d[i]>=2?h.push([u,i]):c.push([u,i])),2==t[i]&&(l=[u,i])}if(h.length>0){let t=Math.floor(E()*h.length);return await r(h[t][0],h[t][1])}if(c.length>0){let t=Math.floor(E()*c.length);return await r(c[t][0],c[t][1])}if(a>=0)return await this.clickCard(a,!0);if(l)return await r(l[0],l[1]);throw new Error("unkown error")},renderTextView(){if(console.log("\n╔════════════════════════════════════════════════╗"),console.log("║           国际象棋 (GridBattle)               ║"),console.log("╚════════════════════════════════════════════════╝"),console.log(`\n步数: ${this.step}`),console.log(`高子: ${this.highCount} | 低子: ${this.lowCount}\n`),console.log("\n图例:"),console.log("  ? = 未翻开  - = 空位置  H = 高子  L = 低子  [H/L] = 已选中"),this.sign>=0){const t=Math.floor(this.sign/6),e=this.sign%6;console.log(`\n当前选中: (${t},${e})`);const s=this.validBoxes;if(s&&s.length>0){const t=s.map(t=>{const e=Math.floor(t/6),s=t%6;return`(${e},${s})`}).join(", ");console.log(`可移动到: ${t}`)}}console.log("    0   1   2   3   4   5"),console.log("  ┌───┬───┬───┬───┬───┬───┐");for(let t=0;t<6;t++){let e=`${t} │`;for(let s=0;s<6;s++){const i=6*t+s,n=this.cards1[i];if(this.cards2[n]){const t=this.grades[n],s=1===t?" H ":" L ",r=i===this.sign;e+=r?`[${s.trim()}]`:s}else this.cards1[i]>=0?e+=" ? ":e+=" - ";e+="│"}console.log(e),t<5&&console.log("  ├───┼───┼───┼───┼───┼───┤")}return console.log("  └───┴───┴───┴───┴───┴───┘"),"渲染完成"}}};var ss=A.strategyGame(es,1200),is=ss;const ns=(0,a.A)(is,[["render",Ze],["__scopeId","data-v-f1b2a642"]]);var rs=ns;const os={class:"row"},as={class:"row"},ls={class:"towers-container center",style:{padding:"1rem",margin:"0",width:"100%","max-width":"37.5rem","background-color":"#719192","border-radius":"0.5rem"}},cs=["onClick"],hs={class:"tower-label"},ds={class:"disks-container"},us={class:"row",style:{"margin-top":"1rem"}},gs={style:{"text-align":"center",color:"#dfcdc3","font-size":"1rem"}},fs={key:0},ms={key:1},ps={class:"row"},vs={class:"difficulty-selector"},ws={class:"small"},bs={class:"small"},Cs={class:"small"};function ys(t,e,s,r,o,a){const l=(0,n.g2)("GameLayout");return(0,n.uX)(),(0,n.Wv)(l,(0,n.v6)(t.gameLayoutProps,{onUndo:t.undo,onGoon:t.goon,onStep:t.stepFn,onAuto:t.pass}),{"game-content":(0,n.k6)(()=>[(0,n.Lk)("div",os,[(0,n.Lk)("span",null,"步数: "+(0,u.v_)(t.step),1),e[2]||(e[2]=(0,n.Lk)("br",null,null,-1)),(0,n.Lk)("span",null,"移动次数: "+(0,u.v_)(t.moveCount),1),e[3]||(e[3]=(0,n.Lk)("br",null,null,-1)),(0,n.Lk)("span",null,"最优解: "+(0,u.v_)(t.minMoves)+" 步",1)]),(0,n.Lk)("div",as,[(0,n.Lk)("div",null,[(0,n.Lk)("div",ls,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(t.towers,(s,i)=>((0,n.uX)(),(0,n.CE)("div",{key:i,class:(0,u.C4)(["tower",{selected:t.selectedTower===i}]),onClick:e=>t.canOperate&&t.clickTower(i)},[(0,n.Lk)("div",hs,(0,u.v_)(t.getTowerName(i)),1),e[4]||(e[4]=(0,n.Lk)("div",{class:"tower-base"},null,-1)),e[5]||(e[5]=(0,n.Lk)("div",{class:"tower-pole"},null,-1)),(0,n.Lk)("div",ds,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(s,e=>((0,n.uX)(),(0,n.CE)("div",{key:e,class:(0,u.C4)(["disk",t.getDiskClass(e)]),style:(0,u.Tr)(t.getDiskStyle(e))},(0,u.v_)(e),7))),128))])],10,cs))),128))])])]),(0,n.Lk)("div",us,[(0,n.Lk)("div",gs,[t.selectedTower>=0?((0,n.uX)(),(0,n.CE)("span",fs," 已选中: "+(0,u.v_)(t.getTowerName(t.selectedTower))+" - 点击目标柱子移动圆盘 ",1)):((0,n.uX)(),(0,n.CE)("span",ms,"点击柱子选择圆盘"))])]),(0,n.Lk)("div",ps,[(0,n.Lk)("div",vs,[e[7]||(e[7]=(0,n.Lk)("label",null,"圆盘数量: ",-1)),(0,n.bo)((0,n.Lk)("select",{"onUpdate:modelValue":e[0]||(e[0]=e=>t.diskCount=e),onChange:e[1]||(e[1]=(...e)=>t.resetGame&&t.resetGame(...e)),style:{padding:"0.5rem 1rem",border:"0.125rem solid #6c757d","border-radius":"0.375rem",background:"white","font-size":"1rem","font-weight":"bold",color:"#495057",cursor:"pointer"}},[...e[6]||(e[6]=[(0,n.Lk)("option",{value:"3"},"3个圆盘",-1),(0,n.Lk)("option",{value:"4"},"4个圆盘",-1),(0,n.Lk)("option",{value:"5"},"5个圆盘",-1),(0,n.Lk)("option",{value:"6"},"6个圆盘",-1),(0,n.Lk)("option",{value:"7"},"7个圆盘",-1),(0,n.Lk)("option",{value:"8"},"8个圆盘",-1)])],544),[[i.u1,t.diskCount]])])])]),"win-content":(0,n.k6)(()=>[(0,n.Lk)("h1",ws,"步数: "+(0,u.v_)(t.step),1),(0,n.Lk)("h1",bs,"移动次数: "+(0,u.v_)(t.moveCount),1),(0,n.Lk)("h1",Cs,"最优解: "+(0,u.v_)(t.minMoves)+" 步",1)]),_:1},16,["onUndo","onGoon","onStep","onAuto"])}const ks={name:"TowerHanoi",data(){return{title:"Tower of Hanoi",towers:[[],[],[]],selectedTower:-1,diskCount:4,moveCount:0,minMoves:0}},methods:{init(){this.resetGame()},resetGame(){this.towers=[[],[],[]],this.selectedTower=-1,this.moveCount=0,this.minMoves=Math.pow(2,this.diskCount)-1;for(let t=this.diskCount;t>=1;t--)this.towers[0].push(t);this.gameManager.recordOperation()},clickTower(t){-1!==this.selectedTower?this.selectedTower!==t?this.moveDisk(this.selectedTower,t):this.selectedTower=-1:this.towers[t].length>0&&(this.selectedTower=t,this.gameManager.recordOperation())},moveDisk(t,e){const s=this.towers[t],i=this.towers[e];if(0===s.length)return void(this.selectedTower=-1);const n=s[s.length-1];0===i.length||i[i.length-1]>n?(s.pop(),i.push(n),this.moveCount++,this.selectedTower=-1,this.gameManager.recordOperation({type:"move",from:t,to:e,disk:n,moveCount:this.moveCount}),this.checkGameCompletion()):this.selectedTower=-1},checkGameCompletion(){this.towers[2].length!==this.diskCount?this.hasValidMoves()||this.gameManager.setLose():this.gameManager.setWin()},hasValidMoves(){return!0},async stepFn(){await this.gameManager.step(async()=>{await this.solveHanoi(this.diskCount,0,2,1)})},async solveHanoi(t,e,s,i){1===t?(this.moveDisk(e,s),await this.wait()):(await this.solveHanoi(t-1,e,i,s),this.moveDisk(e,s),await this.wait(),await this.solveHanoi(t-1,i,s,e))},handleUndo(t){if("move"===t.type){const e=this.towers[t.to].pop();this.towers[t.from].push(e),this.moveCount--,this.selectedTower=-1}},getTowerName(t){const e=["A塔","B塔","C塔"];return e[t]||"未知塔"},getDiskClass(t){return`disk-size-${t}`},getDiskStyle(t){const e=40,s=20,i=e+(t-1)*s;return{width:`${i}px`,backgroundColor:this.getDiskColor(t)}},getDiskColor(t){const e=["linear-gradient(45deg, #ff6b6b, #ee5a52)","linear-gradient(45deg, #4ecdc4, #44a08d)","linear-gradient(45deg, #45b7d1, #3498db)","linear-gradient(45deg, #f9ca24, #f0932b)","linear-gradient(45deg, #6c5ce7, #5f3dc4)","linear-gradient(45deg, #fd79a8, #e84393)","linear-gradient(45deg, #00b894, #00a085)","linear-gradient(45deg, #a29bfe, #6c5ce7)"];return e[t-1]||e[0]},renderTextView(){console.log("\n╔════════════════════════════════════════════════╗"),console.log("║            汉诺塔 (Tower of Hanoi)             ║"),console.log("╚════════════════════════════════════════════════╝"),console.log(`\n步数: ${this.step} | 移动次数: ${this.moveCount} | 最优解: ${this.minMoves} 步\n`);const t=["A塔","B塔","C塔"],e=this.diskCount;for(let s=e-1;s>=0;s--){let t="";for(let i=0;i<3;i++){const n=this.towers[i],r=s-(e-n.length);if(r>=0&&r<n.length){const e=n[r],s="█".repeat(2*e+1);t+=`  ${s.padStart(this.diskCount+1," ").padEnd(2*this.diskCount+1," ")}  `}else t+=`  ${"|".padStart(this.diskCount+1," ").padEnd(2*this.diskCount+1," ")}  `}console.log(t)}return console.log("  "+"═".repeat(2*this.diskCount+1)+"    "+"═".repeat(2*this.diskCount+1)+"    "+"═".repeat(2*this.diskCount+1)+"  "),console.log(`  ${t[0].padStart(this.diskCount+1," ").padEnd(2*this.diskCount+1," ")}  ${t[1].padStart(this.diskCount+1," ").padEnd(2*this.diskCount+1," ")}  ${t[2].padStart(this.diskCount+1," ").padEnd(2*this.diskCount+1," ")}  `),this.selectedTower>=0&&console.log(`\n已选中: ${t[this.selectedTower]}`),"渲染完成"},getAvailableActions(){const t=[],e=["A塔","B塔","C塔"];t.push({id:1,label:"重新开始 (RESTART)",method:"goon",args:[]});for(let s=0;s<3;s++){const i=this.towers[s].length>0;if(-1===this.selectedTower)i&&t.push({id:t.length+1,label:`选择${e[s]}`,method:"clickTower",args:[s]});else{if(s!==this.selectedTower){const i=0===this.towers[s].length||this.towers[this.selectedTower][this.towers[this.selectedTower].length-1]<this.towers[s][this.towers[s].length-1];i&&t.push({id:t.length+1,label:`移动到${e[s]}`,method:"clickTower",args:[s]})}t.push({id:t.length+1,label:"取消选择",method:"clickTower",args:[this.selectedTower]})}}return t}},computed:{completionPercentage(){const t=this.towers[2].length;return Math.round(t/this.diskCount*100)},efficiencyScore(){if(0===this.moveCount)return 100;const t=this.minMoves,e=this.moveCount;return Math.round(t/e*100)}},watch:{moveCount(t,e){t>e&&console.log(`移动次数: ${t}`)}}};var Ms=A.puzzleGame(ks,800),xs=A.puzzleGame(Ms,800);const Ss=(0,a.A)(xs,[["render",ys],["__scopeId","data-v-b6aabbc0"]]);var Ls=Ss;const _s={class:"row"},Is={class:"row"},Es={class:"cardsul center",style:{"padding-left":"0",margin:"0",width:"100%","max-width":"37.5rem","background-color":"#719192",padding:"0.3125rem 0"}},Ts=["onClick"],As={class:"center",style:{width:"100%",height:"100%",position:"relative","font-size":"1.125rem","font-weight":"bold",color:"white"}},$s={key:0},zs={key:1},Os={key:2},Ps={key:3},Gs={class:"row",style:{"margin-top":"1rem"}},Fs={style:{"text-align":"center",color:"#dfcdc3","font-size":"1rem"}},Ns={key:0},Ds={key:1},Bs={key:2},Rs={class:"small"},Xs={class:"small"};function Ws(t,e,s,i,r,o){const a=(0,n.g2)("GameLayout");return(0,n.uX)(),(0,n.Wv)(a,(0,n.v6)(t.gameLayoutProps,{onUndo:t.undo,onGoon:t.goon,onStep:t.stepFn,onAuto:t.pass}),{"game-content":(0,n.k6)(()=>[(0,n.Lk)("div",_s,[(0,n.Lk)("span",null,"步数: "+(0,u.v_)(t.step),1),e[0]||(e[0]=(0,n.Lk)("br",null,null,-1)),(0,n.Lk)("span",null,"当前数字数量: "+(0,u.v_)(t.currentNumberCount),1)]),(0,n.Lk)("div",Is,[(0,n.Lk)("div",null,[(0,n.Lk)("div",Es,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(t.grid,(e,s)=>((0,n.uX)(),(0,n.CE)("div",{key:s,class:"m-0 center",style:(0,u.Tr)([{width:"16%",height:"3.125rem","border-radius":"0.3125rem",overflow:"hidden",margin:"0.125rem",cursor:"pointer"},{backgroundColor:0===e?"#4CAF50":99===e?"#FF5722":-1===e?"#E0E0E0":"#5FB878",border:t.targetPath.includes(s)?"2px solid #FFD700":"1px solid #333"}]),onClick:e=>t.canOperate&&t.clickNumber(s)},[(0,n.Lk)("div",As,[0===e?((0,n.uX)(),(0,n.CE)("span",$s,"起")):99===e?((0,n.uX)(),(0,n.CE)("span",zs,"终")):-1===e?((0,n.uX)(),(0,n.CE)("span",Os)):((0,n.uX)(),(0,n.CE)("span",Ps,(0,u.v_)(e),1))])],12,Ts))),128))])])]),(0,n.Lk)("div",Gs,[(0,n.Lk)("div",Fs,[t.pathFound?((0,n.uX)(),(0,n.CE)("span",Ns,"✓ 找到有效路径")):((0,n.uX)(),(0,n.CE)("span",Ds,"✗ 未找到路径")),e[1]||(e[1]=(0,n.Lk)("br",null,null,-1)),t.emptyPos>=0?((0,n.uX)(),(0,n.CE)("span",Bs,"空位位置: "+(0,u.v_)(t.emptyPos+1),1)):(0,n.Q3)("",!0)])])]),"win-content":(0,n.k6)(()=>[(0,n.Lk)("h1",Rs,"步数: "+(0,u.v_)(t.step),1),(0,n.Lk)("h1",Xs,"找到路径: "+(0,u.v_)(t.targetPath.length)+" 步",1)]),_:1},16,["onUndo","onGoon","onStep","onAuto"])}s(7642),s(8004),s(3853),s(5876),s(2475),s(5024),s(1698);const Us={name:"NumberMaze",data(){return{title:"Number Maze",grid:[],gridSize:6,numbers:[],emptyPos:-1,targetPath:[],pathFound:!1,number:20}},methods:{init(){this.grid=Array(this.gridSize*this.gridSize).fill(-1),this.numbers=[],this.emptyPos=-1,this.pathFound=!1,this.targetPath=[];for(let e=0;e<this.number;e++)this.numbers.push(e+1);x(this.numbers,this.number);const t=[];for(let e=0;e<this.gridSize*this.gridSize;e++)0!==e&&e!==this.gridSize*this.gridSize-1&&t.push(e);x(t,t.length);for(let e=0;e<Math.min(this.number,t.length);e++)this.grid[t[e]]=this.numbers[e];t.length>this.number&&(this.emptyPos=t[this.number],this.grid[this.emptyPos]=-1),this.grid[0]=0,this.grid[this.gridSize*this.gridSize-1]=99,this.autoCalc()},getNeighbors(t){const e=[],s=Math.floor(t/this.gridSize),i=t%this.gridSize;return s>0&&e.push(t-this.gridSize),s<this.gridSize-1&&e.push(t+this.gridSize),i>0&&e.push(t-1),i<this.gridSize-1&&e.push(t+1),e},async moveNumber(t,e){if(console.log("moveNumber called with fromPos:",t,"toPos:",e),-1!==this.grid[e])return console.log("moveNumber returning false - target not empty"),!1;const s=this.getNeighbors(t);if(console.log("neighbors:",s),console.log("toPos in neighbors:",s.includes(e)),!s.includes(e))return console.log("moveNumber returning false - not adjacent"),!1;const i=this.grid[t];return console.log("numberValue:",i),this.grid[e]=i,this.grid[t]=-1,this.emptyPos=t,console.log("moveNumber calling recordOperation"),this.recordOperation("move",{from:t,to:e,number:i}),console.log("moveNumber returning true"),!0},clickNumber(t){if(console.log("clickNumber called with pos:",t),console.log("grid[pos]:",this.grid[t]),this.grid[t]<=0||99===this.grid[t])return void console.log("clickNumber returning early - invalid position");console.log("clickNumber proceeding with move");const e=this.getNeighbors(t);let s=!1;for(const i of e)if(-1===this.grid[i]&&this.moveNumber(t,i)){console.log("moveNumber succeeded to neighbor:",i),s=!0;break}s?this.autoCalc():console.log("moveNumber failed - no valid adjacent empty position")},findValidPath(){const t=0,e=this.gridSize*this.gridSize-1,s=[{pos:t,path:[t],value:0}],i=new Set([t]);while(s.length>0){const t=s.shift();if(t.pos===e)return t.path;const n=this.getNeighbors(t.pos);for(const e of n){if(i.has(e))continue;const n=this.grid[e];-1!==n&&(n>t.value&&99!==n?(i.add(e),s.push({pos:e,path:[...t.path,e],value:n})):99===n&&t.value>0&&(i.add(e),s.push({pos:e,path:[...t.path,e],value:t.value})))}}return null},autoCalc(){const t=this.findValidPath();this.pathFound=null!==t,this.targetPath=t||[],this.pathFound&&this.gameManager.setWin()},getNextAutoMove(){const t=[];for(let e=0;e<this.grid.length;e++)this.grid[e]>0&&this.grid[e]<99&&t.push({pos:e,value:this.grid[e]});t.sort((t,e)=>t.value-e.value);for(const e of t){const t=this.getNeighbors(e.pos);for(const s of t)if(-1===this.grid[s]){const t=[...this.grid];if(t[s]=e.value,t[e.pos]=-1,this.hasPotentialPath(t,s))return{from:e.pos,to:s}}}return null},hasPotentialPath(t,e){const s=new Set,i=[e],n=this.gridSize*this.gridSize-1;while(i.length>0){const e=i.shift();if(e===n)return!0;const r=this.getNeighbors(e);for(const n of r){if(s.has(n))continue;const e=t[n];-1!==e&&99!==e||(s.add(n),i.push(n))}}return!1},async stepFn(){await this.gameManager.step(async()=>{const t=this.getNextAutoMove();t?(await this.moveNumber(t.from,t.to),await this.wait()):this.gameManager.stopAuto()})},recordOperation(t,e){console.log("recordOperation called:",t,e),console.log("gameManager exists:",!!this.gameManager),console.log("gameManager.recordOperation exists:",!!this.gameManager?.recordOperation),this.gameManager&&this.gameManager.recordOperation?(this.gameManager.recordOperation({type:t,...e,timestamp:Date.now()}),console.log("Operation recorded successfully")):console.error("Cannot record operation - gameManager not available")},handleUndo(t){switch(console.log("=== HANDLEUNDO CALLED ==="),console.log("handleUndo called with operation:",t),console.log("Before undo - grid[5]:",this.grid[5],"grid[11]:",this.grid[11]),t.type){case"move":this.grid[t.from]=t.number,this.grid[t.to]=-1,this.emptyPos=t.to,console.log("Undo completed - moved",t.number,"from",t.to,"to",t.from),console.log("this.grid after undo:",this.grid[t.from],this.grid[t.to]);break}},renderTextView(){console.log("\n╔════════════════════════════════════════════════╗"),console.log("║              数字迷宫 (Number Maze)           ║"),console.log("╚════════════════════════════════════════════════╝"),console.log(`\n步数: ${this.step}\n`);for(let t=0;t<this.gridSize;t++){let e="  ";for(let s=0;s<this.gridSize;s++){const i=t*this.gridSize+s,n=this.grid[i];let r;r=0===n?"[起]":99===n?"[终]":-1===n?"[  ]":`[${n.toString().padStart(2,"0")}]`,this.targetPath.includes(i)&&(r=r.replace("[","*[").replace("]","]*")),e+=r+" "}console.log(e)}if(console.log(`\n空位位置: ${this.emptyPos+1}`),console.log("路径状态: "+(this.pathFound?"✓ 找到有效路径":"✗ 未找到路径")),this.pathFound&&this.targetPath.length>0){const t=this.targetPath.map(t=>{const e=this.grid[t];return 0===e?"起":99===e?"终":e});console.log(`路径: ${t.join(" → ")}`)}return"渲染完成"}},computed:{currentNumberCount(){let t=0;for(let e=0;e<this.grid.length;e++)this.grid[e]>0&&this.grid[e]<99&&t++;return t},gridState(){return this.grid.join(",")}}};var Vs=A.puzzleGame(Us,800);const js=Vs;var qs=js;const Hs=(0,a.A)(qs,[["render",Ws],["__scopeId","data-v-120f0fb9"]]);var Ks=Hs;const Js={class:"row"},Ys={class:"row"},Qs={class:"cardsul flex-col center",style:{"padding-left":"0",margin:"0",width:"100%","max-width":"31.25rem"}},Zs=["onClick"],ti={key:0,class:"number-tile"},ei={class:"small"},si={class:"small"};function ii(t,e,s,i,r,o){const a=(0,n.g2)("GameLayout");return(0,n.uX)(),(0,n.Wv)(a,(0,n.v6)(t.gameLayoutProps,{onGoon:t.goon,onStep:t.stepFn,onAuto:t.pass}),{"game-content":(0,n.k6)(()=>[(0,n.Lk)("div",Js,[(0,n.Lk)("span",null,"MOVES: "+(0,u.v_)(t.moves),1),e[0]||(e[0]=(0,n.Lk)("br",null,null,-1)),(0,n.Lk)("span",null,"STEP: "+(0,u.v_)(t.step),1)]),(0,n.Lk)("div",Ys,[(0,n.Lk)("div",null,[(0,n.Lk)("ul",Qs,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(t.grid,(e,s)=>((0,n.uX)(),(0,n.CE)("li",{key:s,class:"flex-row center",style:{padding:"0",margin:"0","list-style":"none"}},[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(e,(e,i)=>((0,n.uX)(),(0,n.CE)("div",{key:i,class:(0,u.C4)(["grid-cell",{"empty-cell":0===e}]),onClick:e=>t.canOperate&&t.clickCard(s,i)},[0!==e?((0,n.uX)(),(0,n.CE)("span",ti,(0,u.v_)(e),1)):(0,n.Q3)("",!0)],10,Zs))),128))]))),128))])])])]),"win-content":(0,n.k6)(()=>[(0,n.Lk)("h1",ei,"MOVES: "+(0,u.v_)(t.moves),1),(0,n.Lk)("h1",si,"STEP: "+(0,u.v_)(t.step),1)]),_:1},16,["onGoon","onStep","onAuto"])}const ni=[[1,0,0],[2,0,1],[4,3,3],[3,0,3],[4,2,3],[4,1,3],[3,0,2],[4,0,3],[5,1,0],[6,1,1],[7,1,3],[8,2,3],[7,1,2],[8,1,3],[9,3,0],[13,3,1],[9,2,0],[13,3,0],[10,3,1],[14,3,2],[10,2,1],[14,3,1]],ri={name:"NumberPuzzle",data(){return{title:"数字拼图",grid:[],emptyPos:{row:3,col:3},moves:0}},methods:{init(){this.grid=[];let t=1;for(let e=0;e<4;e++){this.grid[e]=[];for(let s=0;s<4;s++)this.grid[e][s]=3===e&&3===s?0:t++}this.emptyPos={row:3,col:3},this.moves=0,this.shuffleGrid()},shuffleGrid(){const t=100;for(let e=0;e<t;e++){const t=this.getValidMoves();if(t.length>0){const e=t[Math.floor(Math.random()*t.length)];this.executeMove(e.row,e.col,!1)}}},getValidMoves(t){const e=[],{row:s,col:i}=this.emptyPos;let n=[{row:s-1,col:i},{row:s+1,col:i},{row:s,col:i-1},{row:s,col:i+1}];void 0!==t&&(n=n.filter((e,s)=>s===t));for(const r of n)r.row>=0&&r.row<4&&r.col>=0&&r.col<4&&e.push(r);return e},executeMove(t,e,s=!0){if(!this.isAdjacent(t,e,this.emptyPos.row,this.emptyPos.col))return!1;const i=this.grid[t][e];this.grid[t][e]=0,this.grid[this.emptyPos.row][this.emptyPos.col]=i;const n={...this.emptyPos};return this.emptyPos={row:t,col:e},s&&(this.moves++,this.gameManager.recordOperation({type:"move",from:{row:t,col:e},to:n,number:i,hash:JSON.stringify(this.grid)})),!0},isAdjacent(t,e,s,i){const n=Math.abs(t-s),r=Math.abs(e-i);return 1===n&&0===r||0===n&&1===r},clickCard(t,e){if(!this.gameManager.hitflag)return;if(void 0===t)return;let s;if(void 0===e){const i=this.getValidMoves(t);if(0===i.length)return;s=i[0].row,e=i[0].col}else s=t;0!==this.grid[s][e]&&this.executeMove(s,e)&&this.done()&&this.gameManager.setWin()},isFinalSixCells(){const t=[{row:2,col:1},{row:2,col:2},{row:2,col:3},{row:3,col:1},{row:3,col:2},{row:3,col:3}],e=[10,11,12,0,14,15],s=[];for(const i of t){const t=this.grid[i.row][i.col];s.push(t)}return s.every(t=>e.includes(t))&&6===s.length},canReachTargetInSteps(t,e,s,i=2){const n=this.findNumberPosition(t);if(!n)return!1;if(n.row===e&&n.col===s)return!0;if(i<=0)return!1;const r=this.grid.map(t=>[...t]),o={...this.emptyPos},a=this.getValidMoves();for(const l of a){const n=r[l.row][l.col];r[l.row][l.col]=0,r[o.row][o.col]=n;const a=this.findNumberPositionInGrid(t,r);if(a&&a.row===e&&a.col===s)return!0;if(i>1){const n={...l},o=this.canReachTargetInStepsWithGrid(t,e,s,i-1,r,n);if(o)return!0}r[l.row][l.col]=n,r[o.row][o.col]=0}return!1},findNumberPositionInGrid(t,e){for(let s=0;s<4;s++)for(let i=0;i<4;i++)if(e[s][i]===t)return{row:s,col:i};return null},canReachTargetInStepsWithGrid(t,e,s,i,n,r){if(i<=0)return!1;const o=this.findNumberPositionInGrid(t,n);if(!o)return!1;if(o.row===e&&o.col===s)return!0;const a=[],l=[{row:r.row-1,col:r.col},{row:r.row+1,col:r.col},{row:r.row,col:r.col-1},{row:r.row,col:r.col+1}];for(const c of l)c.row>=0&&c.row<4&&c.col>=0&&c.col<4&&a.push(c);for(const c of a){const o=n[c.row][c.col],a=n.map(t=>[...t]),l={...r};a[c.row][c.col]=0,a[l.row][l.col]=o;const h=this.findNumberPositionInGrid(t,a);if(h&&h.row===e&&h.col===s)return!0;if(i>1){const n={...c},r=this.canReachTargetInStepsWithGrid(t,e,s,i-1,a,n);if(r)return!0}}return!1},checkTwoStepLookahead(t){const e=this.grid.map(t=>[...t]),s={...this.emptyPos},i=e[t.row][t.col];e[t.row][t.col]=0,e[s.row][s.col]=i;const n={...t},r={row:2,col:1},o={row:3,col:1},a=this.findNumberPositionInGrid(10,e),l=this.findNumberPositionInGrid(14,e),c=a&&a.row===r.row&&a.col===r.col,h=l&&l.row===o.row&&l.col===o.col;if(c&&h)return!0;let d=null,u=!1;if(c&&(d=10,u=!0),h&&null===d&&(d=14,u=!0),!u)return!1;const g=10===d?14:10,f=14===g?o:r,m=this.canReachTargetInStepsWithGrid(g,f.row,f.col,1,e,n);return m},checkSpecialTargetMoves(){const t={row:2,col:1},e={row:3,col:1},s=this.findNumberPosition(10),i=this.findNumberPosition(14);if(!s||!i)return null;const n=this.getValidMoves(),r=n.find(n=>{if(i.row===n.row&&i.col===n.col){const i=this.grid.map(t=>[...t]),r={...this.emptyPos};i[n.row][n.col]=0,i[r.row][r.col]=14;const o=this.findNumberPositionInGrid(14,i);return s.row===e.row&&s.col===e.col?o&&o.row===e.row&&o.col===e.col+1:s.col===t.col+2&&o&&o.row===t.row&&o.col===t.col}return!1});if(r)return r;const o=n.find(n=>{if(s.row===n.row&&s.col===n.col){const s=this.grid.map(t=>[...t]),r={...this.emptyPos};s[n.row][n.col]=0,s[r.row][r.col]=10;const o=this.findNumberPositionInGrid(10,s);return i.row===t.row&&i.col===t.col?o&&o.row===t.row&&o.col===t.col+1:i.col===e.col+2&&o&&o.row===e.row&&o.col===e.col}return!1});return o},randomMoveInFinalSixCells(){const t=[{row:2,col:1},{row:2,col:2},{row:2,col:3},{row:3,col:1},{row:3,col:2},{row:3,col:3}],e=this.getValidMoves(),s=e.filter(e=>t.some(t=>t.row===e.row&&t.col===e.col));let i=[];try{i=s.filter(t=>this.checkTwoStepLookahead(t))}catch(r){console.warn("两步前瞻分析出错，使用随机移动:",r),i=[]}if(1===i.length)return void this.clickCard(i[0].row,i[0].col);if(i.length>1){const t=this.findDirectCorrectMove(s);if(t)return void this.clickCard(t.row,t.col)}if(s.length>0){const t=this.checkSpecialTargetMoves();if(t)return void this.clickCard(t.row,t.col);const e=s[Math.floor(Math.random()*s.length)];return void this.clickCard(e.row,e.col)}const n=e[Math.floor(Math.random()*e.length)];this.clickCard(n.row,n.col)},stepFn(){const t=this.findCurrentTarget(ni);if(!t){if(this.isFinalSixCells())this.randomMoveInFinalSixCells();else{const t=this.getValidMoves();if(t.length>0){const e=t[Math.floor(Math.random()*t.length)];this.clickCard(e.row,e.col)}}return}const[e,s,i]=t,n=this.calculateNextMove(e,s,i);if(n){const t=this.grid.map(t=>[...t]),e={...this.emptyPos},s=t[n.row][n.col];if(t[n.row][n.col]=0,t[e.row][e.col]=s,!this.gameManager.history.find(e=>e.hash===JSON.stringify(t)))return void this.clickCard(n.row,n.col)}this.makeSafeRandomMove()},findCurrentTarget(t){for(let e=0;e<t.length;e++){const[s,i,n]=t[e];if(this.grid[i][n]!==s){const r=this.findNumberPosition(s);if(r){let i=!1;const n=t.slice(e+1).filter(t=>t[0]===s);for(const o of n){const[n,a,l]=o;if(r.row===a&&r.col===l){let r=!0;for(let i=t.findIndex(t=>t[0]===n&&t[1]===a&&t[2]===l);i>e;i--){const[e,n,o]=t[i];if(e===s)continue;const a=e-1,l=s-1,c=this.grid[Math.floor(l/4)][l%4],h=this.grid[Math.floor(a/4)][a%4],d=this.grid[n][o];if(c===s&&h===e||d===e)break;r=!1;break}if(r){i=!0;break}}}if(i)continue}return[s,i,n]}}return null},findNumberPosition(t){for(let e=0;e<4;e++)for(let s=0;s<4;s++)if(this.grid[e][s]===t)return{row:e,col:s};return null},calculateNextMove(t,e,s){const i=this.findNumberPosition(t);if(!i)return null;if(i.row===e&&i.col===s)return null;const n=this.findShortestPath(i,{row:e,col:s},t);if(!n||0===n.length)return null;const r=n[0],o=r;if(this.emptyPos.row===o.row&&this.emptyPos.col===o.col)return i;const a=this.findShortestPath(this.emptyPos,o,t);return a&&0!==a.length?a[0]:null},findShortestPath(t,e,s=null){if(t.row===e.row&&t.col===e.col)return[];const i=[{pos:t,path:[]}],n=new Set;n.add(`${t.row},${t.col}`);while(i.length>0){const{pos:t,path:r}=i.shift(),o=[{row:t.row-1,col:t.col},{row:t.row+1,col:t.col},{row:t.row,col:t.col-1},{row:t.row,col:t.col+1}];for(const a of o){if(a.row<0||a.row>=4||a.col<0||a.col>=4)continue;const t=`${a.row},${a.col}`;if(n.has(t))continue;if(a.row===e.row&&a.col===e.col)return[...r,a];const o=this.grid[a.row][a.col];0!==o&&this.isNumberCompleted(o,a.row,a.col)||(null!==s&&o===s||(n.add(t),i.push({pos:a,path:[...r,a]})))}}return null},makeSafeRandomMove(){const t=this.getContinuousCompletedNumbers(),e=this.getValidMoves(),s=e.filter(e=>{const s=this.grid[e.row][e.col];return s>=t});if(s.length>0){const t=s[Math.floor(Math.random()*s.length)];return void this.clickCard(t.row,t.col)}if(e.length>0){const t=e[Math.floor(Math.random()*e.length)];this.clickCard(t.row,t.col)}},getContinuousCompletedNumbers(){let t=1;while(t<=15){const e=t-1;if(this.grid[Math.floor(e/4)][e%4]!==t)break;t++}return t},isNumberCompleted(t,e,s){const i=ni.findIndex(i=>i[0]===t&&i[1]===e&&i[2]===s);if(-1===i)return!1;const n=ni.filter((t,e)=>{if(e>i)return!1;let s=!1;for(let n=i;n>=e+1;n--){const e=ni[n];if(e[0]===t[0]){s=!0;break}}return!s});for(let r=0;r<n.length;r++){const[t,e,s]=n[r];if(this.grid[e][s]!==t)return!1}return!0},findWinningMove(t){for(const e of t)if(this.willCompleteGame(e))return e;return null},findDirectCorrectMove(t){for(const e of t){const t=this.grid[e.row][e.col],s=Math.floor((t-1)/4),i=(t-1)%4;if(this.emptyPos.row===s&&this.emptyPos.col===i)return e}return null},willCompleteGame(t){const e=this.grid.map(t=>[...t]),s={...this.emptyPos},i=e[t.row][t.col];return e[t.row][t.col]=0,e[s.row][s.col]=i,this.isGridComplete(e)},isGridComplete(t){let e=1;for(let s=0;s<4;s++)for(let i=0;i<4;i++){if(3===s&&3===i)return 0===t[s][i];if(t[s][i]!==e)return!1;e++}return!0},done(){let t=1;for(let e=0;e<4;e++)for(let s=0;s<4;s++){if(3===e&&3===s)return 0===this.grid[e][s];if(this.grid[e][s]!==t)return!1;t++}return!0},handleUndo(t){if(t&&"move"===t.type){const{from:e,to:s,number:i}=t;this.grid[s.row][s.col]=0,this.grid[e.row][e.col]=i,this.emptyPos={...s},this.moves--}},undo(){this.gameManager.undo()},recordMove(t){this.gameManager.recordOperation(t)},renderTextView(){console.log("\n╔════════════════════════════════════════════════╗"),console.log("║              数字拼图游戏                    ║"),console.log("╚════════════════════════════════════════════════╝"),console.log(`\n步数: ${this.step} | 移动次数: ${this.moves}\n`),console.log("┌────┬────┬────┬────┐");for(let t=0;t<4;t++){let e="│";for(let s=0;s<4;s++){const i=this.grid[t][s];e+=0===i?"    │":i.toString().padStart(4," ")+"│"}console.log(e),t<3&&console.log("├────┼────┼────┼────┤")}return console.log("└────┴────┴────┴────┘"),this.done()&&console.log("\n🎉 恭喜！拼图完成！"),"渲染完成"},sendCustomButtons(){this.customButtons.push({action:"clickCard",label:"MOVE",method:"clickCard",args:[],description:"MOVE TO ONE DIRECTION"})}},created(){this.sendCustomButtons()}};var oi=A.puzzleGame(ri,300);const ai=oi;var li=ai;const ci=(0,a.A)(li,[["render",ii],["__scopeId","data-v-4cf5149e"]]);var hi=ci;const di={class:"row center"},ui={class:"game-container"},gi={class:"score-display"},fi={class:"scrore"},mi={class:"grid-container"},pi=["onClick"],vi={key:0,class:"cell-number"},wi={class:"game-status"},bi={key:0,class:"status-text"},Ci={key:1,class:"status-text win-text"},yi={key:2,class:"status-text lose-text"},ki={key:0,class:"selected-sequence"},Mi={class:"sequence-display"},xi={class:"sequence-controls"},Si=["disabled"];function Li(t,e,s,i,r,o){const a=(0,n.g2)("GameLayout");return(0,n.uX)(),(0,n.Wv)(a,(0,n.v6)(t.gameLayoutProps,{"win-title":"🎉 恭喜！","win-subtitle":`你成功清空了所有数字！最终得分：${t.score}`,"lose-title":"😔 游戏结束","lose-subtitle":`没有可用的序列了！最终得分：${t.score}`,onUndo:t.undo,onGoon:t.goon,onStep:t.stepFn,onAuto:t.pass}),{"game-content":(0,n.k6)(()=>[(0,n.Lk)("div",di,[(0,n.Lk)("div",ui,[(0,n.Lk)("div",gi,[(0,n.Lk)("span",fi,"得分: "+(0,u.v_)(t.score),1)]),(0,n.Lk)("div",mi,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(t.grid,(e,s)=>((0,n.uX)(),(0,n.CE)("div",{key:s,class:"grid-row"},[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(e,(e,i)=>((0,n.uX)(),(0,n.CE)("div",{key:i,class:(0,u.C4)(["grid-cell",{"cell-empty":null===e,"cell-selectable":null!==e&&!t.gameManager.winflag&&!t.gameManager.loseflag,"cell-selected":t.isCellSelected(s,i),"cell-selectable-next":t.isCellSelectableNext(s,i)}]),onClick:n=>null!==e&&!t.gameManager.winflag&&!t.gameManager.loseflag&&t.handleCellClick(s,i)},[null!==e?((0,n.uX)(),(0,n.CE)("span",vi,(0,u.v_)(e),1)):(0,n.Q3)("",!0)],10,pi))),128))]))),128))]),(0,n.Lk)("div",wi,[t.gameManager.winflag||t.gameManager.loseflag?t.gameManager.winflag?((0,n.uX)(),(0,n.CE)("p",Ci," 🎉 恭喜！你清空了所有数字！ ")):t.gameManager.loseflag?((0,n.uX)(),(0,n.CE)("p",yi," 😔 没有可用的序列了！ ")):(0,n.Q3)("",!0):((0,n.uX)(),(0,n.CE)("p",bi," 选择相邻的递增数字序列（长度≥"+(0,u.v_)(t.minSequenceLength)+"） ",1))]),t.selectedCells.length>0?((0,n.uX)(),(0,n.CE)("div",ki,[e[2]||(e[2]=(0,n.Lk)("h3",null,"当前选中序列:",-1)),(0,n.Lk)("div",Mi,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(t.selectedCells,(t,e)=>((0,n.uX)(),(0,n.CE)("span",{key:e,class:"sequence-cell"},(0,u.v_)(t.value),1))),128))]),(0,n.Lk)("div",xi,[(0,n.Lk)("button",{class:"btn-confirm",onClick:e[0]||(e[0]=(...e)=>t.confirmSequence&&t.confirmSequence(...e)),disabled:!t.isValidSequence(t.selectedCells)}," 确认选择 ",8,Si),(0,n.Lk)("button",{class:"btn-clear",onClick:e[1]||(e[1]=(...e)=>t.clearSelection&&t.clearSelection(...e))}," 清除选择 ")])])):(0,n.Q3)("",!0)])])]),_:1},16,["win-subtitle","lose-subtitle","onUndo","onGoon","onStep","onAuto"])}s(1148),s(3579);var _i=A.puzzleGame({name:"NumberSequence",data(){return{grid:[],selectedCells:[],score:0,gridSize:5,minSequenceLength:3}},computed:{isGameComplete(){return this.grid&&this.grid.length>0&&this.grid.every(t=>t.every(t=>null===t))},hasValidMoves(){return this.findAllValidSequences().length>0}},methods:{init(){this.grid=this.generateGrid(),this.selectedCells=[],this.score=0,this.gameManager.recordOperation({type:"init",data:{grid:this.copyGrid(this.grid)}}),this.gameManager.winflag=!1,this.gameManager.loseflag=!1,this.gameManager.drawflag=!1,this.gameManager.step=this.gameManager.history.length,this.gameManager.emit("init")},goon(){this.init(),this.gameManager.step=this.gameManager.history.length},handleCellClick(t,e){if(null===this.grid[t][e])return;const s={row:t,col:e,value:this.grid[t][e]};if(this.selectedCells.length>0&&this.selectedCells[0].row===t&&this.selectedCells[0].col===e)return void this.clearSelection();if(0===this.selectedCells.length)return void(this.selectedCells=[s]);const i=this.selectedCells[this.selectedCells.length-1],n=Math.abs(t-i.row)+Math.abs(e-i.col);if(1===n&&this.grid[t][e]>i.value){const i=this.selectedCells.some(s=>s.row===t&&s.col===e);i||this.selectedCells.push(s)}else this.selectedCells=[s]},confirmSequence(){this.isValidSequence(this.selectedCells)&&(this.selectSequence(this.selectedCells),this.clearSelection())},clearSelection(){this.selectedCells=[]},isCellSelected(t,e){return this.selectedCells.some(s=>s.row===t&&s.col===e)},isCellSelectableNext(t,e){if(0===this.selectedCells.length)return!1;if(null===this.grid[t][e])return!1;const s=this.selectedCells[this.selectedCells.length-1],i=Math.abs(t-s.row)+Math.abs(e-s.col);return 1===i&&this.grid[t][e]>s.value&&!this.isCellSelected(t,e)},generateGrid(){const t=[];for(let e=0;e<this.gridSize;e++){const e=[];for(let t=0;t<this.gridSize;t++)e.push(Math.floor(9*Math.random())+1);t.push(e)}return t},copyGrid(t){return t.map(t=>[...t])},stepFn(){if(this.isGameComplete)return void this.gameManager.setWin();const t=this.findAllValidSequences();if(0===t.length)return void this.gameManager.setLose();const e=t.reduce((t,e)=>e.length>t.length?e:t);this.selectSequence(e)},findAllValidSequences(){const t=[],e=Array(this.gridSize).fill().map(()=>Array(this.gridSize).fill(!1));for(let s=0;s<this.gridSize;s++)for(let i=0;i<this.gridSize;i++)if(null!==this.grid[s][i]){const n=this.findSequenceFrom(s,i,e);n.length>=this.minSequenceLength&&t.push(n)}return t},findSequenceFrom(t,e,s){const i=[],n=[{row:t,col:e,value:this.grid[t][e]}];return this.dfsFindSequence(t,e,n,s,i),i.length>0?i[0]:[]},dfsFindSequence(t,e,s,i,n){if(s.length>=this.minSequenceLength)return void n.push([...s]);const r=[[-1,0],[1,0],[0,-1],[0,1]],o=s[s.length-1].value;for(const[a,l]of r){const r=t+a,c=e+l;this.isValidCell(r,c)&&!i[r][c]&&null!==this.grid[r][c]&&this.grid[r][c]>o&&(i[r][c]=!0,s.push({row:r,col:c,value:this.grid[r][c]}),this.dfsFindSequence(r,c,s,i,n),s.pop(),i[r][c]=!1)}},isValidCell(t,e){return t>=0&&t<this.gridSize&&e>=0&&e<this.gridSize},selectSequence(t){if(!this.isValidSequence(t))return!1;for(const e of t)this.grid[e.row][e.col]=null;return this.applyGravity(),this.score+=10*t.length,this.gameManager.recordOperation({type:"selectSequence",data:{sequence:t.map(t=>({row:t.row,col:t.col,value:t.value})),score:this.score,grid:this.copyGrid(this.grid)}}),this.gameManager.step=this.gameManager.history.length,this.checkGameState(),!0},isValidSequence(t){if(t.length<this.minSequenceLength)return!1;for(let e=1;e<t.length;e++)if(t[e].value<=t[e-1].value)return!1;for(let e=1;e<t.length;e++){const s=t[e-1],i=t[e],n=Math.abs(i.row-s.row)+Math.abs(i.col-s.col);if(1!==n)return!1}return!0},applyGravity(){for(let t=0;t<this.gridSize;t++){let e=this.gridSize-1;for(let s=this.gridSize-1;s>=0;s--)null!==this.grid[s][t]&&(s!==e&&(this.grid[e][t]=this.grid[s][t],this.grid[s][t]=null),e--)}},checkGameState(){this.isGameComplete?this.gameManager.setWin():this.hasValidMoves||this.gameManager.setLose(),(this.gameManager.winflag||this.gameManager.loseflag)&&(this.gameManager.overflag=!0),void 0===this.gameManager.winflag&&(this.gameManager.winflag=!1),void 0===this.gameManager.loseflag&&(this.gameManager.loseflag=!1),void 0===this.gameManager.drawflag&&(this.gameManager.drawflag=!1),void 0===this.gameManager.step&&(this.gameManager.step=this.gameManager.history.length)},handleUndo(t){"selectSequence"===t.type?(this.grid=this.copyGrid(t.data.grid),this.score=t.data.score,this.selectedCells=[]):"init"===t.type&&(this.grid=this.copyGrid(t.data.grid),this.score=0,this.selectedCells=[]),this.gameManager.step=this.gameManager.history.length},renderTextView(){let t=`数字接龙 - 分数: ${this.score}\n`;t+="═".repeat(4*this.gridSize+1)+"\n";for(let e=0;e<this.gridSize;e++){t+="║";for(let s=0;s<this.gridSize;s++){const i=this.grid[e][s];t+=null===i?"   ║":` ${i} ║`}t+="\n",e<this.gridSize-1&&(t+="╠"+"═══╬".repeat(this.gridSize-1)+"═══╣\n")}return t+="═".repeat(4*this.gridSize+1)+"\n",this.gameManager.winflag?t+="🎉 恭喜！你清空了所有数字！\n":this.gameManager.loseflag?t+="😔 没有可用的序列了！\n":t+=`提示: 选择相邻的递增数字序列（长度≥${this.minSequenceLength}）\n`,console.log(t),t},getAvailableActions(){const t=[];return this.gameManager.winflag||this.gameManager.loseflag||(t.push({name:"stepFn",label:"单步执行 (►)",description:"AI执行一步最优选择"}),t.push({name:"pass",label:"自动运行 (AUTO)",description:"AI自动完成游戏"})),t}}});const Ii=_i;var Ei=Ii;const Ti=(0,a.A)(Ei,[["render",Li],["__scopeId","data-v-5fba8764"]]);var Ai=Ti;const $i=[{path:"/",redirect:"/month"},{path:"/month",component:Vt},{path:"/fish",component:ct},{path:"/point24",component:$t},{path:"/blackjack",component:W},{path:"/Tortoise",component:te},{path:"/Sort",component:ue},{path:"/Pairs",component:xe},{path:"/Spider",component:Ve},{path:"/GridBattle",component:rs},{path:"/TowerHanoi",component:Ls},{path:"/numbermaze",component:Ks},{path:"/numberpuzzle",component:hi},{path:"/numbersequence",component:Ai}],zi=(0,d.aE)({history:(0,d.Bt)(),routes:$i});var Oi=zi,Pi=s(782),Gi=(0,Pi.y$)({state:{},mutations:{},actions:{},modules:{}});Math.random=E;const Fi=(0,i.Ef)(h);Fi.use(Oi),Fi.use(Gi),Fi.mount("#app")}},e={};function s(i){var n=e[i];if(void 0!==n)return n.exports;var r=e[i]={exports:{}};return t[i].call(r.exports,r,r.exports,s),r.exports}s.m=t,function(){var t=[];s.O=function(e,i,n,r){if(!i){var o=1/0;for(h=0;h<t.length;h++){i=t[h][0],n=t[h][1],r=t[h][2];for(var a=!0,l=0;l<i.length;l++)(!1&r||o>=r)&&Object.keys(s.O).every(function(t){return s.O[t](i[l])})?i.splice(l--,1):(a=!1,r<o&&(o=r));if(a){t.splice(h--,1);var c=n();void 0!==c&&(e=c)}}return e}r=r||0;for(var h=t.length;h>0&&t[h-1][2]>r;h--)t[h]=t[h-1];t[h]=[i,n,r]}}(),function(){s.n=function(t){var e=t&&t.__esModule?function(){return t["default"]}:function(){return t};return s.d(e,{a:e}),e}}(),function(){s.d=function(t,e){for(var i in e)s.o(e,i)&&!s.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})}}(),function(){s.f={},s.e=function(t){return Promise.all(Object.keys(s.f).reduce(function(e,i){return s.f[i](t,e),e},[]))}}(),function(){s.u=function(t){return"js/"+t+"."+{82:"0edd97ec",272:"ec446061",279:"807a068c",366:"f5819e37",526:"f4a73ab4",638:"34ff1485"}[t]+".js"}}(),function(){s.miniCssF=function(t){return"css/"+t+"."+{82:"0ec60025",272:"6face7a1",279:"94d13aed",366:"e1b96006",526:"b5aab8a0",638:"c478ccc4"}[t]+".css"}}(),function(){s.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"===typeof window)return window}}()}(),function(){s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)}}(),function(){var t={},e="tsubaki-game-library:";s.l=function(i,n,r,o){if(t[i])t[i].push(n);else{var a,l;if(void 0!==r)for(var c=document.getElementsByTagName("script"),h=0;h<c.length;h++){var d=c[h];if(d.getAttribute("src")==i||d.getAttribute("data-webpack")==e+r){a=d;break}}a||(l=!0,a=document.createElement("script"),a.charset="utf-8",s.nc&&a.setAttribute("nonce",s.nc),a.setAttribute("data-webpack",e+r),a.src=i),t[i]=[n];var u=function(e,s){a.onerror=a.onload=null,clearTimeout(g);var n=t[i];if(delete t[i],a.parentNode&&a.parentNode.removeChild(a),n&&n.forEach(function(t){return t(s)}),e)return e(s)},g=setTimeout(u.bind(null,void 0,{type:"timeout",target:a}),12e4);a.onerror=u.bind(null,a.onerror),a.onload=u.bind(null,a.onload),l&&document.head.appendChild(a)}}}(),function(){s.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}}(),function(){s.p=""}(),function(){if("undefined"!==typeof document){var t=function(t,e,i,n,r){var o=document.createElement("link");o.rel="stylesheet",o.type="text/css",s.nc&&(o.nonce=s.nc);var a=function(s){if(o.onerror=o.onload=null,"load"===s.type)n();else{var i=s&&s.type,a=s&&s.target&&s.target.href||e,l=new Error("Loading CSS chunk "+t+" failed.\n("+i+": "+a+")");l.name="ChunkLoadError",l.code="CSS_CHUNK_LOAD_FAILED",l.type=i,l.request=a,o.parentNode&&o.parentNode.removeChild(o),r(l)}};return o.onerror=o.onload=a,o.href=e,i?i.parentNode.insertBefore(o,i.nextSibling):document.head.appendChild(o),o},e=function(t,e){for(var s=document.getElementsByTagName("link"),i=0;i<s.length;i++){var n=s[i],r=n.getAttribute("data-href")||n.getAttribute("href");if("stylesheet"===n.rel&&(r===t||r===e))return n}var o=document.getElementsByTagName("style");for(i=0;i<o.length;i++){n=o[i],r=n.getAttribute("data-href");if(r===t||r===e)return n}},i=function(i){return new Promise(function(n,r){var o=s.miniCssF(i),a=s.p+o;if(e(o,a))return n();t(i,a,null,n,r)})},n={524:0};s.f.miniCss=function(t,e){var s={82:1,272:1,279:1,366:1,526:1,638:1};n[t]?e.push(n[t]):0!==n[t]&&s[t]&&e.push(n[t]=i(t).then(function(){n[t]=0},function(e){throw delete n[t],e}))}}}(),function(){var t={524:0};s.f.j=function(e,i){var n=s.o(t,e)?t[e]:void 0;if(0!==n)if(n)i.push(n[2]);else{var r=new Promise(function(s,i){n=t[e]=[s,i]});i.push(n[2]=r);var o=s.p+s.u(e),a=new Error,l=function(i){if(s.o(t,e)&&(n=t[e],0!==n&&(t[e]=void 0),n)){var r=i&&("load"===i.type?"missing":i.type),o=i&&i.target&&i.target.src;a.message="Loading chunk "+e+" failed.\n("+r+": "+o+")",a.name="ChunkLoadError",a.type=r,a.request=o,n[1](a)}};s.l(o,l,"chunk-"+e,e)}},s.O.j=function(e){return 0===t[e]};var e=function(e,i){var n,r,o=i[0],a=i[1],l=i[2],c=0;if(o.some(function(e){return 0!==t[e]})){for(n in a)s.o(a,n)&&(s.m[n]=a[n]);if(l)var h=l(s)}for(e&&e(i);c<o.length;c++)r=o[c],s.o(t,r)&&t[r]&&t[r][0](),t[r]=0;return s.O(h)},i=self["webpackChunktsubaki_game_library"]=self["webpackChunktsubaki_game_library"]||[];i.forEach(e.bind(null,0)),i.push=e.bind(null,i.push.bind(i))}();var i=s.O(void 0,[504],function(){return s(8376)});i=s.O(i)})();
//# sourceMappingURL=app.cb0eecaa.js.map