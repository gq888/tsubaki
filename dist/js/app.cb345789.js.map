{"version":3,"file":"js/app.cb345789.js","mappings":"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","sources":["webpack://tsubaki-game-library/./src/App.vue","webpack://tsubaki-game-library/./src/App.vue?7ccd","webpack://tsubaki-game-library/./src/components/sum.vue","webpack://tsubaki-game-library/./src/utils/gameStateManager.js","webpack://tsubaki-game-library/./src/utils/help.js","webpack://tsubaki-game-library/./src/utils/gameComponentFactory.js","webpack://tsubaki-game-library/./src/components/sum.js","webpack://tsubaki-game-library/./src/components/sum.vue?4113","webpack://tsubaki-game-library/./src/components/fish.vue","webpack://tsubaki-game-library/./src/components/fish.js","webpack://tsubaki-game-library/./src/components/fish.vue?23f9","webpack://tsubaki-game-library/./src/components/point24.vue","webpack://tsubaki-game-library/./src/components/point24.js","webpack://tsubaki-game-library/./src/components/point24.vue?2f47","webpack://tsubaki-game-library/./src/components/month.vue","webpack://tsubaki-game-library/./src/components/month.js","webpack://tsubaki-game-library/./src/components/month.vue?5f25","webpack://tsubaki-game-library/./src/components/Tortoise.vue","webpack://tsubaki-game-library/./src/components/Tortoise.js","webpack://tsubaki-game-library/./src/components/Tortoise.vue?68f0","webpack://tsubaki-game-library/./src/components/Sort.vue","webpack://tsubaki-game-library/./src/components/candidateUtils.js","webpack://tsubaki-game-library/./src/components/Sort.js","webpack://tsubaki-game-library/./src/components/Sort.vue?7b36","webpack://tsubaki-game-library/./src/components/Pairs.vue","webpack://tsubaki-game-library/./src/components/Pairs.js","webpack://tsubaki-game-library/./src/components/Pairs.vue?b359","webpack://tsubaki-game-library/./src/components/Spider.vue","webpack://tsubaki-game-library/./src/directives/move.js","webpack://tsubaki-game-library/./src/components/Spider.js","webpack://tsubaki-game-library/./src/components/Spider.vue?2441","webpack://tsubaki-game-library/./src/components/Chess.vue","webpack://tsubaki-game-library/./src/components/Chess.js","webpack://tsubaki-game-library/./src/components/Chess.vue?6fd7","webpack://tsubaki-game-library/./src/router/index.js","webpack://tsubaki-game-library/./src/store/index.js","webpack://tsubaki-game-library/./src/main.js","webpack://tsubaki-game-library/./src/utils/gameSettingsManager.js","webpack://tsubaki-game-library/./src/utils/cardUtils.js","webpack://tsubaki-game-library/./src/utils/eventBus.js","webpack://tsubaki-game-library/webpack/bootstrap","webpack://tsubaki-game-library/webpack/runtime/chunk loaded","webpack://tsubaki-game-library/webpack/runtime/compat get default export","webpack://tsubaki-game-library/webpack/runtime/define property getters","webpack://tsubaki-game-library/webpack/runtime/ensure chunk","webpack://tsubaki-game-library/webpack/runtime/get javascript chunk filename","webpack://tsubaki-game-library/webpack/runtime/get mini-css chunk filename","webpack://tsubaki-game-library/webpack/runtime/global","webpack://tsubaki-game-library/webpack/runtime/hasOwnProperty shorthand","webpack://tsubaki-game-library/webpack/runtime/load script","webpack://tsubaki-game-library/webpack/runtime/make namespace object","webpack://tsubaki-game-library/webpack/runtime/publicPath","webpack://tsubaki-game-library/webpack/runtime/css loading","webpack://tsubaki-game-library/webpack/runtime/jsonp chunk loading","webpack://tsubaki-game-library/webpack/startup"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <router-view />\n  </div>\n</template>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #dfcdc3;\n  width: 100%;\n  height: 100vh;\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=517c11fd\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=517c11fd&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <GameLayout\n    v-bind=\"gameLayoutProps\"\n    :win-buttons=\"[{ text: 'GO ON', action: 'goon', callback: goon }]\"\n    :win-modal-style=\"{ backgroundColor: 'rgba(0, 0, 0, 0.7)' }\"\n    :win-custom-class=\"'lose'\"\n    :lose-buttons=\"[{ text: 'AGAIN', action: 'goon', callback: goon }]\"\n    :lose-modal-style=\"{ backgroundColor: 'rgba(0, 0, 0, 0.7)' }\"\n    :lose-custom-class=\"'lose'\"\n    :draw-buttons=\"[{ text: 'GO ON', action: 'goon', callback: goon }]\"\n    :draw-modal-style=\"{ backgroundColor: 'rgba(0, 0, 0, 0.7)' }\"\n    :draw-custom-class=\"'draw lose'\"\n    @goon=\"goon\"\n  >\n    <template #game-content>\n      <div class=\"row center\">\n        <img class=\"avatar\" :src=\"'./static/avatar/17.webp'\" />\n        <span class=\"scrore\">{{ score1 }}</span>\n      </div>\n      <div class=\"row\">\n        <div>\n          <ul class=\"cardsul\">\n            <CardImage\n              v-for=\"item in arr1\"\n              :key=\"item.id\"\n              class=\"card\"\n              :card-id=\"item.id\"\n            />\n          </ul>\n        </div>\n      </div>\n      <div class=\"row\" style=\"margin-top: 0.625rem\">\n        <div>\n          <ul class=\"cardsul reverse\">\n            <CardImage\n              v-for=\"item in arr2\"\n              :key=\"item.id\"\n              class=\"card\"\n              :card-id=\"item.id\"\n            />\n          </ul>\n        </div>\n      </div>\n      <div class=\"row center\">\n        <img class=\"avatar\" :src=\"'./static/avatar/32.webp'\" />\n        <span class=\"scrore\">{{ score2 }}</span>\n      </div>\n    </template>\n    <template #bottom-controls>\n      <GameControls\n        :buttons=\"[\n          {\n            label: 'HIT',\n            action: 'hitBtn',\n            disabled: stepDisabled,\n          },\n          {\n            label: 'PASS',\n            action: 'passBtn',\n            disabled: autoDisabled,\n          },\n        ]\"\n        @hitBtn=\"handleHitBtn\"\n        @passBtn=\"pass\"\n      />\n    </template>\n  </GameLayout>\n</template>\n\n<script>\nimport SumComponent from \"./sum.js\";\n\nconst component = SumComponent;\n\nexport default component;\n</script>\n\n<style scoped>\n@import url(\"./sum.css\");\n</style>\n","/**\n * 游戏状态管理类\n * 统一管理游戏状态、历史记录、撤销重做等功能\n */\nexport default class GameStateManager {\n  constructor(options = {}) {\n    // 游戏状态标志\n    this.hitflag = true; // 是否可以操作\n    this.winflag = false; // 胜利标志\n    this.loseflag = false; // 失败标志\n    this.drawflag = false; // 平局标志\n\n    // 历史记录\n    this.history = [];\n\n    // 自动模式相关\n    this.isAutoRunning = false;\n    this.autoInterval = null;\n    this.autoStepDelay = options.autoStepDelay / 10 || 500; // 默认单步延迟500ms，测试时除以10以缩短测试时间\n    this.maxSteps = options.maxSteps || 400; // 防止无限循环的最大步数，默认为400\n\n    // 事件监听器\n    this._listeners = {};\n  }\n\n  /**\n   * 初始化游戏状态\n   */\n  init() {\n    this.hitflag = true;\n    this.winflag = false;\n    this.loseflag = false;\n    this.drawflag = false;\n    this.history = [];\n    this.stopAuto();\n    this.emit(\"init\");\n  }\n\n  /**\n   * 记录游戏操作到历史记录\n   * @param {Object} operation - 操作对象\n   */\n  recordOperation(operation, backword = false) {\n    backword ? this.history.unshift(operation) : this.history.push(operation);\n    this.emit(\"historyUpdate\", this.history);\n  }\n\n  /**\n   * 撤销上一步操作\n   * @returns {Object|null} 撤销的操作对象，如果没有历史记录则返回null\n   */\n  undo() {\n    if (this.history.length === 0) {\n      return null;\n    }\n\n    const operation = this.history.pop();\n    this.emit(\"undo\", operation);\n    this.emit(\"historyUpdate\", this.history);\n\n    // 撤销后重置游戏状态标志\n    this.winflag = false;\n    this.loseflag = false;\n    this.drawflag = false;\n\n    return operation;\n  }\n\n  /**\n   * 获取历史记录长度\n   * @returns {number} 历史记录长度\n   */\n  getStepCount() {\n    return this.history.length;\n  }\n\n  /**\n   * 判断是否可以撤销\n   * @returns {boolean} 是否可以撤销\n   */\n  canUndo() {\n    return this.history.length > 0 && this.hitflag && !this.isAutoRunning;\n  }\n\n  /**\n   * 启动自动模式\n   * @param {Function} stepCallback - 每一步的回调函数\n   */\n  async startAuto(stepCallback) {\n    if (this.isAutoRunning || this.winflag || this.loseflag || this.drawflag) {\n      console.log(\n        `startAuto被跳过: isAutoRunning=${this.isAutoRunning}, win=${this.winflag}, lose=${this.loseflag}, draw=${this.drawflag}`,\n      );\n      return;\n    }\n\n    console.log(\"开始自动模式...\");\n    this.isAutoRunning = true;\n    this.emit(\"autoStart\");\n\n    let stepCount = 0;\n\n    try {\n      while (\n        this.isAutoRunning &&\n        !this.winflag &&\n        !this.loseflag &&\n        !this.drawflag &&\n        stepCount < this.maxSteps\n      ) {\n        await stepCallback();\n        stepCount++;\n\n        await this.wait();\n      }\n\n      if (stepCount >= this.maxSteps) {\n        console.log(`达到最大步数${this.maxSteps}`);\n        this.stopAuto();\n      }\n    } catch (error) {\n      console.error(\"Auto mode error:\", error);\n    } finally {\n      console.log(`自动模式结束，总共执行了${stepCount}步`);\n      this.stopAuto();\n    }\n  }\n\n  /**\n   * 停止自动模式\n   */\n  stopAuto() {\n    if (!this.isAutoRunning) {\n      return;\n    }\n\n    this.isAutoRunning = false;\n    if (this.autoInterval) {\n      clearInterval(this.autoInterval);\n      this.autoInterval = null;\n    }\n\n    this.emit(\"autoStop\");\n  }\n\n  /**\n   * 设置自动模式的延迟时间\n   * @param {number} delay - 延迟时间（毫秒）\n   */\n  setAutoStepDelay(delay) {\n    this.autoStepDelay = delay;\n    this.emit(\"delayChanged\", delay);\n  }\n\n  /**\n   * 获取当前的延迟时间\n   * @returns {number} 当前延迟时间（毫秒）\n   */\n  getAutoStepDelay() {\n    return this.autoStepDelay;\n  }\n\n  /**\n   * 等待指定时间，并在等待前触发事件\n   * @param {number} delay - 延迟时间（毫秒），如果为null则使用autoStepDelay\n   * @returns {Promise} 等待完成的Promise\n   */\n  async wait(delay = null) {\n    const actualDelay = delay !== null ? delay : this.autoStepDelay;\n    \n    // 触发等待前事件\n    this.emit(\"beforeWait\", actualDelay);\n    \n    // 执行实际的等待\n    return new Promise(resolve => setTimeout(resolve, actualDelay));\n  }\n\n  /**\n   * 执行单步操作\n   * @param {Function} stepCallback - 单步操作的回调函数\n   */\n  async step(stepCallback) {\n    if (!this.hitflag || this.winflag || this.loseflag || this.drawflag) {\n      return;\n    }\n\n    this.hitflag = false;\n    try {\n      await stepCallback();\n    } catch (error) {\n      console.error(\"Step error:\", error);\n    } finally {\n      this.hitflag = true;\n    }\n  }\n\n  /**\n   * 设置游戏胜利\n   */\n  setWin() {\n    this.winflag = true;\n    this.stopAuto();\n    this.emit(\"win\");\n  }\n\n  /**\n   * 设置游戏失败\n   */\n  setLose() {\n    this.loseflag = true;\n    this.stopAuto();\n    this.emit(\"lose\");\n  }\n\n  /**\n   * 设置游戏平局\n   */\n  setDraw() {\n    this.drawflag = true;\n    this.stopAuto();\n    this.emit(\"draw\");\n  }\n\n  /**\n   * 重置游戏\n   * @param {Function} resetCallback - 重置游戏的回调函数\n   */\n  reset(resetCallback) {\n    this.stopAuto();\n    this.init();\n    if (resetCallback) {\n      resetCallback();\n    }\n    this.emit(\"reset\");\n  }\n\n  /**\n   * 添加事件监听器\n   * @param {string} event - 事件名称\n   * @param {Function} listener - 事件监听器\n   */\n  on(event, listener) {\n    if (!this._listeners[event]) {\n      this._listeners[event] = [];\n    }\n    this._listeners[event].push(listener);\n  }\n\n  /**\n   * 移除事件监听器\n   * @param {string} event - 事件名称\n   * @param {Function} listener - 要移除的事件监听器\n   */\n  off(event, listener) {\n    if (!this._listeners[event]) {\n      return;\n    }\n    const index = this._listeners[event].indexOf(listener);\n    if (index > -1) {\n      this._listeners[event].splice(index, 1);\n    }\n  }\n\n  /**\n   * 触发事件\n   * @param {string} event - 事件名称\n   * @param {*} data - 事件数据\n   */\n  emit(event, data) {\n    if (!this._listeners[event]) {\n      return;\n    }\n    this._listeners[event].forEach((listener) => {\n      try {\n        listener(data);\n      } catch (error) {\n        console.error(`Error in event listener for ${event}:`, error);\n      }\n    });\n  }\n\n  /**\n   * 获取当前游戏状态\n   * @returns {Object} 游戏状态对象\n   */\n  getState() {\n    return {\n      hitflag: this.hitflag,\n      winflag: this.winflag,\n      loseflag: this.loseflag,\n      drawflag: this.drawflag,\n      step: this.getStepCount(),\n      isAutoRunning: this.isAutoRunning,\n    };\n  }\n\n  /**\n   * 设置游戏状态\n   * @param {Object} state - 要设置的游戏状态\n   */\n  setState(state) {\n    Object.assign(this, state);\n    this.emit(\"stateChange\", this.getState());\n  }\n\n  /**\n   * 获取默认计算属性对象\n   * 供Vue组件使用扩展运算符导入\n   * @returns {Object} 默认计算属性对象\n   */\n  static getDefaultComputedProperties() {\n    return {\n      // 基础状态标志\n      hitflag() {\n        const manager = this.gameManager;\n        return manager ? manager.hitflag : true;\n      },\n\n      winflag() {\n        const manager = this.gameManager;\n        return manager ? manager.winflag : false;\n      },\n\n      loseflag() {\n        const manager = this.gameManager;\n        return manager ? manager.loseflag : false;\n      },\n\n      drawflag() {\n        const manager = this.gameManager;\n        return manager ? manager.drawflag : false;\n      },\n\n      // 步数计算属性\n      step() {\n        const manager = this.gameManager;\n        return manager ? manager.getStepCount() : 0;\n      },\n\n      // 按钮禁用状态计算属性\n      undoDisabled() {\n        const manager = this.gameManager;\n        return !manager || !manager.canUndo();\n      },\n\n      restartDisabled() {\n        const manager = this.gameManager;\n        return !manager || !manager.hitflag || manager.isAutoRunning;\n      },\n\n      stepDisabled() {\n        const manager = this.gameManager;\n        return (\n          !manager ||\n          !manager.hitflag ||\n          manager.isAutoRunning ||\n          manager.winflag ||\n          manager.loseflag ||\n          manager.drawflag\n        );\n      },\n\n      autoDisabled() {\n        const manager = this.gameManager;\n        return (\n          !manager ||\n          !manager.hitflag ||\n          manager.winflag ||\n          manager.loseflag ||\n          manager.drawflag\n        );\n      },\n\n      // 用于模板的便捷计算属性\n      canOperate() {\n        const manager = this.gameManager;\n        return manager && manager.hitflag && !manager.isAutoRunning;\n      },\n\n      // 游戏状态\n      gameState() {\n        const manager = this.gameManager;\n        return manager ? manager.getState() : {};\n      },\n    };\n  }\n}\n","export function shuffleCards(cards, num) {\n  let rand, tmp;\n  let last = num - 1;\n  for (let i = 0; i < 1000; i++) {\n    rand = Math.floor(seededRandom() * last);\n    tmp = cards[last];\n    cards[last] = cards[rand];\n    cards[rand] = tmp;\n  }\n  return cards;\n}\n\nexport function preload(cb) {\n  let arr = [];\n  for (let i = 0; i < 54; i++) {\n    arr.push(\n      new Promise((resolve) => {\n        let img = new Image();\n        img.src = \"./static/\" + i + \".webp\";\n        img.onload = () => {\n          cb && cb(img, i);\n          resolve(img);\n        };\n      }),\n    );\n  }\n  return Promise.all(arr);\n}\n\nfunction equalArray(arr1, arr2) {\n  if (!arr2) return false;\n  for (let i = 0; i < arr2.length; i++) {\n    if (arr1[i] != arr2[i]) return false;\n  }\n  return true;\n}\n\nexport function checkDeadForeach(array, newest) {\n  for (let i = 0; i < array.length >> 1; i++) {\n    if (!equalArray(array[i], newest)) {\n      continue;\n    }\n    let j;\n    let count = {};\n    for (j = 0; j < i; j++) {\n      count[array[i].join(\".\")] = count[array[i].join(\".\")]\n        ? count[array[i].join(\".\")] + 1\n        : 1;\n      if (!equalArray(array[j], array[j + i + 1])) break;\n    }\n    if (j >= i) {\n      if (i > 40) {\n        console.log(\"dead foreach\", array, newest, i);\n      }\n      return false;\n    }\n    let index = Object.values(count).indexOf(1);\n    if (index < 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\nlet s = 1234;\n\nexport function setSeed(seed) {\n  s = seed;\n}\n\nexport function seededRandom() {\n  s = (s * 9301 + 49297) % 233280;\n  return s / 233280.0;\n}\n","import GameStateManager from \"./gameStateManager.js\";\nimport gameSettingsManager from \"./gameSettingsManager.js\";\nimport { defineAsyncComponent } from \"vue\";\nimport { setSeed } from \"./help.js\";\nimport { CARD_TYPES, CARD_POINTS, getCardPlaceholderText } from \"./cardUtils.js\";\nimport eventBus from \"./eventBus.js\";\n\n/**\n * 游戏规则说明映射\n * 为每个游戏提供简要的规则说明\n */\nconst gameRules = {\n  // 月份游戏\n  month: \"The game has 13 positions (12 months + 1 deck). Each turn, take the top card from the current position and move it to the position corresponding to its value. If the deck reaches 4 cards, the game ends.\",\n  \n  // 钓鱼游戏\n  fish: \"A 4-player game where each player starts with cards. On your turn, draw the top card from your deck. If it matches a card in the center, collect those cards. Special cards let you take cards from other players. The player who collects all cards wins.\",\n  \n  // 24点游戏\n  point24: \"Use 4 given numbers and apply +, -, ×, ÷ operations to make the result equal to 24. Each number can be used exactly once. You can combine numbers by selecting an operator and clicking cards to perform calculations.\",\n  \n  // 龟兔赛跑（卡片配对游戏）\n  Tortoise: \"A card matching game with hierarchical dependencies. Cards have z-index priorities and connection requirements. Match cards of the same value pair (cards with same base number). Cards can only be matched when all their prerequisite cards are already matched. Complete all pairs to win.\",\n  \n  // 排序游戏\n  Sort: \"A card sorting puzzle with 3 difficulty modes: simple (by number), medium (by color), and hard (by suit). Move cards to empty slots following specific rules. Cards can only be placed in valid positions. The goal is to arrange all cards in the correct order.\",\n  \n  // 配对游戏\n  Pairs: \"A memory matching game with 48 cards. Flip cards to find pairs. Cards are paired based on their base value (4 cards share the same base value). Find all matching pairs as quickly as possible to win.\",\n  \n  // 蜘蛛纸牌\n  Spider: \"A classic Spider Solitaire game with 52 standard playing cards. Arrange cards in descending order by number. Cards can be moved in sequences to build foundations. The goal is to sort all cards by suit and rank to win.\",\n  \n  // 国际象棋（策略游戏）\n  GridBattle: \"A strategy game on a 6x6 grid with two types of pieces: high (1) and low (0) grade. Pieces move according to specific rules defined by their positions. Win by eliminating all opponent's pieces of the opposite grade, or reach a draw when only one of each remains.\",\n  \n  // 21点（BlackJack）\n  blackjack: \"A card game using a 54-card deck. The goal is to get as close to 21 as possible without exceeding it. Cards 2-10 are worth their face value, J/Q/K are worth 10, and Aces can be worth 1 or 11. If your score exceeds 21, you bust. Both player and dealer start with 2 cards.\"\n};\n\n/**\n * 组件定义 - 根据环境选择 Mock 或真实组件\n */\nlet GameResultModal, GameControls, GameLayout, CardImage;\n\nif (typeof window === \"undefined\") {\n  // Node.js 环境：直接使用 Mock 组件\n  GameResultModal = {\n    name: \"GameResultModal\",\n    template: \"<div>Mock GameResultModal</div>\",\n    props: [\"title\", \"subtitle\", \"buttons\", \"show\"],\n  };\n  GameControls = {\n    name: \"GameControls\",\n    template: \"<div>Mock GameControls</div>\",\n    props: [\"canUndo\", \"canGoon\", \"canRestart\", \"canAuto\", \"canStep\"],\n  };\n  GameLayout = {\n    name: \"GameLayout\",\n    template: \"<div><slot name='game-content'></slot></div>\",\n    props: [\"title\", \"winflag\", \"loseflag\", \"drawflag\"],\n  };\n  CardImage = {\n    name: \"CardImage\",\n    template: \"<div>Mock CardImage</div>\",\n    props: [\"src\", \"alt\"],\n  };\n} else {\n  // 浏览器环境：使用 Vue 3 异步组件\n  GameResultModal = defineAsyncComponent(\n    () => import(\"../components/GameResultModal.vue\"),\n  );\n  GameControls = defineAsyncComponent(\n    () => import(\"../components/GameControls.vue\"),\n  );\n  GameLayout = defineAsyncComponent(\n    () => import(\"../components/GameLayout.vue\"),\n  );\n  CardImage = defineAsyncComponent(\n    () => import(\"../components/CardImage.vue\"),\n  );\n}\n\n/**\n * 游戏组件工厂函数\n * 为现有游戏组件添加统一的GameStateManager、GameControls和GameResultModal功能\n * 这是一个保守的重构方案，最大程度保持现有代码结构不变\n */\n\n/**\n * 创建增强的游戏组件（同步版本）\n * @param {Object} baseComponent - 基础游戏组件 (.js文件导出的组件)\n * @param {Object} options - 配置选项\n * @param {number} options.autoStepDelay - 自动模式延迟时间\n * @param {boolean} options.hasUndo - 是否支持撤销\n * @param {boolean} options.hasRestart - 是否支持重新开始\n * @param {Function} options.customInit - 自定义初始化函数\n * @param {Function} options.customCleanup - 自定义清理函数\n * @returns {Object} 增强后的Vue组件配置\n */\nexport function createEnhancedGameComponent(baseComponent, options = {}) {\n  const {\n    computed = {},\n    methods = {},\n    autoStepDelay = 500,\n    hasUndo = true,\n    hasRestart = true,\n    customInit = null,\n    customCleanup = null,\n  } = options;\n\n  // 按钮描述映射\n  const buttonDescriptions = {\n    undo: '撤销上一步操作',\n    goon: '重新开始游戏',\n    step: '单步执行',\n    auto: '自动运行/停止自动运行',\n    submit: '提交答案',\n    hint: '显示提示',\n    reset: '重置当前操作',\n    confirm: '确认操作',\n    cancel: '取消操作',\n    pause: '暂停游戏',\n    resume: '继续游戏',\n  };\n\n  return {\n    // 继承基础组件的所有属性\n    ...baseComponent,\n\n    // 添加必要的组件\n    components: {\n      ...baseComponent.components,\n      GameResultModal,\n      GameControls,\n      GameLayout,\n      CardImage,\n    },\n\n    // 扩展data函数\n    data() {\n      const baseData = baseComponent.data ? baseComponent.data.call(this) : {};\n      \n      return {\n        types: CARD_TYPES,\n        point: CARD_POINTS,\n        ...baseData,\n        gameManager: new GameStateManager({\n          autoStepDelay,\n        }),\n        gameControlsButtons: {}, // 存储从eventBus获取的按钮配置\n      };\n    },\n\n    // 扩展created生命周期\n    created() {\n      this.setSeed(this.seed ? this.seed : Date.now());\n      \n      // 初始化GameStateManager\n      this.gameManager.init();\n\n      // 从 localStorage 加载延迟设置\n      this.loadDelaySettings();\n\n      // 监听设置变化\n      this._settingsChangeHandler = this.handleSettingsChanged.bind(this);\n      gameSettingsManager.addListener(this._settingsChangeHandler);\n\n      // 设置事件监听\n      this.handleUndo && this.gameManager.on(\"undo\", this.handleUndo);\n\n      // 注册beforeWait事件监听 - 在wait前调用renderTextView\n      this.gameManager.on(\"beforeWait\", () => {\n        if (this.renderTextView && typeof this.renderTextView === 'function') {\n          this.renderTextView();\n        }\n      });\n\n      // 设置historyUpdate事件监听\n      this.gameManager.on(\"historyUpdate\", () => {\n        // 先执行各页面自定义的handleHistoryUpdate方法\n        if (\n          this.handleHistoryUpdate &&\n          typeof this.handleHistoryUpdate === \"function\"\n        ) {\n          this.handleHistoryUpdate();\n        }\n\n        // 然后执行autoCalc方法（如果存在）\n        if (this.autoCalc && typeof this.autoCalc === \"function\") {\n          this.autoCalc();\n        }\n      });\n\n      // 监听事件总线中的GameControls相关事件\n      this._controlsCreatedHandler = this.handleControlsCreated.bind(this);\n      this._controlsButtonsUpdatedHandler = this.handleControlsButtonsUpdated.bind(this);\n      this._controlsUnmountedHandler = this.handleControlsUnmounted.bind(this);\n      \n      eventBus.on('game-controls:created', this._controlsCreatedHandler);\n      eventBus.on('game-controls:buttons-updated', this._controlsButtonsUpdatedHandler);\n      eventBus.on('game-controls:unmounted', this._controlsUnmountedHandler);\n\n      // 调用自定义初始化函数\n      if (customInit) {\n        customInit.call(this);\n      }\n\n      // 调用原组件的created方法\n      if (baseComponent.created) {\n        baseComponent.created.call(this);\n      }\n\n      // 调用init方法（如果存在）\n      if (this.init) {\n        this.init();\n      }\n    },\n\n    // 扩展beforeUnmount生命周期\n    beforeUnmount() {\n      // 停止自动模式\n      this.gameManager.stopAuto();\n\n      // 清理事件监听\n      this.gameManager.off(\"undo\");\n      this.gameManager.off(\"beforeWait\");\n      this.gameManager.off(\"historyUpdate\");\n\n      // 移除设置变化监听器\n      if (this._settingsChangeHandler) {\n        gameSettingsManager.removeListener(this._settingsChangeHandler);\n      }\n\n      // 清理事件总线监听器\n      if (this._controlsCreatedHandler) {\n        eventBus.off('game-controls:created', this._controlsCreatedHandler);\n      }\n      if (this._controlsButtonsUpdatedHandler) {\n        eventBus.off('game-controls:buttons-updated', this._controlsButtonsUpdatedHandler);\n      }\n      if (this._controlsUnmountedHandler) {\n        eventBus.off('game-controls:unmounted', this._controlsUnmountedHandler);\n      }\n\n      // 调用自定义清理函数\n      if (customCleanup) {\n        customCleanup.call(this);\n      }\n\n      // 调用原组件的beforeUnmount方法\n      if (baseComponent.beforeUnmount) {\n        baseComponent.beforeUnmount.call(this);\n      }\n    },\n\n    // 扩展computed属性\n    computed: {\n      // 使用GameStateManager的默认计算属性\n      ...GameStateManager.getDefaultComputedProperties(),\n\n      // 游戏控制配置\n      gameControlsConfig() {\n        return {\n          showUndo: hasUndo,\n          showRestart: hasRestart,\n          undoDisabled: this.undoDisabled,\n          restartDisabled: this.restartDisabled,\n          stepDisabled: this.stepDisabled,\n          autoDisabled: this.autoDisabled,\n          isAutoRunning: this.gameManager?.isAutoRunning || false,\n        };\n      },\n\n      // GameLayout通用属性配置\n      gameLayoutProps() {\n        // 获取当前游戏名称\n        const currentGame = this.$route?.path?.substring(1) || '';\n        \n        return {\n          title: this.title,\n          gameControlsConfig: this.gameControlsConfig,\n          winflag: this.winflag,\n          loseflag: this.loseflag,\n          drawflag: this.drawflag,\n          step: this.step,\n          gameRule: gameRules[currentGame],\n          gameControlsButtons: this.gameControlsButtons,\n        };\n      },\n      \n      // 从事件总线收集的按钮配置，用于getAvailableActions\n      collectedGameButtons() {\n        const uniqueButtons = new Map();\n        \n        // 从事件总线收集的按钮配置\n        Object.values(this.gameControlsButtons).forEach(buttons => {\n          if (buttons && Array.isArray(buttons)) {\n            buttons.forEach(button => {\n              if (button.action) {\n                uniqueButtons.set(button.action, button);\n              }\n            });\n          }\n        });\n        \n        return Array.from(uniqueButtons.values());\n      },\n\n      ...baseComponent.computed,\n      ...computed,\n    },\n\n    // 扩展methods\n    methods: {\n      getCardPlaceholderText,\n      // 设置随机数种子\n      setSeed(seed) {\n        this.seed = seed;\n        setSeed(seed);\n      },\n      \n      // 统一的等待方法 - 委托给gameManager处理\n      async wait(delay = null) {\n        return this.gameManager.wait(delay);\n      },\n      \n      // 统一的撤销方法\n      undo() {\n        this.gameManager.undo();\n      },\n\n      // 统一的自动模式方法\n      async pass() {\n        this.gameManager.isAutoRunning ? this.gameManager.stopAuto() : await this.gameManager.startAuto(async () => {\n          // 使用replacer处理循环引用和特殊对象\n          let seen = new WeakMap(); // 使用WeakMap记录路径\n          let pathStack = []; // 记录当前路径\n          \n          const replacer = function(key, value) {\n            // 跳过以_开头的属性\n            if (typeof key === 'string' && key.startsWith('_')) {\n              return undefined;\n            }\n            \n            // 处理对象循环引用\n            if (typeof value === 'object' && value !== null) {\n              if (seen.has(value)) {\n                return undefined; // 跳过循环引用\n              }\n              \n              const currentPath = pathStack.join('.') + (key ? '.' + key : '');\n              seen.set(value, currentPath);\n              pathStack.push(key);\n            }\n            \n            return value;\n          };\n          const beforeState = JSON.stringify(this.$data, replacer);\n          await this.stepFn();\n          seen = new WeakMap(); // 使用WeakMap记录路径\n          pathStack = []; // 记录当前路径\n          const afterState = JSON.stringify(this.$data, replacer);\n          \n          // 如果状态没变，说明移动无效\n          if (beforeState === afterState) {\n            console.warn('移动无效，游戏可能陷入死锁');\n            this.gameManager.stopAuto();\n          }\n        });\n      },\n\n      // 统一的重新开始方法\n      goon() {\n        this.gameManager.reset(() => {\n          if (this.init) {\n            this.init();\n          }\n        });\n      },\n\n      /**\n       * 从 localStorage 加载延迟设置\n       */\n      loadDelaySettings() {\n        const currentGame = this.$route?.path?.substring(1) || '';\n        const delay = gameSettingsManager.getDelay(currentGame);\n        this.gameManager.setAutoStepDelay(delay);\n      },\n\n      /**\n       * 处理设置变化事件\n       */\n      handleSettingsChanged(settings) {\n        const currentGame = this.$route?.path?.substring(1) || '';\n        \n        // 如果是应用到所有游戏，或者是针对当前游戏的设置，则更新\n        if (settings.applyToAll || settings.gameName === currentGame) {\n          this.gameManager.setAutoStepDelay(settings.delay);\n        }\n      },\n      \n      /**\n       * 处理GameControls组件挂载事件\n       */\n      handleControlsCreated(data) {\n        this.gameControlsButtons[data.instanceId] = data.buttons;\n      },\n      \n      /**\n       * 处理GameControls组件按钮更新事件\n       */\n      handleControlsButtonsUpdated(data) {\n        this.gameControlsButtons[data.instanceId] = data.buttons;\n      },\n      \n      /**\n       * 处理GameControls组件卸载事件\n       */\n      handleControlsUnmounted(data) {\n        delete this.gameControlsButtons[data.instanceId];\n      },\n      \n      /**\n       * 统一的获取可用操作方法\n       * 用于终端交互式游戏\n       */\n      getAvailableActions() {\n        const actions = [];\n        const actionToMethodMap = {\n          'undo': 'undo',\n          'goon': 'goon',\n          'step': 'stepFn',\n          'auto': 'pass'\n        };\n        \n        // 首先尝试从事件总线获取按钮配置\n        if (this.collectedGameButtons.length > 0) {\n          this.collectedGameButtons.forEach((button, index) => {\n            const methodName = actionToMethodMap[button.action] || button.action;\n            if (this[methodName] && typeof this[methodName] === 'function') {\n              actions.push({\n                id: index + 1, // 使用从1开始的序号\n                label: button.label || `${button.action.toUpperCase()}`,\n                method: methodName,\n                args: [], // 默认空数组\n                disabled: button.disabled || false,\n                description: button.description || buttonDescriptions[button.action] || '未知功能'\n              });\n            } else {\n              console.log(`未找到方法 ${methodName} 对应的操作按钮 ${button.action}`);\n            }\n          });\n        }\n        \n        // 如果从事件总线没有获取到足够的按钮配置，使用默认配置\n        if (actions.length === 0) {\n          // 默认按钮配置\n          const defaultButtons = [\n            { action: 'undo', label: '撤销 (◀︎)', disabled: this.undoDisabled, description: buttonDescriptions.undo },\n            { action: 'goon', label: '重新开始 (RESTART)', disabled: this.restartDisabled || false, description: buttonDescriptions.goon },\n            { action: 'step', label: '单步执行 (►)', disabled: this.stepDisabled || false, description: buttonDescriptions.step },\n            { action: 'auto', label: (this.gameManager?.isAutoRunning || false) ? '停止自动 (STOP)' : '自动运行 (AUTO)', disabled: this.autoDisabled || false, description: buttonDescriptions.auto }\n          ];\n          \n          defaultButtons.forEach((button, index) => {\n            // 只添加游戏支持的按钮\n            if ((hasUndo || button.action !== 'undo') && (hasRestart || button.action !== 'goon')) {\n              const methodName = actionToMethodMap[button.action] || button.action;\n              actions.push({\n                id: index + 1,\n                label: button.label,\n                method: methodName,\n                args: [],\n                disabled: button.disabled,\n                description: button.description\n              });\n            }\n          });\n        }\n        \n        // 过滤掉禁用的按钮\n        return actions.filter(a => !a.disabled);\n      },\n      \n      /**\n       * 向事件总线发送自定义按钮配置\n       * 用于添加游戏特定的按钮配置\n       */\n      sendCustomButtonsToEventBus(buttons) {\n        if (!Array.isArray(buttons)) return;\n        \n        // 生成唯一的instanceId\n        const instanceId = `custom_buttons_${this.title}_${Date.now()}`;\n        \n        // 向事件总线发送按钮配置\n        eventBus.emit('game-controls:buttons-updated', {\n          instanceId,\n          buttons: buttons.map(button => ({\n            ...button,\n            id: undefined, // 确保移除id，使用序号\n            args: button.args || [] // 确保有默认空数组\n          }))\n        });\n        \n        // 在组件卸载时清理\n        const cleanupHandler = () => {\n          eventBus.emit('game-controls:unmounted', { instanceId });\n        };\n        \n        // 确保在组件卸载时清理\n        const originalBeforeUnmount = this.beforeUnmount;\n        this.beforeUnmount = function() {\n          cleanupHandler();\n          if (originalBeforeUnmount && typeof originalBeforeUnmount === 'function') {\n            originalBeforeUnmount.call(this);\n          }\n        };\n        \n        return instanceId;\n      },\n\n      ...baseComponent.methods,\n      ...methods,\n    },\n  };\n}\n\n/**\n * 快速创建游戏组件的便捷函数\n * 针对不同类型的游戏提供预设配置\n */\nexport const GameComponentPresets = {\n  // 纸牌游戏预设（支持撤销）\n  cardGame: (baseComponent, autoStepDelay = 500) =>\n    createEnhancedGameComponent(baseComponent, {\n      autoStepDelay,\n      hasUndo: true,\n      hasRestart: true,\n    }),\n\n  // 简单游戏预设（不支持撤销）\n  simpleGame: (baseComponent, autoStepDelay = 1000) =>\n    createEnhancedGameComponent(baseComponent, {\n      autoStepDelay,\n      hasUndo: false,\n      hasRestart: true,\n      customInit() {\n        // 为fish游戏添加特殊的stepFn和goon方法\n        if (this.title && this.title.includes(\"FISHING\")) {\n          this.stepFn = async () => {\n            await this.gameManager.step(async () => {\n              let cards = this[\"cards\" + ((this.step % 4) + 1)];\n              while (cards.length <= 0) {\n                this.gameManager.recordOperation();\n                cards = this[\"cards\" + ((this.step % 4) + 1)];\n              }\n              await this.hit(cards, this.arr);\n              // 检查胜利条件\n              let i;\n              for (i = 1; i <= 4; i++) {\n                if ((this.step % 4) + 1 != i && this[\"cards\" + i].length > 0) {\n                  break;\n                }\n              }\n              if (i > 4) {\n                this.gameManager.setWin();\n              } else {\n                this.gameManager.recordOperation();\n              }\n            });\n          };\n        }\n\n        // 为month游戏添加特殊的stepFn和goon方法\n        if (this.title && this.title === \"Month\") {\n          this.stepFn = async () => {\n            // 检查失败条件\n            if (this.cards2[12] >= 4) {\n              this.gameManager.setLose();\n            }\n            await this.gameManager.step(async () => {\n              await this.hit();\n            });\n          };\n        }\n      },\n    }),\n\n  // 配对游戏预设\n  pairGame: (baseComponent, autoStepDelay = 500, methods = {}) =>\n    createEnhancedGameComponent(baseComponent, {\n      autoStepDelay,\n      hasUndo: false,\n      hasRestart: true,\n      methods,\n      customCleanup() {\n        // 清理定时器\n        if (this._timer) {\n          clearInterval(this._timer);\n        }\n      },\n    }),\n\n  // 益智游戏预设\n  puzzleGame: (baseComponent, autoStepDelay = 800, methods = {}) =>\n    createEnhancedGameComponent(baseComponent, {\n      autoStepDelay,\n      hasUndo: true,\n      hasRestart: true,\n      methods,\n      customInit() {\n        // 为益智游戏添加特殊功能\n        if (\n          this.title &&\n          (this.title.includes(\"24\") || this.title.includes(\"PUZZLE\"))\n        ) {\n          // 添加提示功能\n          this.showHint = function () {\n            // 实现提示逻辑\n            console.log(\"显示提示\");\n          };\n        }\n      },\n    }),\n\n  // 策略游戏预设\n  strategyGame: (baseComponent, autoStepDelay = 1200) =>\n    createEnhancedGameComponent(baseComponent, {\n      autoStepDelay,\n      hasUndo: true,\n      hasRestart: true,\n      customInit() {\n        // 为策略游戏添加特殊功能\n        this.difficulty = \"normal\";\n        this.setDifficulty = function (level) {\n          this.difficulty = level;\n          // this.gameManager.setAutoStepDelay(\n          //   level === \"easy\" ? 1500 : level === \"hard\" ? 800 : 1200,\n          // );\n        };\n      },\n    }),\n\n  // 动作游戏预设\n  actionGame: (baseComponent, autoStepDelay = 300) =>\n    createEnhancedGameComponent(baseComponent, {\n      autoStepDelay,\n      hasUndo: false,\n      hasRestart: true,\n      customInit() {\n        // 为动作游戏添加特殊功能\n        this.score = 0;\n        this.combo = 0;\n        this.addScore = function (points) {\n          this.score += points * (this.combo + 1);\n          this.combo++;\n        };\n        this.resetCombo = function () {\n          this.combo = 0;\n        };\n      },\n    }),\n\n  // 自定义游戏预设\n  customGame: (baseComponent, config = {}) => {\n    const {\n      autoStepDelay = 500,\n      hasUndo = true,\n      hasRestart = true,\n      features = [],\n      customLogic = null,\n    } = config;\n\n    return createEnhancedGameComponent(baseComponent, {\n      autoStepDelay,\n      hasUndo,\n      hasRestart,\n      customInit() {\n        // 应用自定义功能\n        features.forEach((feature) => {\n          switch (feature) {\n            case \"timer\":\n              this.gameTime = 0;\n              this._gameTimer = null;\n              this.startTimer = function () {\n                this._gameTimer = setInterval(() => {\n                  this.gameTime++;\n                }, 1000);\n              };\n              this.stopTimer = function () {\n                if (this._gameTimer) {\n                  clearInterval(this._gameTimer);\n                  this._gameTimer = null;\n                }\n              };\n              break;\n\n            case \"score\":\n              this.score = 0;\n              this.highScore = parseInt(\n                localStorage.getItem(`${this.title}_highScore`) || \"0\",\n              );\n              this.updateScore = function (points) {\n                this.score += points;\n                if (this.score > this.highScore) {\n                  this.highScore = this.score;\n                  localStorage.setItem(\n                    `${this.title}_highScore`,\n                    this.highScore.toString(),\n                  );\n                }\n              };\n              break;\n\n            case \"difficulty\":\n              this.difficulty = \"normal\";\n              this.setDifficulty = function (level) {\n                this.difficulty = level;\n                // 根据难度调整游戏参数\n                const delays = { easy: 800, normal: 500, hard: 300 };\n                this.gameManager.setAutoStepDelay(delays[level] || 500);\n              };\n              break;\n          }\n        });\n\n        // 应用自定义逻辑\n        if (customLogic && typeof customLogic === \"function\") {\n          customLogic.call(this);\n        }\n      },\n      customCleanup() {\n        // 清理定时器\n        if (this._gameTimer) {\n          clearInterval(this._gameTimer);\n        }\n      },\n    });\n  },\n};\n\n/**\n * 模板字符串生成器\n * 生成标准的游戏组件模板\n */\nexport function generateGameTemplate(options = {}) {\n  const {\n    hasTopControls = true,\n    hasBottomControls = false,\n    hasGameInfo = false,\n    hasCustomContent = true,\n  } = options;\n\n  return `<template>\n  <div class=\"Sum\">\n    <h1>{{ title }}</h1>\n    \n    ${\n      hasTopControls\n        ? `\n    <GameControls\n      v-bind=\"gameControlsConfig\"\n      @undo=\"undo\"\n      @goon=\"goon\"\n      @step=\"stepFn\"\n      @auto=\"pass\"\n    />`\n        : \"\"\n    }\n    \n    ${\n      hasGameInfo\n        ? `\n    <div class=\"row\">\n      <span v-if=\"time !== undefined\">TIME: {{ time }}</span>\n      <br v-if=\"time !== undefined && step !== undefined\" />\n      <span v-if=\"step !== undefined\">STEP: {{ step }}</span>\n    </div>`\n        : \"\"\n    }\n    \n    <div class=\"row\">\n      ${hasCustomContent ? \"<!-- 游戏内容区域 -->\" : \"\"}\n    </div>\n    \n    ${\n      hasBottomControls\n        ? `\n    <GameControls\n      v-bind=\"gameControlsConfig\"\n      @undo=\"undo\"\n      @goon=\"goon\"\n      @step=\"stepFn\"\n      @auto=\"pass\"\n    />`\n        : \"\"\n    }\n    \n    <!-- 游戏结果模态框 -->\n    <GameResultModal\n      v-if=\"winflag\"\n      title=\"U WIN!\"\n      :buttons=\"[{ text: 'GO ON', action: 'goon', callback: goon, disabled: false }]\"\n    />\n    \n    <GameResultModal\n      v-if=\"loseflag\"\n      title=\"U LOSE\"\n      :buttons=\"[{ text: 'GO ON', action: 'goon', callback: goon, disabled: false }]\"\n    />\n  </div>\n</template>`;\n}\n\n/**\n * 使用示例：\n *\n * // 1. 简单使用\n * import { createEnhancedGameComponent } from '../utils/gameComponentFactory.js';\n * import Pairs from './Pairs.js';\n *\n * export default createEnhancedGameComponent(Pairs, {\n *   autoStepDelay: 500,\n *   hasUndo: false\n * });\n *\n * // 2. 使用预设\n * import { GameComponentPresets } from '../utils/gameComponentFactory.js';\n * import fish from './fish.js';\n *\n * export default GameComponentPresets.simpleGame(fish, 1000);\n *\n * // 3. 自定义配置\n * export default createEnhancedGameComponent(GridBattle, {\n *   autoStepDelay: 500,\n *   hasUndo: true,\n *   customInit() {\n *     // 自定义初始化逻辑\n *   }\n * });\n */\n","import { GameComponentPresets } from \"../utils/gameComponentFactory.js\";\nimport { shuffleCards } from \"../utils/help.js\";\nimport { getCardPlaceholderText } from \"../utils/cardUtils.js\";\n\nconst Sum = {\n  name: \"Sum\",\n  data() {\n    return {\n      title: \"BlackJack\",\n      cardsChg: [],\n      arr1: [],\n      arr2: [],\n      number: 54,\n    };\n  },\n  component: [],\n  methods: {\n    init() {\n      // 重置玩家牌组\n      this.arr1.splice(0);\n      this.arr2.splice(0);\n      \n      // 只有在牌堆为空时才重新初始化\n      if (this.cardsChg.length === 0) {\n        this.refillCards();\n      } else {\n        console.log('使用现有牌堆，剩余:', this.cardsChg.length, '张');\n      }\n      \n      // 发初始牌\n      this.hit(this.arr1);\n      this.hit(this.arr2);\n      this.hit(this.arr1);\n      this.hit(this.arr2);\n    },\n    // 摸牌\n    hit(arr) {\n      // 如果牌堆空了，重新洗牌\n      if (this.cardsChg.length === 0) {\n        console.log('牌堆已空，重新洗牌...');\n        this.refillCards();\n      }\n      \n      var currentCard = this.cardsChg.shift();\n      var value = currentCard >> 2;\n      arr.push({ id: currentCard, value: ++value > 10 ? 10 : value });\n      this.gameManager.recordOperation();\n    },\n    \n    // 重新填充牌堆\n    refillCards() {\n      // 清空已使用记录\n      this.cardsChg.splice(0);\n      for (let i = 0; i < this.number; i++) {\n        this.cardsChg.push(i);\n      }\n      \n      // 洗牌\n      shuffleCards(this.cardsChg, this.cardsChg.length);\n      console.log('重新洗牌完成，新牌堆:', this.cardsChg.length, '张');\n    },\n    // 计算点数\n    getScore(player) {\n      let score = 0;\n      let arr = this[\"arr\" + player];\n      let flag = false;\n      for (let i = 0; i < arr.length; i++) {\n        score += arr[i].value;\n        if (arr[i].value === 1) {\n          flag = true;\n        }\n      }\n      if (score <= 11 && flag === true) {\n        score += 10;\n      } else if (score > 21) {\n        score = 0;\n        player == 2 ? this.gameManager.setLose() : this.gameManager.setWin();\n      }\n      return score;\n    },\n\n    async stepFn() {\n      if (this.score1 === this.score2) {\n        this.gameManager.setDraw();\n      } else if (this.score1 < this.score2) {\n        this.hit(this.arr1);\n      } else if (this.score1 > this.score2) {\n        this.gameManager.setLose();\n      }\n    },\n    // 点击摸牌按钮\n    handleHitBtn() {\n      this.hit(this.arr2);\n    },\n    \n    /**\n     * 渲染文本视图 - 显示当前游戏状态\n     * 用于终端交互式游戏\n     */\n    renderTextView() {\n      console.log('\\n╔════════════════════════════════════════════════╗');\n      console.log('║            黑杰克 (BlackJack)                 ║');\n      console.log('╚════════════════════════════════════════════════╝');\n      console.log(`\\n步数: ${this.step}\\n`);\n      \n      // 显示游戏规则\n      console.log('规则: 点数接近21获胜，超过21爆牌');\n      \n      // 显示剩余牌堆\n      console.log('━━━ 牌堆 ━━━');\n      const remainingCards = this.cardsChg ? this.cardsChg.length : 0;\n      console.log(`  剩余: ${remainingCards} 张\\n`);\n      \n      // 显示（玩家1）\n      console.log('━━━ 庄家 ━━━');\n      const playerScore = this.getScore(1);\n      if (this.arr1 && this.arr1.length > 0) {\n        const playerCards = this.arr1.map(c => getCardPlaceholderText(c.id)).join(' ');\n        console.log(`  ${playerCards}`);\n        console.log(`  分数: ${playerScore}${playerScore > 21 ? ' 💥 爆牌!' : playerScore === 21 ? ' 🎉 BlackJack!' : ''}\\n`);\n      } else {\n        console.log('  (无牌)\\n');\n      }\n      \n      // 显示（玩家2）\n      console.log('━━━ 玩家 ━━━');\n      const dealerScore = this.getScore(2);\n      if (this.arr2 && this.arr2.length > 0) {\n        const dealerCards = this.arr2.map(c => getCardPlaceholderText(c.id)).join(' ');\n        console.log(`  ${dealerCards}`);\n        console.log(`  分数: ${dealerScore}${dealerScore > 21 ? ' 💥 爆牌!' : ''}\\n`);\n      } else {\n        console.log('  (无牌)\\n');\n      }\n      \n      return '渲染完成';\n    },\n    \n    /**\n     * 获取当前可用的操作列表\n     * 用于终端交互式游戏\n     */\n    getAvailableActions() {\n      const actions = [];\n      \n      // 重新开始按钮\n      actions.push({\n        id: 1,\n        label: '重新开始 (RESTART)',\n        method: 'goon',\n        args: []\n      });\n      \n      // 摘牌按钮（玩家1）\n      const playerScore = this.getScore(1);\n      if (playerScore < 21) {\n        actions.push({\n          id: 2,\n          label: '摘牌 (HIT)',\n          method: 'handleHitBtn',\n          args: []\n        });\n      }\n      \n      // 停牌按钮\n      actions.push({\n        id: 3,\n        label: '停牌 (PASS)',\n        method: 'pass',\n        args: []\n      });\n      \n      return actions;\n    },\n    \n    // 停牌方法（庄家摧牌）\n    // stand() {\n    //   // 庄家持续摘牌直到点数>=17\n    //   while (this.getScore(2) < 17) {\n    //     this.hit(this.cardsChg, this.arr2);\n    //   }\n      \n    //   // 判断胜负\n    //   const playerScore = this.getScore(1);\n    //   const dealerScore = this.getScore(2);\n      \n    //   if (playerScore > 21) {\n    //     this.gameManager.setLose();\n    //   } else if (dealerScore > 21) {\n    //     this.gameManager.setWin();\n    //   } else if (playerScore > dealerScore) {\n    //     this.gameManager.setWin();\n    //   } else if (playerScore < dealerScore) {\n    //     this.gameManager.setLose();\n    //   } else {\n    //     this.gameManager.setDraw();\n    //   }\n      \n    //   this.gameManager.recordOperation();\n    // },\n  },\n  computed: {\n    // 监听点数\n    score1: function () {\n      return this.getScore(1);\n    },\n    score2: function () {\n      return this.getScore(2);\n    },\n  },\n};\n\n// 使用工厂函数创建增强的Sum组件并导出\nexport default GameComponentPresets.strategyGame(Sum, 1000);\n","import { render } from \"./sum.vue?vue&type=template&id=45783e8e&scoped=true\"\nimport script from \"./sum.vue?vue&type=script&lang=js\"\nexport * from \"./sum.vue?vue&type=script&lang=js\"\n\nimport \"./sum.vue?vue&type=style&index=0&id=45783e8e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-45783e8e\"]])\n\nexport default __exports__","<template>\n  <GameLayout\n    v-bind=\"gameLayoutProps\"\n    :win-title=\"''\"\n    @step=\"stepFn\"\n    @auto=\"pass\"\n    @goon=\"goon\"\n  >\n    <template #game-content>\n      <div\n        class=\"row flex-row\"\n        style=\"padding-top: 0.625rem; justify-content: space-around\"\n      >\n        <div class=\"flex-col center rela\" style=\"max-width: 25%\">\n          <message\n            class=\"abso\"\n            style=\"top: 4.375rem; left: 0; width: 100%\"\n            show1=\"1\"\n            >1</message\n          >\n          <img class=\"avatar\" :src=\"'./static/avatar/32.webp'\" />\n          <span class=\"diff\" :style=\"{ opacity: diff1 != 0 ? 1 : 0 }\"\n            >{{ diff1 > 0 ? \"+\" : \"\" }}{{ diff1 }}</span\n          >\n          <span class=\"scrore\">{{ score1 }}</span>\n        </div>\n        <div class=\"flex-col center rela\" style=\"max-width: 25%\">\n          <message class=\"abso\" style=\"top: 4.375rem; left: 0; width: 100%\"\n            >asfasfasdfasfdasdfasdfas</message\n          >\n          <img class=\"avatar\" :src=\"'./static/avatar/31.webp'\" />\n          <span class=\"diff\" :style=\"{ opacity: diff2 != 0 ? 1 : 0 }\"\n            >{{ diff2 > 0 ? \"+\" : \"\" }}{{ diff2 }}</span\n          >\n          <span class=\"scrore\">{{ score2 }}</span>\n        </div>\n        <div class=\"flex-col center rela\" style=\"max-width: 25%\">\n          <message class=\"abso\" style=\"top: 4.375rem; left: 0; width: 100%\"\n            >1</message\n          >\n          <img class=\"avatar\" :src=\"'./static/avatar/29.webp'\" />\n          <span class=\"diff\" :style=\"{ opacity: diff3 != 0 ? 1 : 0 }\"\n            >{{ diff3 > 0 ? \"+\" : \"\" }}{{ diff3 }}</span\n          >\n          <span class=\"scrore\">{{ score3 }}</span>\n        </div>\n        <div class=\"flex-col center rela\" style=\"max-width: 25%\">\n          <message class=\"abso\" style=\"top: 4.375rem; left: 0; width: 100%\"\n            >1</message\n          >\n          <img class=\"avatar\" :src=\"'./static/avatar/30.webp'\" />\n          <span class=\"diff\" :style=\"{ opacity: diff4 != 0 ? 1 : 0 }\"\n            >{{ diff4 > 0 ? \"+\" : \"\" }}{{ diff4 }}</span\n          >\n          <span class=\"scrore\">{{ score4 }}</span>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div>\n          <ul\n            class=\"cardsul\"\n            style=\"padding-left: 0; margin: 0; min-height: 9.375rem\"\n          >\n            <CardImage\n              v-for=\"item in arr\"\n              :key=\"item\"\n              class=\"card m-0\"\n              style=\"max-width: 25%\"\n              :class=\"{\n                shanshuo: ssArr.indexOf(item) >= 0,\n                flyin1: flyin1.indexOf(item) >= 0,\n                flyin2: flyin2.indexOf(item) >= 0,\n                flyout1: flyout1.indexOf(item) >= 0,\n                flyout2: flyout2.indexOf(item) >= 0,\n              }\"\n              :card-id=\"item\"\n            />\n          </ul>\n        </div>\n      </div>\n    </template>\n\n    <template #win-content>\n      <h1>\n        <img\n          class=\"avatar\"\n          :src=\"'./static/avatar/' + [32, 31, 29, 30][step % 4] + '.webp'\"\n        />WIN!\n      </h1>\n    </template>\n  </GameLayout>\n</template>\n\n<script>\nimport FishComponent from \"./fish.js\";\n\nconst component = FishComponent;\n\nexport default component;\n</script>\n\n<style scoped>\n@import url(\"./sum.css\");\n</style>\n","import { shuffleCards } from \"../utils/help.js\";\nimport { GameComponentPresets } from \"../utils/gameComponentFactory.js\";\nimport { getCardPlaceholderText } from \"../utils/cardUtils.js\";\nimport { defineAsyncComponent } from \"vue\";\n\n/**\n * message 组件 - 根据环境选择\n */\nconst message =\n  typeof window === \"undefined\"\n    ? { name: \"message\", template: \"<div>Mock message</div>\" }\n    : defineAsyncComponent(() => import(\"./message.vue\"));\n\nconst Fish = {\n  name: \"Fish\",\n  components: { message },\n  data() {\n    return {\n      title: \"FISHING CONTEST OF DOG TEAM\",\n      diff1: 0,\n      diff2: 0,\n      diff3: 0,\n      diff4: 0,\n      cards1: [],\n      cards2: [],\n      cards3: [],\n      cards4: [],\n      ssArr: [],\n      flyin1: [],\n      flyin2: [],\n      flyout1: [],\n      flyout2: [],\n      arr: [],\n      number: 54,\n    };\n  },\n  // 初始化\n  methods: {\n    init() {\n      this.cards1.splice(0);\n      this.cards2.splice(0);\n      this.cards3.splice(0);\n      this.cards4.splice(0);\n      let cards = this.cards1;\n      this.arr.splice(0);\n      for (let i = 0; i < this.number; i++) {\n        cards.push(i);\n      }\n      shuffleCards(cards, this.number);\n      this.cards2.push(...cards.splice(-14));\n      this.cards3.push(...cards.splice(-13));\n      this.cards4.push(...cards.splice(-13));\n    },\n    time(handle, time) {\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          resolve();\n          handle();\n        }, time);\n      });\n    },\n    async push(arr, item) {\n      arr.push(item);\n      // var type = (this.step % 2) == 0 ? 'flyout1' : 'flyout2'\n      // this[type].push(item)\n      // await this.time(() => {\n      //   this[type].splice(0)\n      // }, 500)\n    },\n    // 摸牌\n    async hit(cards, arr) {\n      var currentCard = cards.shift();\n      var value = currentCard >> 2;\n      if (value == 13) {\n        this.push(arr, currentCard);\n        this.ssArr.push(currentCard);\n        return await this.time(() => {\n          this.ssArr.splice(0);\n          for (let i = 1; i <= 4; i++) {\n            i != (this.step % 4) + 1 &&\n              arr.push(\n                ...this[\"cards\" + i].splice(0, currentCard == 53 ? 5 : 3),\n              );\n          }\n          // arr.push(...((this.step % 2) == 0 ? this.cards2 : this.cards1).splice(0, currentCard == 53 ? 5 : 3))\n        }, this.gameManager.autoStepDelay);\n      }\n      var index = value == 10 ? 0 : arr.findIndex((item) => item >> 2 == value);\n      this.push(arr, currentCard);\n      if (index < 0) {\n        return;\n      }\n      this.ssArr.push(currentCard, arr[index]);\n      await this.time(() => {\n        this.ssArr.splice(0);\n        cards.push(...arr.splice(index));\n      }, this.gameManager.autoStepDelay);\n    },\n    /**\n     * 渲染文本视图 - 显示当前游戏状态\n     * 用于终端交互式游戏\n     */\n    renderTextView() {\n      console.log('\\n╔════════════════════════════════════════════════╗');\n      console.log('║              钓鱼游戏 (Fish)                  ║');\n      console.log('╚════════════════════════════════════════════════╝');\n      console.log(`\\n步数: ${this.step}\\n`);\n      \n      // 显示4个玩家的牌 - 两行表格格式\n      // console.log('┌─────────┬─────────┬─────────┬─────────┐');\n      console.log('│ 玩家1(你) │  玩家2  │  玩家3  │  玩家4  │');\n      // console.log('├─────────┼─────────┼─────────┼─────────┤');\n      \n      // 获取每个玩家的牌数\n      const cardCounts = [];\n      for (let i = 1; i <= 4; i++) {\n        const cards = this[`cards${i}`];\n        cardCounts.push(cards.length > 0 ? `${cards.length}张` : '已出完');\n      }\n      \n      console.log(`│${cardCounts[0].padStart(9, ' ')}│${cardCounts[1].padStart(9, ' ')}│${cardCounts[2].padStart(9, ' ')}│${cardCounts[3].padStart(9, ' ')}│`);\n      // console.log('└─────────┴─────────┴─────────┴─────────┘');\n      \n      // 显示中央区域\n      console.log('\\n━━━ 中央区域 ━━━');\n      if (this.arr.length > 0) {\n        const cardTexts = this.arr.map(c => getCardPlaceholderText(c)).join(' ');\n        console.log(`  ${cardTexts}`);\n      } else {\n        console.log('  (空)');\n      }\n      \n      return '渲染完成';\n    },\n  },\n  computed: {\n    // 监听点数\n    score1: function () {\n      return this.cards1.length;\n    },\n    score2: function () {\n      return this.cards2.length;\n    },\n    score3: function () {\n      return this.cards3.length;\n    },\n    score4: function () {\n      return this.cards4.length;\n    },\n  },\n  watch: {\n    score4(val, old) {\n      this.diff4 = val - old;\n      this.time(() => {\n        this.diff4 = 0;\n      }, this.gameManager.autoStepDelay);\n    },\n    score3(val, old) {\n      this.diff3 = val - old;\n      this.time(() => {\n        this.diff3 = 0;\n      }, this.gameManager.autoStepDelay);\n    },\n    score2(val, old) {\n      this.diff2 = val - old;\n      this.time(() => {\n        this.diff2 = 0;\n      }, this.gameManager.autoStepDelay);\n    },\n    score1(val, old) {\n      this.diff1 = val - old;\n      this.time(() => {\n        this.diff1 = 0;\n      }, this.gameManager.autoStepDelay);\n    },\n  },\n};\n\n// 使用工厂函数创建增强的fish组件并导出\nexport default GameComponentPresets.simpleGame(Fish, 1000);\n","import { render } from \"./fish.vue?vue&type=template&id=a9f40ed8&scoped=true\"\nimport script from \"./fish.vue?vue&type=script&lang=js\"\nexport * from \"./fish.vue?vue&type=script&lang=js\"\n\nimport \"./fish.vue?vue&type=style&index=0&id=a9f40ed8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-a9f40ed8\"]])\n\nexport default __exports__","<template>\n  <GameLayout\n    v-bind=\"gameLayoutProps\"\n    :lose-subtitle=\"'NO EXP = 24'\"\n    @undo=\"undo\"\n    @goon=\"goon\"\n    @step=\"stepFn\"\n    @auto=\"pass\"\n  >\n    <template #game-content>\n      <div class=\"row center\" style1=\"overflow:scroll\">\n        <div class=\"flex-row center\">\n          <ul class=\"cardsul flex-row center\" style=\"padding-left: 0\">\n            <div class=\"flex-col center m-0\">\n              <!-- <span class=\"vertical m-0\">(</span> -->\n              <point24card :card=\"arr[0]\"></point24card>\n              <div class=\"flex-row\" v-show=\"step < 3\">\n                <span\n                  v-for=\"i in 4\"\n                  :key=\"i\"\n                  class=\"sign center\"\n                  :class=\"{ choose: sign == i }\"\n                  @click=\"canOperate && clickSign(i)\"\n                  >{{ signs[i] }}</span\n                >\n              </div>\n              <CardImage\n                v-if=\"sign != 0\"\n                card-id=\"bg\"\n                class=\"card align-center\"\n              />\n              <!-- <span class=\"vertical m-0\">)</span> -->\n              <span class=\"vertical m-0\">=</span>\n              <span class=\"m-0\">{{ calc(arr[0]).toFixed(2) }}</span>\n            </div>\n          </ul>\n          <ul\n            class=\"cardsul flex-row center\"\n            style=\"padding-left: 0; margin-left: 1.25rem\"\n          >\n            <div\n              v-for=\"(item, i) in arr\"\n              :key=\"i\"\n              class=\"align-center flex-wrap flex-row center\"\n            >\n              <div v-if=\"i != 0\" class=\"flex-row center m-0\">\n                <span\n                  class=\"sign center\"\n                  @click=\"canOperate && clickCard(item, i)\"\n                  >{{ signs[sign] }}</span\n                >\n                <point24card\n                  :card=\"item\"\n                  @click=\"canOperate && clickCard(item, i)\"\n                ></point24card>\n              </div>\n            </div>\n          </ul>\n        </div>\n      </div>\n    </template>\n  </GameLayout>\n</template>\n\n<script>\nimport Point24Component from \"./point24.js\";\n\nconst component = Point24Component;\n\nexport default component;\n</script>\n\n<style scoped>\n@import url(\"./sum.css\");\n</style>\n","import { shuffleCards } from \"../utils/help.js\";\nimport { GameComponentPresets } from \"../utils/gameComponentFactory.js\";\nimport { getCardPlaceholderText } from \"../utils/cardUtils.js\";\nimport { defineAsyncComponent } from \"vue\";\n\n/**\n * point24card 组件 - 根据环境选择\n */\nconst point24card =\n  typeof window === \"undefined\"\n    ? { name: \"point24card\", template: \"<div>Mock point24card</div>\" }\n    : defineAsyncComponent(() => import(\"./point24card.vue\"));\n// var opts    =  [ \" + \" , \" * \" , \" - \" , \" - \" , \" / \" , \" / \" ];\nvar opts = [1, 3, 2, 2, 4, 4];\n\nfunction process(nums, len, aim) {\n  for (var i = 0; i < len; i++) {\n    for (var j = i + 1; j < len; j++) {\n      var numij = [nums[i], nums[j]];\n      nums[j] = nums[len - 1];\n      for (var k = 0; k < 6; k++) {\n        // nums[i]  =   ' ( '   +  numij[k % 2 ]  +  opts[k]  +  numij[( ! (k % 2 ) * 1 )]  +   ' ) ' ;\n        nums[i] = [numij[k % 2], opts[k], numij[!(k % 2) * 1]];\n        if (process(nums, len - 1, aim)) {\n          return true;\n        }\n      }\n      nums[i] = numij[0];\n      nums[j] = numij[1];\n    }\n  }\n  // return  (len  ==   1 )  &&  (Math.abs(( new  Function( \" return \"   +  nums[ 0 ])())  -  aim)  <   0.0000001 );\n  return len == 1 && Math.abs(calc(nums[0]) - aim) < 0.0000001;\n}\n\nlet fns = [\n  () => {},\n  (a, b) => a + b,\n  (a, b) => a - b,\n  (a, b) => a * b,\n  (a, b) => a / b,\n];\n\nfunction calc(a) {\n  if (Number.isFinite(a)) {\n    return (a >> 2) + 1;\n  } else {\n    let [num1, sign, num2] = a;\n    num1 = calc(num1);\n    num2 = calc(num2);\n    return fns[sign](num1, num2);\n  }\n}\n\nfunction first(i) {\n  return Number.isFinite(i) ? i : first(i[0]);\n}\n\nconst Point24 = {\n  name: \"point24\",\n  components: { point24card },\n  data() {\n    return {\n      title: \"Point24\",\n      sign: 0,\n      cards1: [],\n      cards2: [0, 0, 0],\n      signs: [\"UP\", \"+\", \"-\", \"X\", \"/\"],\n      arr: [],\n      number: 52,\n    };\n  },\n  // 初始化\n  methods: {\n    init() {\n      this.sign = 0;\n      this.cards1.splice(0);\n      this.arr.splice(0);\n      let cards = this.cards1;\n      for (let i = 0; i < this.number; i++) {\n        cards.push(i);\n      }\n      shuffleCards(cards, this.number);\n      this.arr.push(...cards.splice(0, 4));\n      this.autoCalc(); // 恢复autoCalc调用\n    },\n    calc,\n    first,\n    process,\n    clickSign(sign) {\n      this.sign = this.sign == sign ? 0 : sign;\n    },\n    // 记录操作\n    recordOperation(type, data) {\n      this.gameManager.recordOperation({\n        type: type,\n        ...data,\n        timestamp: Date.now(),\n      });\n    },\n\n    // 处理撤销操作\n    handleUndo(operation) {\n      // 根据操作类型执行相应的撤销逻辑\n      switch (operation.type) {\n        case \"combine\":\n          // 撤销组合操作\n          this.cards2.splice(this.step, 1);\n          this.arr.splice(\n            this.arr.findIndex(\n              (a) => this.first(a) == this.first(operation.combined),\n            ),\n            1,\n            operation.left,\n            operation.right,\n          );\n          break;\n      }\n    },\n\n    // 重写clickCard方法，使用GameStateManager记录操作\n    clickCard(card, i) {\n      if (i == 0) {\n        console.log(`索引为0，直接返回`);\n        return;\n      }\n      if (i === -1) {\n        throw new Error(`没找到该卡片`);\n      }\n      if (this.sign != 0) {\n        let left = this.arr[0];\n        let right = this.arr.splice(i, 1)[0];\n        let combined = [left, this.sign, right];\n        this.arr.splice(0, 1, combined);\n        this.sign = 0;\n        this.cards2.splice(this.step, 1, combined);\n        this.recordOperation(\"combine\", {\n          left: left,\n          right: right,\n          combined: combined,\n        });\n      } else {\n        let temp = this.arr[0];\n        this.arr.splice(0, 1, this.arr[i]);\n        this.arr.splice(i, 1, temp);\n      }\n    },\n\n    // 重写stepFn方法\n    async stepFn() {\n      await this.gameManager.step(async () => {\n        if (this.step >= 3) {\n          console.log(`步数已达到3，检查游戏结果...`);\n          // this.autoCalc(); // 调用autoCalc来检查游戏结果\n          return;\n        }\n        let temp = this.cards2[this.step];\n        this.sign = 0;\n        const index1 = this.arr.findIndex((a) => this.first(a) == this.first(temp[0]));\n        this.clickCard(temp[0], index1);\n        await this.wait();\n        this.clickSign(temp[1]);\n        await this.wait();\n        const index2 = this.arr.findIndex((a) => this.first(a) == this.first(temp[2]));\n        this.clickCard(temp[2], index2);\n      });\n    },\n    autoCalc() {\n      if (this.step >= 3) {\n        try {\n          const result = this.calc(this.arr[0]);\n          if (result == 24) {\n            console.log(\"游戏胜利！\");\n            this.gameManager.setWin();\n          } else {\n            console.log(\"游戏失败！\");\n            this.gameManager.setLose();\n          }\n        } catch (error) {\n          console.log(\"计算过程出错:\", error.message);\n          this.gameManager.stopAuto();\n        }\n        return;\n      }\n      let step = this.step;\n      let temp = [...this.arr];\n      let f = this.process(temp, temp.length, 24);\n      if (!f) {\n        this.gameManager.setLose();\n        return;\n      }\n      this.cards2.splice(2, 1, temp[0]);\n      if (step >= 2) {\n        return;\n      }\n      let temp00 = temp[0][0],\n        temp02 = temp[0][2];\n      let l = Number.isFinite(temp00);\n      let r = Number.isFinite(temp02);\n\n      this.cards2.splice(\n        1,\n        1,\n        l\n          ? temp02\n          : r\n            ? temp[0][0]\n            : first(temp00) == first(this.cards2[0])\n              ? temp02\n              : temp00,\n      );\n      if (step >= 1) {\n        return;\n      }\n\n      this.cards2.splice(\n        0,\n        1,\n        l\n          ? Number.isFinite(temp02[0])\n            ? temp02[2]\n            : temp02[0]\n          : r\n            ? Number.isFinite(temp00[0])\n              ? temp00[2]\n              : temp00[0]\n            : temp00,\n      );\n    },\n    /**\n     * 将公式结构转换为可读字符串\n     * 递归处理嵌套的公式结构，类似于point24card组件的渲染方式\n     */\n    formulaToString(formula) {\n      if (Number.isFinite(formula)) {\n        // 如果是数字，直接返回牌的文本表示\n        return getCardPlaceholderText(formula);\n      } else if (Array.isArray(formula) && formula.length === 3) {\n        // 如果是数组 [左操作数, 运算符, 右操作数]\n        const [left, operator, right] = formula;\n        const operatorSymbol = this.signs[operator] || this.signs[0];\n        const leftStr = this.formulaToString(left);\n        const rightStr = this.formulaToString(right);\n        return `(${leftStr} ${operatorSymbol} ${rightStr})`;\n      } else {\n        // 其他情况，返回字符串表示\n        return String(formula);\n      }\n    },\n\n    /**\n     * 渲染文本视图 - 显示当前游戏状态\n     * 用于终端交互式游戏\n     */\n    renderTextView() {\n      console.log('\\n╔════════════════════════════════════════════════╗');\n      console.log('║              24点游戏 (Point24)               ║');\n      console.log('╚════════════════════════════════════════════════╝');\n      console.log(`\\n步数: ${this.step}\\n`);\n      \n      // 显示4张牌（显示完整公式而不仅仅是第一张牌）\n      console.log('━━━ 当前牌面 ━━━');\n      const cards = [];\n      for (let i = 0; i < 4; i++) {\n        if (this.arr[i] !== undefined) {\n          const formulaStr = this.formulaToString(this.arr[i]);\n          cards.push(`[${i}] ${formulaStr}`);\n        }\n      }\n      console.log(`  ${cards.join('  ')}\\n`);\n      \n      // 显示运算符\n      console.log('━━━ 可用运算符 ━━━');\n      console.log('  [+] 加  [-] 减  [×] 乘  [÷] 除\\n');\n      \n      // 显示计算历史\n      if (this.history && this.history.length > 0) {\n        console.log('━━━ 计算历史 ━━━');\n        this.history.forEach((h, idx) => {\n          console.log(`  ${idx + 1}. ${h}`);\n        });\n        console.log('');\n      }\n      \n      // 显示当前结果\n      if (this.result !== undefined && this.result !== null) {\n        console.log(`当前结果: ${this.result}`);\n        if (this.result === 24) {\n          console.log('🎉 恭喜！达到24点！');\n        }\n      }\n      \n      return '渲染完成';\n    },\n    \n    /**\n     * 获取当前可用的操作列表\n     * 用于终端交互式游戏\n     * 使用工厂函数中统一实现的方法\n     */\n  },\n};\n\n// 使用工厂函数创建增强的point24组件并导出\nexport default GameComponentPresets.puzzleGame(Point24, 800);\n","import { render } from \"./point24.vue?vue&type=template&id=eaeab1bc&scoped=true\"\nimport script from \"./point24.vue?vue&type=script&lang=js\"\nexport * from \"./point24.vue?vue&type=script&lang=js\"\n\nimport \"./point24.vue?vue&type=style&index=0&id=eaeab1bc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-eaeab1bc\"]])\n\nexport default __exports__","<template>\n  <GameLayout\n    v-bind=\"gameLayoutProps\"\n    :lose-title=\"''\"\n    :lose-subtitle=\"'YOUR LUCKY CLASSES:'\"\n    :lose-buttons=\"[\n      {\n        text: 'GO ON',\n        action: 'goon',\n        callback: goon,\n        disabled: false,\n      },\n    ]\"\n    :lose-modal-style=\"{ backgroundColor: 'rgba(0,0,0,0.8)' }\"\n    @step=\"stepFn\"\n    @auto=\"pass\"\n    @goon=\"goon\"\n  >\n    <template #game-content>\n      <div class=\"row\">\n        <div class=\"center\">\n          <ul\n            class=\"cardsul\"\n            style=\"\n              padding-left: 0;\n              max-width: 43.125rem;\n              justify-content: space-between;\n              margin-top: 11.25rem;\n            \"\n          >\n            <li\n              v-for=\"(item, i) in arr\"\n              :key=\"i\"\n              class=\"cards m-0\"\n              :class=\"'cards' + i\"\n            >\n              <CardImage\n                v-for=\"(card, j) in item\"\n                :key=\"card\"\n                class=\"m-0 card abso\"\n                :style=\"{\n                  top: ((month == i ? j : 1 + j) * 30) / 16 + 'rem',\n                  left: 0,\n                }\"\n                :card-id=\"\n                  cards2[i] > j ||\n                  (month == i && ((month == 12 && j == 3) || j == 4))\n                    ? card\n                    : 'bg'\n                \"\n              />\n              <div\n                v-show=\"i == 12 && month != i\"\n                class=\"m-0 card\"\n                style=\"background-color: #719192\"\n              ></div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </template>\n\n    <template #lose-cards>\n      <div class1=\"row\" style=\"margin-top: 0.625rem\">\n        <div>\n          <ul class=\"cardsul\" style=\"padding-left: 0; max-width: 46.25rem\">\n            <CardImage\n              v-for=\"(item, i) in visibleCards\"\n              :key=\"i\"\n              :card-id=\"item.cardId\"\n              class=\"card\"\n            />\n          </ul>\n        </div>\n      </div>\n    </template>\n  </GameLayout>\n</template>\n\n<script>\nimport MonthComponent from \"./month.js\";\n\nconst component = {\n  ...MonthComponent,\n  computed: {\n    ...MonthComponent.computed,\n    visibleCards() {\n      return this.cards2\n        .map((item, i) => ({ originalItem: item, index: i, cardId: i * 4 + 1 }))\n        .filter(item => item.originalItem >= 4 && item.index < 12);\n    }\n  }\n};\n\nexport default component;\n</script>\n\n<style scoped>\n@import url(\"./sum.css\");\n\n.cards12 {\n  position: absolute;\n  top: -11.25rem;\n  height: 9.375rem;\n  min-width: 25rem;\n  width: 100%;\n  height: 9.375rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n}\n.cards12 .card {\n  position: static;\n}\n</style>\n","import { shuffleCards } from \"../utils/help.js\";\nimport { GameComponentPresets } from \"../utils/gameComponentFactory.js\";\nimport { getCardPlaceholderText } from \"../utils/cardUtils.js\";\n\nconst Month = {\n  name: \"Month\",\n  data() {\n    return {\n      title: \"Month\",\n      month: 12,\n      cards1: [],\n      cards2: [],\n      arr: [],\n      number: 52,\n    };\n  },\n  // 初始化\n  methods: {\n    init() {\n      this.month = 12;\n      this.cards1.splice(0);\n      this.cards2.splice(0);\n      this.arr.splice(0);\n      let cards = this.cards1;\n      for (let i = 0; i < this.number; i++) {\n        cards.push(i);\n      }\n      shuffleCards(cards, this.number);\n      for (let i = 0; i < this.number >> 2; i++) {\n        this.cards2.push(0);\n        this.arr.push(cards.splice(0, 4));\n      }\n    },\n    async push(arr, item) {\n      arr.push(item);\n    },\n    // 摸牌\n    async hit() {\n      let currentCard = this.arr[this.month].pop();\n      var value = currentCard >> 2;\n      this.arr[value].unshift(currentCard);\n      this.month = value;\n      this.cards2[value]++;\n    },\n    \n    /**\n     * 渲染文本视图 - 显示当前游戏状态\n     * 用于终端交互式游戏\n     */\n    renderTextView() {\n      console.log('\\n╔════════════════════════════════════════════════╗');\n      console.log('║              月份游戏 (Month)                 ║');\n      console.log('╚════════════════════════════════════════════════╝');\n      console.log(`\\n步数: ${this.step}\\n`);\n      \n      // 显示12个月份位置\n      const months = ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'];\n      for (let i = 0; i < 12; i++) {\n        const count = this.cards2[i];\n        console.log(`  [${months[i]}] ` + this.arr[i].map((c, i) => `${i < count || i >= 4 ? getCardPlaceholderText(c) : \"[?]\"}`).join(' ') + (count >= 4 ? ' [✓] 已完成' : ''));\n      }\n      \n      // 显示第13个位置\n      const count13 = this.cards2[12];\n      console.log(`  [牌堆] ` + this.arr[12].map((c, i) => `${i < count13 || i >= 3 ? getCardPlaceholderText(c) : \"[?]\"}`).join(' ') + (count13 >= 4 ? ' [✓] 已完成' : `剩余 ${4 - count13} 次机会`));\n      \n      return '渲染完成';\n    },\n    \n    /**\n     * 获取当前可用的操作列表\n     * 用于终端交互式游戏\n     * 使用工厂函数中统一实现的方法\n     */\n  },\n};\n\n// 使用工厂函数创建增强的month组件并导出\nexport default GameComponentPresets.simpleGame(Month, 1000);\n","import { render } from \"./month.vue?vue&type=template&id=cebf8f72&scoped=true\"\nimport script from \"./month.vue?vue&type=script&lang=js\"\nexport * from \"./month.vue?vue&type=script&lang=js\"\n\nimport \"./month.vue?vue&type=style&index=0&id=cebf8f72&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-cebf8f72\"]])\n\nexport default __exports__","<template>\n  <GameLayout\n    v-bind=\"gameLayoutProps\"\n    :lose-subtitle=\"'NO PAIR'\"\n    @undo=\"undo\"\n    @goon=\"goon\"\n    @step=\"stepFn\"\n    @auto=\"pass\"\n  >\n    <template #game-content>\n      <div class=\"row\">\n        <div>\n          <ul\n            class=\"cardsul cards\"\n            style=\"\n              padding-left: 0;\n              width: 100%;\n              height: 46.875rem;\n              max-width: 31.25rem;\n              margin: auto;\n            \"\n          >\n            <CardImage\n              v-for=\"(item, i) in cards1\"\n              :key=\"i\"\n              v-show=\"!done(item)\"\n              class=\"card abso\"\n              :style=\"map[i]\"\n              style=\"width: 20%; height: 9.375rem; margin: 0\"\n              :card-id=\"check(i) ? item : 'bg'\"\n              @click=\"canOperate && clickCard(item, i)\"\n              :class=\"{ shanshuo: sign == item }\"\n            />\n          </ul>\n        </div>\n      </div>\n    </template>\n  </GameLayout>\n</template>\n\n<script>\nimport TortoiseComponent from \"./Tortoise.js\";\n\nconst component = TortoiseComponent;\n\nexport default component;\n</script>\n\n<style scoped>\n@import url(\"./sum.css\");\n</style>\n","import { shuffleCards } from \"../utils/help.js\";\nimport { GameComponentPresets } from \"../utils/gameComponentFactory.js\";\nimport { getCardPlaceholderText } from \"../utils/cardUtils.js\";\n\nconst Tortoise = {\n  name: \"Tortoise\",\n  data() {\n    return {\n      title: \"Tortoise\",\n      sign: -1,\n      cards1: [],\n      next: [],\n      number: 54,\n      map: [\n        { \"z-index\": 0, left: \"10%\", top: \"4.6875rem\", up: [16, 30] },\n        { \"z-index\": 0, left: \"30%\", top: \"4.6875rem\", up: [16, 17, 31] },\n        { \"z-index\": 0, left: \"50%\", top: \"4.6875rem\", up: [17, 18, 31] },\n        { \"z-index\": 0, left: \"70%\", top: \"4.6875rem\", up: [18, 32] },\n        { \"z-index\": 0, left: \"10%\", top: \"14.0625rem\", up: [16, 19, 37] },\n        { \"z-index\": 0, left: \"30%\", top: \"14.0625rem\", up: [16, 17, 19, 20] },\n        { \"z-index\": 0, left: \"50%\", top: \"14.0625rem\", up: [17, 18, 20, 21] },\n        { \"z-index\": 0, left: \"70%\", top: \"14.0625rem\", up: [18, 21, 33] },\n        { \"z-index\": 0, left: \"10%\", top: \"23.4375rem\", up: [19, 22, 37] },\n        { \"z-index\": 0, left: \"30%\", top: \"23.4375rem\", up: [19, 20, 22, 23] },\n        { \"z-index\": 0, left: \"50%\", top: \"23.4375rem\", up: [20, 21, 23, 24] },\n        { \"z-index\": 0, left: \"70%\", top: \"23.4375rem\", up: [21, 24, 33] },\n        { \"z-index\": 0, left: \"10%\", top: \"32.8125rem\", up: [22, 36] },\n        { \"z-index\": 0, left: \"30%\", top: \"32.8125rem\", up: [22, 23, 35] },\n        { \"z-index\": 0, left: \"50%\", top: \"32.8125rem\", up: [23, 24, 35] },\n        { \"z-index\": 0, left: \"70%\", top: \"32.8125rem\", up: [24, 34] },\n        { \"z-index\": 1, left: \"20%\", top: \"9.375rem\", up: [25] },\n        { \"z-index\": 1, left: \"40%\", top: \"9.375rem\", up: [25, 26] },\n        { \"z-index\": 1, left: \"60%\", top: \"9.375rem\", up: [26] },\n        { \"z-index\": 1, left: \"20%\", top: \"18.75rem\", up: [25, 27] },\n        { \"z-index\": 1, left: \"40%\", top: \"18.75rem\", up: [25, 26, 27, 28] },\n        { \"z-index\": 1, left: \"60%\", top: \"18.75rem\", up: [26, 28] },\n        { \"z-index\": 1, left: \"20%\", top: \"28.125rem\", up: [27] },\n        { \"z-index\": 1, left: \"40%\", top: \"28.125rem\", up: [27, 28] },\n        { \"z-index\": 1, left: \"60%\", top: \"28.125rem\", up: [28] },\n        { \"z-index\": 2, left: \"30%\", top: \"14.0625rem\", up: [29] },\n        { \"z-index\": 2, left: \"50%\", top: \"14.0625rem\", up: [29] },\n        { \"z-index\": 2, left: \"30%\", top: \"23.4375rem\", up: [29] },\n        { \"z-index\": 2, left: \"50%\", top: \"23.4375rem\", up: [29] },\n        { \"z-index\": 3, left: \"40%\", top: \"18.75rem\", up: [] },\n        { \"z-index\": 1, left: \"0\", top: \"0\", up: [38] },\n        { \"z-index\": 1, left: \"40%\", top: \"0\", up: [39] },\n        { \"z-index\": 1, left: \"80%\", top: \"0\", up: [40] },\n        { \"z-index\": 1, left: \"80%\", top: \"18.75rem\", up: [41] },\n        { \"z-index\": 1, left: \"80%\", top: \"37.5rem\", up: [42] },\n        { \"z-index\": 1, left: \"40%\", top: \"37.5rem\", up: [43] },\n        { \"z-index\": 1, left: \"0\", top: \"37.5rem\", up: [44] },\n        { \"z-index\": 1, left: \"0\", top: \"18.75rem\", up: [45] },\n        { \"z-index\": 2, left: \"0\", top: \"2.3438rem\", up: [46] },\n        { \"z-index\": 2, left: \"35%\", top: \"0\", up: [47] },\n        { \"z-index\": 2, left: \"75%\", top: \"0\", up: [48] },\n        { \"z-index\": 2, left: \"80%\", top: \"16.4063rem\", up: [49] },\n        { \"z-index\": 2, left: \"80%\", top: \"35.1563rem\", up: [50] },\n        { \"z-index\": 2, left: \"45%\", top: \"37.5rem\", up: [51] },\n        { \"z-index\": 2, left: \"5%\", top: \"37.5rem\", up: [52] },\n        { \"z-index\": 2, left: \"0\", top: \"21.0938rem\", up: [53] },\n        { \"z-index\": 3, left: \"0\", top: \"4.6875rem\", up: [] },\n        { \"z-index\": 3, left: \"30%\", top: \"0\", up: [] },\n        { \"z-index\": 3, left: \"70%\", top: \"0\", up: [] },\n        { \"z-index\": 3, left: \"80%\", top: \"14.0625rem\", up: [] },\n        { \"z-index\": 3, left: \"80%\", top: \"32.8125rem\", up: [] },\n        { \"z-index\": 3, left: \"50%\", top: \"37.5rem\", up: [] },\n        { \"z-index\": 3, left: \"10%\", top: \"37.5rem\", up: [] },\n        { \"z-index\": 3, left: \"0\", top: \"23.4375rem\", up: [] },\n      ],\n    };\n  },\n  // 初始化\n  methods: {\n    init() {\n      this.sign = -1;\n      this.cards1.splice(0);\n      let cards = this.cards1;\n      for (let i = 0; i < this.number; i++) {\n        cards.push(i);\n      }\n      shuffleCards(cards, this.number);\n      this.autoCalc();\n    },\n    async stepFn() {\n      if (this.step >= this.number) {\n        return;\n      }\n      await this.gameManager.step(async () => {\n        let next,\n          next_i,\n          max = -1;\n        let fn = (temp) => {\n          if (temp == this.sign) {\n            return;\n          }\n          if (this.done(temp)) {\n            return;\n          }\n          let index = this.cards1.indexOf(temp);\n          if (this.check(index) && this.map[index][\"z-index\"] > max) {\n            next = temp;\n            next_i = index;\n            max = this.map[index][\"z-index\"];\n          }\n        };\n        if (this.sign != -1 && this.sign << 2 != this.next[0] << 2) {\n          let card = this.sign >> 2;\n          for (let i = 0; i < 4; i++) {\n            let temp = card * 4 + i;\n            fn(temp);\n          }\n        }\n        if (max < 0) {\n          for (let temp of this.next) {\n            fn(temp);\n          }\n        }\n        this.clickCard(next, next_i);\n      });\n    },\n    check(i) {\n      return (\n        this.map[i] &&\n        this.map[i].up.findIndex((up) => !this.done(this.cards1[up])) < 0\n      );\n    },\n    done(card) {\n      return this.gameManager.history.indexOf(card) >= 0;\n    },\n    clickCard(card, i) {\n      if (!this.check(i)) {\n        return;\n      }\n      if (this.sign == card) {\n        this.sign = -1;\n      } else if (this.sign >> 2 != card >> 2) {\n        this.sign = card;\n      } else {\n        this.gameManager.recordOperation(this.sign);\n        this.gameManager.recordOperation(card);\n        this.sign = -1;\n      }\n    },\n    undo() {\n      this.sign = -1;\n      this.gameManager.undo();\n      this.gameManager.undo();\n    },\n    autoCalc() {\n      let step = this.step;\n      if (step % 2 == 1) {\n        return;\n      }\n      if (step >= this.number) {\n        this.gameManager.setWin();\n        return;\n      }\n      let temp = [],\n        i,\n        max = -1,\n        m = -1,\n        d = false;\n      for (i = this.number - 1; i >= 0; i--) {\n        if (!this.done(i)) {\n          let card = this.cards1.indexOf(i);\n          if (this.check(card)) {\n            temp.push(i);\n            if (this.map[card][\"z-index\"] > max) {\n              max = this.map[card][\"z-index\"];\n            }\n          }\n        } else {\n          d = true;\n        }\n        if (i % 4 == 0) {\n          if (temp.length > 1) {\n            if (d) {\n              this.next = temp;\n              return;\n            }\n            if (max > m) {\n              this.next = temp;\n              m = max;\n            }\n          }\n          max = -1;\n          temp = [];\n          d = false;\n        }\n      }\n      if (m < 0) {\n        this.gameManager.setLose();\n      }\n    },\n    \n    /**\n     * 渲染文本视图 - 字符画形式显示当前游戏状态\n     * 通过16格子(4x4)系统模拟浏览器渲染效果，使用细线边框\n     * 画布20x20，卡牌4x4，后渲染的自然覆盖先渲染的\n     */\n    renderTextView() {\n      console.log('\\n╔════════════════════════════════════════════════╗');\n      console.log('║              龟兔赛跑 (Tortoise)              ║');\n      console.log('╚════════════════════════════════════════════════╝');\n      console.log(`\\n步数: ${this.step} / ${this.number}`);\n      console.log(`已配对: ${this.step} 张 | 剩余: ${this.number - this.step} 张\\n`);\n      \n      // 图例\n      console.log('\\n图例:');\n      console.log('  ┌──┐ = 卡牌边框  ▄ = 选中卡牌边框 ♥5 = 可点击卡牌内容  ·· = 不可点击卡牌');\n      \n      // 显示下一步提示\n      if (this.next && this.next.length > 0) {\n        const nextCards = this.next.map(c => getCardPlaceholderText(c)).join(', ');\n        console.log(`\\n💡 提示: 可配对的卡片: ${nextCards}`);\n      }\n      \n      if (this.sign !== -1) {\n        const signIndex = this.cards1.indexOf(this.sign);\n        const signCard = getCardPlaceholderText(this.sign);\n        console.log(`🎯 当前选中: ${signCard} (位置 ${signIndex})\\n`);\n      }\n      \n      // 创建字符画布：20行 × 20列\n      const CANVAS_ROWS = 20;\n      const CANVAS_COLS = 20;\n      const canvas = Array(CANVAS_ROWS).fill(null).map(() => Array(CANVAS_COLS).fill('·'));\n      \n      // 卡牌尺寸（字符单位）\n      const CARD_ROWS = 4;  // 4行\n      const CARD_COLS = 4;  // 4列\n      \n      // 布局参数（来自CSS）\n      const LAYOUT_WIDTH = 100;  // 100%\n      const LAYOUT_HEIGHT = 46.875; // rem\n      \n      // 收集所有未完成的卡牌，按z-index排序（从低到高）\n      const activeCards = [];\n      this.cards1.forEach((cardId, posIdx) => {\n        if (!this.done(cardId)) {\n          const mapInfo = this.map[posIdx];\n          const canClick = this.check(posIdx);\n          const isSelected = cardId === this.sign;\n          \n          activeCards.push({\n            cardId,\n            posIdx,\n            left: parseFloat(mapInfo.left),\n            top: parseFloat(mapInfo.top),\n            zIndex: mapInfo[\"z-index\"],\n            canClick,\n            isSelected,\n            cardText: getCardPlaceholderText(cardId)\n          });\n        }\n      });\n      \n      // 按z-index升序排列（底层先渲染）\n      activeCards.sort((a, b) => a.zIndex - b.zIndex);\n      \n      // 逐层渲染卡牌（后渲染的自然覆盖先渲染的）\n      activeCards.forEach(card => {\n        // 计算卡牌在字符画布中的位置\n        const startCol = Math.round((card.left / LAYOUT_WIDTH) * (CANVAS_COLS - CARD_COLS));\n        const startRow = Math.round((card.top / LAYOUT_HEIGHT) * (CANVAS_ROWS - CARD_ROWS));\n        \n        // 确保位置在有效范围内\n        const safeStartRow = Math.max(0, Math.min(startRow, CANVAS_ROWS - CARD_ROWS));\n        const safeStartCol = Math.max(0, Math.min(startCol, CANVAS_COLS - CARD_COLS));\n        \n        // 渲染16格子卡牌\n        for (let row = 0; row < CARD_ROWS; row++) {\n          for (let col = 0; col < CARD_COLS; col++) {\n            const canvasRow = safeStartRow + row;\n            const canvasCol = safeStartCol + col;\n            \n            if (canvasRow < CANVAS_ROWS && canvasCol < CANVAS_COLS) {\n              let char = ' ';\n              \n              if (row === 0) {\n                // 第一行：上边框\n                if (this.sign == card.cardId) {\n                  char = \"▄\";\n                } else if (col === 0) {\n                  char = '┌'; // 左上角\n                } else if (col === CARD_COLS - 1) {\n                  char = '┐'; // 右上角\n                } else {\n                  char = '──'; // 上边框（占2个字符宽度）\n                }\n              } else if (row === CARD_ROWS - 1) {\n                // 最后一行：下边框\n                if (this.sign == card.cardId) {\n                  char = \"▀\";\n                } else if (col === 0) {\n                  char = '└'; // 左下角\n                } else if (col === CARD_COLS - 1) {\n                  char = '┘'; // 右下角\n                } else {\n                  char = '──'; // 下边框（占2个字符宽度）\n                }\n              } else if (col === 0 || col === CARD_COLS - 1) {\n                // 左右边框\n                char = this.sign == card.cardId? \"█\" : '│';\n              } else if (card.canClick) {\n                // 可点击卡牌的内部内容\n                if (row === 1 && col === 1) {\n                  char = card.cardText[0] || ' '; // 花色\n                } else if (row === 1 && col === 2) {\n                  char = card.cardText[1] || ' '; // 点数\n                } else if (row === 2 && col === 1) {\n                  char = card.cardText[1] || ' '; // 下方点数\n                } else if (row === 2 && col === 2) {\n                  char = card.cardText[0] || ' '; // 下方花色\n                }\n              } else {\n                // 不可点击卡牌的内部内容\n                if (row === 1 && (col === 1 || col === 2)) {\n                  char = '·'; // 中间点\n                } else if (row === 2 && (col === 1 || col === 2)) {\n                  char = '·'; // 下方点\n                }\n              }\n              \n              // 处理双字符边框\n              if (char === '──') {\n                canvas[canvasRow][canvasCol] = '─';\n                if (canvasCol + 1 < CANVAS_COLS) {\n                  canvas[canvasRow][canvasCol + 1] = '─';\n                }\n              } else {\n                canvas[canvasRow][canvasCol] = char;\n              }\n            }\n          }\n        }\n      });\n      \n      // 输出字符画\n      console.log('\\n━━━ 游戏布局 (字符画) ━━━');\n      console.log('画布: 20行 × 20列，每张卡牌: 4行 × 4列\\n');\n      \n      // 添加边框\n      const borderedCanvas = [];\n      borderedCanvas.push('┌' + '─'.repeat(CANVAS_COLS) + '┐');\n      \n      canvas.forEach(row => {\n        borderedCanvas.push('│' + row.join('') + '│');\n      });\n      \n      borderedCanvas.push('└' + '─'.repeat(CANVAS_COLS) + '┘');\n      \n      console.log(borderedCanvas.join('\\n'));\n      \n      return '字符画渲染完成';\n    },\n    \n    /**\n     * 获取当前可用的操作列表\n     * 用于终端交互式游戏\n     * 使用工厂函数中统一实现的方法\n     */\n  },\n};\n\n// 使用工厂函数创建增强的Tortoise组件并导出\nexport default GameComponentPresets.cardGame(Tortoise, 500);\n","import { render } from \"./Tortoise.vue?vue&type=template&id=0ad3d044&scoped=true\"\nimport script from \"./Tortoise.vue?vue&type=script&lang=js\"\nexport * from \"./Tortoise.vue?vue&type=script&lang=js\"\n\nimport \"./Tortoise.vue?vue&type=style&index=0&id=0ad3d044&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0ad3d044\"]])\n\nexport default __exports__","<template>\n  <GameLayout\n    v-bind=\"gameLayoutProps\"\n    :lose-subtitle=\"n + '/' + (number + 1) * 4\"\n    :lose-buttons=\"[\n      {\n        text: 'RESTART',\n        action: 'goon',\n        callback: goon,\n        disabled: false,\n      },\n      {\n        text: 'UNDO',\n        action: 'undo',\n        callback: undo,\n        disabled: undoDisabled,\n      },\n    ]\"\n    @undo=\"undo\"\n    @goon=\"goon\"\n    @step=\"stepFn\"\n    @auto=\"pass\"\n  >\n    <template #game-content>\n      <div class=\"row\">\n        <div>\n          <ul\n            class=\"cardsul flex-col\"\n            :style=\"{ height: (150 * (number + 1)) / 16 + 'rem' }\"\n            style=\"\n              padding-left: 0;\n              width: 100%;\n              max-width: 31.25rem;\n              margin: 0 auto;\n              position: static;\n            \"\n          >\n            <CardImage\n              v-for=\"(item, i) in cards1\"\n              :key=\"i\"\n              class=\"card m-0\"\n              style=\"width: 25%; height: 9.375rem\"\n              :card-id=\"item\"\n              :hide=\"item < 0\"\n              @click=\"canOperate && (item >= 0 ? clickCard(item) : cards1[i - 1] >= 4 && clickSign(i))\"\n              :class=\"{ shanshuo: item >= 0 && canMoveCard(item) }\"\n            >\n              <span v-if=\"cards1[i - 1] >= 4\" class=\"m-0\">{{ getCurrentCandidateCard(i) }}</span>\n            </CardImage>\n          </ul>\n        </div>\n      </div>\n    </template>\n  </GameLayout>\n</template>\n\n<script>\nimport SortComponent from \"./Sort.js\";\n\nconst component = SortComponent;\n\nexport default component;\n</script>\n\n<style scoped>\n@import url(\"./sum.css\");\n</style>\n","// 候选卡片评估工具函数\n\n/**\n * 创建候选对象，延迟计算特征值\n * @param {number} targetCard - 目标卡片\n * @param {number} slotIndex - 空位索引\n * @param {Object} context - 上下文对象，包含必要的方法和属性\n * @param {number} candidatePriority - 候选优先级\n * @param {Object} t - 临时对象信息\n * @param {number} currentTargetIdx - 当前目标索引\n * @param {Object} ruleBasedScore - 基于规则的评分对象（可选）\n * @returns {Object} 候选对象\n */\nexport function createCandidate(targetCard, slotIndex, context, candidatePriority, t, currentTargetIdx, ruleBasedScore = null) {\n  const currentCandidate = {\n    targetCard,\n    slotIndex,\n    ruleBasedScore: ruleBasedScore,  // 保存rule-based评分\n    // 统一使用大于比较，对需要小于比较的特征取反\n    _getters: [\n      // 【新规则第1优先级】空位优先级（rank越小越优先）\n      () => {\n        if (ruleBasedScore) {\n          return ruleBasedScore.slotPriority;\n        }\n        // 如果没有rule-based评分，使用原有的priority\n        return candidatePriority;\n      },\n      // 【新规则第2优先级】排除标记（被排除的候选排在后面）\n      () => {\n        if (ruleBasedScore && ruleBasedScore.excludeReason) {\n          return -1000000; // 大负数使其排在最后\n        }\n        return 0;\n      },\n      // 卡片在列中的位置 (d=0.057, ↓)\n      () => {\n          if (currentCandidate._feature2 === undefined) {\n          currentCandidate._feature2 = currentTargetIdx % (context.number + 1);\n          }\n          return -currentCandidate._feature2;\n      },\n      // 【新规则第3优先级】matchNextCard得分\n      () => {\n        if (ruleBasedScore) {\n          return ruleBasedScore.matchNextCard;\n        }\n        return 0;\n      },\n      // 【新规则第4优先级】候选卡所在列前后相邻的空位数\n      () => {\n        if (ruleBasedScore) {\n          return ruleBasedScore.adjacentEmptyCount;\n        }\n        return 0;\n      },\n      // 【新规则第5优先级】候选卡所在列空位总数\n      () => {\n        if (ruleBasedScore) {\n          return ruleBasedScore.columnEmptyCount;\n        }\n        return 0;\n      },\n      // 【原算法优先级】保留作为后续tiebreaker\n      () => {\n        return candidatePriority;\n      },\n      // 【原算法深度】\n      () => {\n        if (!currentCandidate._deep) {\n          currentCandidate._deep = t.deep;\n        }\n        return currentCandidate._deep;\n      },\n      // 获胜概率 (分治评估，正常比较)\n      () => {\n        if (currentCandidate._winProbability === undefined) {\n          // 使用分治算法评估移动后的获胜可达性\n          const simulatedCards = [...context.cards1];\n          const slotId = simulatedCards[t.index];\n          simulatedCards[currentTargetIdx] = slotId;\n          simulatedCards[t.index] = targetCard;\n          currentCandidate._winProbability = context.estimateWinProbability(simulatedCards);\n        }\n        return currentCandidate._winProbability;\n      },\n      // 距离 (取反，因为原逻辑是小于比较)\n      () => {\n        if (!currentCandidate._diff) {\n          currentCandidate._diff = Math.abs(\n            (targetCard >> 2) - (context.number - 1) + ((t.index % (context.number + 1)))\n          );\n        }\n        return -currentCandidate._diff; // 取反，使小于比较变为大于比较\n      },\n        // 1. 卡片等级 (d=0.064, ↑)\n        () => {\n            if (currentCandidate._feature0 === undefined) {\n            currentCandidate._feature0 = targetCard >> 2;\n            }\n            return currentCandidate._feature0;\n        },\n        // 2. 卡片花色 (d=0.052, ↑)\n        () => {\n            if (currentCandidate._feature1 === undefined) {\n            currentCandidate._feature1 = targetCard % 4;\n            }\n            return currentCandidate._feature1;\n        },\n        // 4. 空位在列中的位置 (d=0.213, ↓)\n        () => {\n            if (currentCandidate._feature3 === undefined) {\n            currentCandidate._feature3 = t.index % (context.number + 1);\n            }\n            return -currentCandidate._feature3;\n        },\n        // 5. 空位前牌等级 (d=0.064, ↑)\n        () => {\n            if (currentCandidate._feature4 === undefined) {\n            currentCandidate._feature4 = t.card >> 2;\n            }\n            return currentCandidate._feature4;\n        },\n        // 6. 卡片所在列的空位数 (d=0.003, ↑)\n        () => {\n            if (currentCandidate._feature5 === undefined) {\n            currentCandidate._feature5 = context.countEmptyInColumn(context.cards1, Math.floor(currentTargetIdx / (context.number + 1)));\n            }\n            return currentCandidate._feature5;\n        },\n        // 7. 卡片上方的空位数 (d=0.160, ↑)\n        () => {\n            if (currentCandidate._feature6 === undefined) {\n            currentCandidate._feature6 = context.countEmptyAbove(context.cards1, currentTargetIdx);\n            }\n            return currentCandidate._feature6;\n        },\n        // 8. 卡片下方的空位数 (d=0.098, ↓)\n        () => {\n            if (currentCandidate._feature7 === undefined) {\n            currentCandidate._feature7 = context.countEmptyBelow(context.cards1, currentTargetIdx);\n            }\n            return -currentCandidate._feature7;\n        },\n        // 9. 空位所在列的空位数 (d=0.138, ↓)\n        () => {\n            if (currentCandidate._feature8 === undefined) {\n            currentCandidate._feature8 = context.countEmptyInColumn(context.cards1, Math.floor(t.index / (context.number + 1)));\n            }\n            return -currentCandidate._feature8;\n        },\n        // 10. 空位上方的空位数 (d=0.043, ↑)\n        () => {\n            if (currentCandidate._feature9 === undefined) {\n            currentCandidate._feature9 = context.countEmptyAbove(context.cards1, t.index);\n            }\n            return currentCandidate._feature9;\n        },\n        // 11. 总空位数 (d=0.000, ↓)\n        () => {\n            if (currentCandidate._feature10 === undefined) {\n            currentCandidate._feature10 = context.cards1.filter(c => c < 0).length;\n            }\n            return -currentCandidate._feature10;\n        },\n        // 12. 卡片上方的牌数 (d=0.011, ↑)\n        () => {\n            if (currentCandidate._feature11 === undefined) {\n            currentCandidate._feature11 = context.countCardsAbove(context.cards1, currentTargetIdx);\n            }\n            return currentCandidate._feature11;\n        },\n        // 13. 空位下方已就位的牌数 (d=0.138, ↑)\n        () => {\n            if (currentCandidate._feature12 === undefined) {\n            currentCandidate._feature12 = context.countCorrectBelow(context.cards1, t.index);\n            }\n            return currentCandidate._feature12;\n        },\n        // 14. 同rank的其他候选数 (d=0.021, ↑)\n        () => {\n            if (currentCandidate._feature13 === undefined) {\n            currentCandidate._feature13 = context.countSameRankCandidates(context.cards1, t);\n            }\n            return currentCandidate._feature13;\n        },\n        // 15. 移动后可移动数 (d=0.215, ↑)\n        () => {\n            if (currentCandidate._feature14 === undefined) {\n            const simulatedCards = [...context.cards1];\n            const slotId = simulatedCards[t.index];\n            simulatedCards[currentTargetIdx] = slotId;\n            simulatedCards[t.index] = targetCard;\n            currentCandidate._feature14 = context.countPossibleMoves(simulatedCards);\n            }\n            return currentCandidate._feature14;\n        },\n        // 16. 空位分布熵 (d=0.096, ↓)\n        () => {\n            if (currentCandidate._feature15 === undefined) {\n            const simulatedCards = [...context.cards1];\n            const slotId = simulatedCards[t.index];\n            simulatedCards[currentTargetIdx] = slotId;\n            simulatedCards[t.index] = targetCard;\n            currentCandidate._feature15 = context.calculateEmptyEntropy(simulatedCards);\n            }\n            return -currentCandidate._feature15;\n        },\n        // 17. 移动后已就位牌数 (d=0.189, ↑)\n        () => {\n            if (currentCandidate._feature16 === undefined) {\n            const simulatedCards = [...context.cards1];\n            const slotId = simulatedCards[t.index];\n            simulatedCards[currentTargetIdx] = slotId;\n            simulatedCards[t.index] = targetCard;\n            currentCandidate._feature16 = context.countRestoredCards(simulatedCards);\n            }\n            return currentCandidate._feature16;\n        },\n        // 18. 曼哈顿距离 (d=0.074, ↑)\n        () => {\n            if (currentCandidate._feature17 === undefined) {\n            currentCandidate._feature17 = Math.abs((currentTargetIdx % (context.number + 1)) - (context.number - 1 - (targetCard >> 2))) + Math.abs(Math.floor(currentTargetIdx / (context.number + 1)) - ((targetCard % 4) % context.matchMode));\n            }\n            return currentCandidate._feature17;\n        },\n        // 19. 是否跨列 (d=0.034, ↑)\n        () => {\n            if (currentCandidate._feature18 === undefined) {\n            currentCandidate._feature18 = (Math.floor(currentTargetIdx / (context.number + 1)) !== Math.floor(t.index / (context.number + 1))) ? 1 : 0;\n            }\n            return currentCandidate._feature18;\n        },\n        // 20. slot_score版本2 (d=0.084, ↑)\n        () => {\n            if (currentCandidate._feature19 === undefined) {\n            currentCandidate._feature19 = (t.card >> 2) * 10 - (t.index % (context.number + 1));\n            }\n            return currentCandidate._feature19;\n        },\n        // 21. slot_score版本3 (d=0.310, ↓)\n        () => {\n            if (currentCandidate._feature20 === undefined) {\n            currentCandidate._feature20 = (t.card >> 2) * context.countEmptyBelow(context.cards1, t.index);\n            }\n            return -currentCandidate._feature20;\n        },\n    ],\n  };\n  return currentCandidate;\n}\n\n/**\n * 比较两个候选的优先级函数 - 使用循环和统一的大于比较\n * 优先级：priority > deep > lookahead > winProbability(分治) > diff > rank > prevRank > slotPosition > restoredCount(DP) > cardPosition\n * @param {Object} candidateA - 候选A\n * @param {Object} candidateB - 候选B\n * @returns {boolean} 是否候选A更好\n */\nexport function isBetterCandidate(candidateA, candidateB) {\n  // 使用_getters数组进行循环比较，所有特征都统一为大于比较\n  for (let i = 0; i < candidateA._getters.length; i++) {\n    const valueA = candidateA._getters[i]();\n    const valueB = candidateB._getters[i]();\n    \n    if (valueA > valueB) {\n      return true; // A比B好\n    } else if (valueA < valueB) {\n      return false; // B比A好\n    }\n    // 相等时继续比较下一个特征\n  }\n  \n  // 所有特征都相等，返回false（A不优于B）\n  return false;\n}\n\n/**\n * 游戏状态评估工具方法集合\n */\nexport const gameEvaluationMethods = {\n/**\n * 基于规则的候选卡片优先级计算\n * @param {Object} context - 游戏上下文\n * @param {number} slotId - 空位ID（-1到-4）\n * @param {Object} slotInfo - 空位信息 {index, card}\n * @param {number} candidateCard - 候选卡片\n * @param {number} candidateIdx - 候选卡片索引\n * @returns {Object} 优先级评分对象\n */\ncalculateRuleBasedPriority(context, slotId, slotInfo, candidateCard, candidateIdx) {\n  const { cards1, number, matchMode } = context;\n  const slotIndex = slotInfo.index;\n  const slotPrevCard = slotInfo.card;\n  \n  // 计算列号和行号\n  const colSize = number + 1;\n  // const slotCol = Math.floor(slotIndex / colSize);\n  const slotRow = slotIndex % colSize;\n  const candidateCol = Math.floor(candidateIdx / colSize);\n  const candidateRow = candidateIdx % colSize;\n  \n  const slotPrevRank = slotPrevCard >> 2;\n  const candidateRank = candidateCard >> 2;\n  const candidateSuit = candidateCard % 4;\n  const candidateGroup = candidateSuit % matchMode;\n  \n  // 1. 空位优先级：空位位置号-1的卡的rank（越小越优先）\n  const slotPriority = -slotPrevRank; // 取负数使rank小的优先\n  \n  // 2. 候选卡优先级评分\n  let candidateScore = {\n    slotPriority: slotPriority,\n    excludeReason: null,\n    matchNextCard: 0,\n    adjacentEmptyCount: 0,\n    columnEmptyCount: 0,\n  };\n  \n  // 2.1 排除规则1：候选卡的rank等于同匹配组位置号-1的卡的rank-1\n  // 找到候选卡所在列的位置号-1的卡\n  if (candidateRow > 0) {\n    const prevPosInCandidateCol = candidateIdx - 1;\n    const prevCardInCandidateCol = cards1[prevPosInCandidateCol];\n    if (prevCardInCandidateCol >= 0) {\n      const prevRankInCandidateCol = prevCardInCandidateCol >> 2;\n      const prevSuitInCandidateCol = prevCardInCandidateCol % 4;\n      const prevGroupInCandidateCol = prevSuitInCandidateCol % matchMode;\n      \n      // 如果是同匹配组，且候选卡rank = 该卡rank - 1，则排除\n      if (candidateGroup === prevGroupInCandidateCol && candidateRank === prevRankInCandidateCol - 1) {\n        candidateScore.excludeReason = 'rule1_same_group_rank_minus_1';\n        // return candidateScore;\n      }\n    }\n  }\n  \n  // 2.2 排除规则2：对应空位号的行号>候选卡的行号\n  if (slotRow < candidateRow) {\n    candidateScore.excludeReason = 'rule2_slot_row_greater';\n    // return candidateScore;\n  }\n  \n  // 2.3 优先选择规则：候选卡的rank等于同匹配组位置号+1的卡的rank+1\n  let matchNextCardScore = 0;\n  if (candidateRow < number) {\n    const nextPosInCandidateCol = candidateIdx + 1;\n    const nextCardInCandidateCol = cards1[nextPosInCandidateCol];\n    if (nextCardInCandidateCol >= 0) {\n      const nextRankInCandidateCol = nextCardInCandidateCol >> 2;\n      const nextSuitInCandidateCol = nextCardInCandidateCol % 4;\n      const nextGroupInCandidateCol = nextSuitInCandidateCol % matchMode;\n      \n      // 检查是否满足：同匹配组且候选卡rank = 该卡rank + 1\n      if (candidateGroup === nextGroupInCandidateCol && candidateRank === nextRankInCandidateCol + 1) {\n        // 基础分：10000（回到原来的值）\n        matchNextCardScore = 10000;\n        // 行号越小越好（靠近列顶部）\n        matchNextCardScore -= candidateRow * 100;\n        // 前一张卡的rank越小越好\n        if (candidateRow > 0) {\n          const prevPosInCandidateCol = candidateIdx - 1;\n          const prevCardInCandidateCol = cards1[prevPosInCandidateCol];\n          const prevRankInCandidateCol = prevCardInCandidateCol >> 2;\n          matchNextCardScore -= prevRankInCandidateCol;\n        }\n      }\n    }\n  }\n  candidateScore.matchNextCard = matchNextCardScore;\n  \n  // 2.4 候选卡所在列前后相邻的空位数（越多越好）\n  let adjacentEmptyCount = 0;\n  if (candidateRow > 0 && cards1[candidateIdx - 1] < 0) {\n    adjacentEmptyCount++;\n  }\n  if (candidateRow < number && cards1[candidateIdx + 1] < 0) {\n    adjacentEmptyCount++;\n  }\n  candidateScore.adjacentEmptyCount = adjacentEmptyCount;\n  \n  // 2.5 候选卡所在列空位总数（越多越好）\n  let columnEmptyCount = 0;\n  const colStart = candidateCol * colSize;\n  for (let i = colStart; i < colStart + colSize; i++) {\n    if (cards1[i] < 0) columnEmptyCount++;\n  }\n  candidateScore.columnEmptyCount = columnEmptyCount;\n  \n  return candidateScore;\n},\n\n/**\n * 比较两个候选卡片的优先级（基于新规则）\n * @param {Object} scoreA - 候选A的评分\n * @param {Object} scoreB - 候选B的评分\n * @returns {number} >0表示A更优，<0表示B更优，0表示相等\n */\ncompareRuleBasedPriority(scoreA, scoreB) {\n  // 1. 先比较空位优先级（rank越小越优先）\n  if (scoreA.slotPriority !== scoreB.slotPriority) {\n    return scoreA.slotPriority - scoreB.slotPriority;\n  }\n  \n  // 2. 排除的候选排在后面\n  if (scoreA.excludeReason && !scoreB.excludeReason) return 1;\n  if (!scoreA.excludeReason && scoreB.excludeReason) return -1;\n  if (scoreA.excludeReason && scoreB.excludeReason) return 0;\n  \n  // 3. 比较matchNextCard（越高越好）\n  if (scoreA.matchNextCard !== scoreB.matchNextCard) {\n    return scoreB.matchNextCard - scoreA.matchNextCard;\n  }\n  \n  // 4. 比较相邻空位数（越多越好）\n  if (scoreA.adjacentEmptyCount !== scoreB.adjacentEmptyCount) {\n    return scoreB.adjacentEmptyCount - scoreA.adjacentEmptyCount;\n  }\n  \n  // 5. 比较列空位总数（越多越好）\n  if (scoreA.columnEmptyCount !== scoreB.columnEmptyCount) {\n    return scoreB.columnEmptyCount - scoreA.columnEmptyCount;\n  }\n  \n  return 0;\n},\n\n\n    // === 辅助函数：特征计算 ===\n\n    // 计算列中的空位数\n    countEmptyInColumn(cards, colIdx) {\n        const colStart = colIdx * (this.number + 1);\n        const colEnd = colStart + this.number + 1;\n        let count = 0;\n        for (let i = colStart; i < colEnd; i++) {\n        if (cards[i] < 0) count++;\n        }\n        return count;\n    },\n\n    // 计算位置上方的空位数\n    countEmptyAbove(cards, pos) {\n        const col = Math.floor(pos / (this.number + 1));\n        const colEnd = (col + 1) * (this.number + 1);\n        let count = 0;\n        for (let i = pos + 1; i < colEnd; i++) {\n        if (cards[i] < 0) count++;\n        }\n        return count;\n    },\n\n    // 计算位置下方的空位数\n    countEmptyBelow(cards, pos) {\n        const col = Math.floor(pos / (this.number + 1));\n        const colStart = col * (this.number + 1);\n        let count = 0;\n        for (let i = colStart; i < pos; i++) {\n        if (cards[i] < 0) count++;\n        }\n        return count;\n    },\n\n    // 计算位置上方的牌数\n    countCardsAbove(cards, pos) {\n        const col = Math.floor(pos / (this.number + 1));\n        const colEnd = (col + 1) * (this.number + 1);\n        let count = 0;\n        for (let i = pos + 1; i < colEnd; i++) {\n        if (cards[i] >= 0) count++;\n        }\n        return count;\n    },\n\n    // 计算空位下方已就位的牌数\n    countCorrectBelow(cards, slotIdx) {\n        const col = Math.floor(slotIdx / (this.number + 1));\n        const colStart = col * (this.number + 1);\n        let count = 0;\n        \n        for (let i = colStart; i < slotIdx; i++) {\n        const c = cards[i];\n        if (c < 0) break;\n        \n        const cRank = c >> 2;\n        const cSuit = c % 4;\n        const expectedRank = this.number - 1 - (i % (this.number + 1));\n        \n        if ((cSuit % this.matchMode) === (col % this.matchMode) && cRank === expectedRank) {\n            count++;\n        } else {\n            break;\n        }\n        }\n        \n        return count;\n    },\n\n    // 计算同rank的其他候选数\n    countSameRankCandidates(cards, slot) {\n        let count = 0;\n        const prevCard = slot.card;\n        const prevRank = prevCard >> 2;\n        const targetRank = prevRank - 1;\n        \n        if (targetRank < 0) return 0;\n        \n        const cardGroup = prevCard % this.matchMode;\n        for (let suit = cardGroup; suit < 4; suit += this.matchMode) {\n        const card = targetRank * 4 + suit;\n        const idx = cards.indexOf(card);\n        if (idx >= 0 && idx + 1 < cards.length && cards[idx + 1] < 0) {\n            count++;\n        }\n        }\n        \n        return count;\n    },\n\n    // 计算空位分布熵\n    calculateEmptyEntropy(cards) {\n        const emptyPerCol = [0, 0, 0, 0];\n        let totalEmpty = 0;\n        \n        for (let i = 0; i < cards.length; i++) {\n        if (cards[i] < 0) {\n            totalEmpty++;\n            const col = Math.floor(i / (this.number + 1));\n            emptyPerCol[col]++;\n        }\n        }\n        \n        if (totalEmpty === 0) return 0;\n        \n        let entropy = 0;\n        for (let count of emptyPerCol) {\n        if (count > 0) {\n            const p = count / totalEmpty;\n            entropy -= p * Math.log2(p);\n        }\n        }\n        \n        return entropy;\n    },\n  /**\n   * 前瞻1步：计算给定状态下有多少个可能的移动\n   * @param {Array} cards1Array - 卡片数组\n   * @returns {number} 可能的移动数量\n   */\n    countPossibleMoves(cards1Array) {\n      let count = 0;\n      \n      // 遍历所有空位\n      for (let i = 0; i < cards1Array.length; i++) {\n        if (cards1Array[i] >= 0) continue;  // 不是空位\n        \n        const prevCard = i > 0 ? cards1Array[i - 1] : null;\n        if (prevCard === null || prevCard < 0) continue;  // 空位前没有有效卡片\n        \n        const prevRank = prevCard >> 2;\n        const targetRank = prevRank - 1;\n        if (targetRank < 0) continue;  // 前面是A，无法移动\n        \n        // 查找所有匹配的候选牌\n        const card_group = prevCard % this.matchMode;\n        for (let suit = card_group; suit < 4; suit += this.matchMode) {\n          const targetCard = targetRank * 4 + suit;\n          const cardIdx = cards1Array.indexOf(targetCard);\n          \n          // 检查候选牌是否存在\n          if (cardIdx >= 0) {\n            count++;\n          }\n        }\n      }\n      \n      return count;\n    },\n    \n  /**\n   * 动态规划：计算已还原到正确位置的卡片数量（从高rank开始）\n   * @param {Array} cards1Array - 卡片数组\n   * @returns {number} 已还原的卡片数量\n   */\n    countRestoredCards(cards1Array) {\n      let restoredCount = 0;\n      const colSize = this.number + 1;  // 每列的大小\n      \n      // 从最高rank开始检查（K往下到A=0）\n      for (let rank = this.number - 1; rank >= 0; rank--) {\n        // 检查每种花色\n        for (let suit = 0; suit < 4; suit++) {\n          const card = rank * 4 + suit;\n          const cardIdx = cards1Array.indexOf(card);\n          \n          if (cardIdx < 0) continue;  // 卡片不存在\n          \n          // 计算该卡片的目标列（基于matchMode）\n          const targetGroup = suit % this.matchMode;\n          \n          // 计算该卡片在目标列中应该的位置\n          // 目标列从底部开始：colStart + (number - rank)\n          const colStart = targetGroup * colSize;\n          const expectedPosition = colStart + (this.number - 1 - rank);\n          \n          // 检查卡片是否在正确位置\n          if (cardIdx === expectedPosition) {\n            // 还需要检查该位置下方的所有卡片是否都正确\n            let allBelowCorrect = true;\n            \n            // 检查该位置下方的每个位置\n            for (let checkRank = rank + 1; checkRank < this.number; checkRank++) {\n              const checkPos = colStart + (this.number - 1 - checkRank);\n              const cardAtPos = cards1Array[checkPos];\n              \n              if (cardAtPos < 0) {\n                // 下方有空位，不正确\n                allBelowCorrect = false;\n                break;\n              }\n              \n              const cardAtPosRank = cardAtPos >> 2;\n              const cardAtPosSuit = cardAtPos % 4;\n              const cardAtPosGroup = cardAtPosSuit % this.matchMode;\n              \n              // 检查下方卡片是否属于同一列且rank正确\n              if (cardAtPosGroup !== targetGroup || cardAtPosRank !== checkRank) {\n                allBelowCorrect = false;\n                break;\n              }\n            }\n            \n            if (allBelowCorrect) {\n              restoredCount++;\n            }\n          }\n        }\n      }\n      \n      return restoredCount;\n    },\n    \n  /**\n   * 分治算法：评估获胜状态可达性（0-100分，分数越高越可能获胜）\n   * @param {Array} cards1Array - 卡片数组\n   * @returns {number} 获胜概率分数（0-100）\n   */\n    estimateWinProbability(cards1Array) {\n      const colSize = this.number + 1;\n      const totalCols = 4;\n      let totalScore = 0;\n      let maxScore = 0;\n      \n      // 分治：评估每一行的完成度\n      for (let row = 0; row < colSize; row++) {\n        const rowScore = this.evaluateRowScore(cards1Array, row, colSize, totalCols);\n        totalScore += rowScore.score;\n        maxScore += rowScore.maxScore;\n      }\n      \n      // 计算全局阻塞惩罚\n      const blockPenalty = this.calculateBlockPenalty(cards1Array);\n      \n      // 归一化到0-100\n      const baseScore = maxScore > 0 ? (totalScore / maxScore) * 80 : 0;\n      const finalScore = Math.max(0, baseScore - blockPenalty);\n      \n      return finalScore;\n  },\n\n\n    \n    // 评估单行的完成度（分治子问题）\n    evaluateRowScore(cards1Array, row, colSize, totalCols) {\n      let score = 0;\n      let maxScore = 0;\n      \n      // 对于每一行，检查每一列中的对应位置\n      for (let col = 0; col < totalCols; col++) {\n        const pos = col * colSize + row;\n        const cardAtPos = cards1Array[pos];\n        \n        maxScore += 10;  // 每个位置满分10分\n        \n        if (cardAtPos < 0) {\n          // 空位：检查该rank的所有候选卡片位置\n          const emptySlotsAbove = this.countEmptySlotsAbove(cards1Array, pos);\n          score += Math.max(0, 10 - emptySlotsAbove * 2);  // 上方空位越多，分数越低\n          continue;\n        }\n        \n        const cardRank = cardAtPos >> 2;\n        const cardSuit = cardAtPos % 4;\n        const cardGroup = cardSuit % this.matchMode;\n        \n        // 计算该行应该对应的rank\n        const expectedRank = this.number - 1 - row;\n        \n        // 计算该列应该对应的group\n        const expectedGroup = col % this.matchMode;\n        \n        // 检查卡片是否属于正确的组和rank\n        if (cardGroup === expectedGroup) {\n          // 正确的组\n          if (cardRank === expectedRank) {\n            // rank完全正确\n            score += 10;\n            \n            // 额外奖励：该组下方行都已正确放置\n            if (this.checkRowBelowCorrect(cards1Array, row, col, colSize)) {\n              score += 5;\n              maxScore += 5;\n            }\n          } else if (cardRank > expectedRank) {\n            // rank太高，轻微扣分（还能移走）\n            score += 5;\n          } else {\n            // rank太低，严重扣分（阻塞）\n            score += 2;\n          }\n        } else {\n          // 错误的组，适度扣分\n          score += 3;\n          \n          // 如果rank正确，给予部分分数\n          if (cardRank === expectedRank) {\n            score += 2;\n          }\n        }\n      }\n      \n      return { score, maxScore };\n    },\n    \n    // 计算某位置上方的空位数\n    countEmptySlotsAbove(cards1Array, pos) {\n      let count = 0;\n      const col = Math.floor(pos / (this.number + 1));\n        const colStart = col * (this.number + 1);\n      const colEnd = colStart + this.number + 1;\n      \n      for (let i = pos + 1; i < colEnd; i++) {\n        if (cards1Array[i] < 0) count++;\n              }\n      \n      return count;\n    },\n    \n    // 检查某位置下方的行是否都已正确放置\n    checkRowBelowCorrect(cards1Array, row, col, colSize) {\n      for (let checkRow = row + 1; checkRow < this.number; checkRow++) {\n        const checkPos = col * colSize + checkRow;\n        const cardAtPos = cards1Array[checkPos];\n        \n        if (cardAtPos < 0) return false;\n        \n        const cardRank = cardAtPos >> 2;\n        const expectedRank = this.number - 1 - checkRow;\n        \n        if (cardRank !== expectedRank) return false;\n      }\n      \n      return true;\n    },\n    \n    // 计算全局阻塞惩罚\n    calculateBlockPenalty(cards1Array) {\n      let penalty = 0;\n      const colSize = this.number + 1;\n      \n      // 检查每列的阻塞情况\n      for (let col = 0; col < 4; col++) {\n        const colStart = col * colSize;\n        \n        // 检查是否存在\"死锁\"：高rank卡片被低rank卡片压住\n        for (let i = colStart; i < colStart + colSize - 1; i++) {\n          const card = cards1Array[i];\n          if (card < 0) continue;\n          \n          const cardRank = card >> 2;\n          \n          // 检查上方的卡片\n          for (let j = i + 1; j < colStart + colSize; j++) {\n            const upperCard = cards1Array[j];\n            if (upperCard < 0) continue;\n            \n            const upperRank = upperCard >> 2;\n            \n            // 如果上方卡片rank更低，这是一个阻塞\n            if (upperRank < cardRank) {\n              penalty += 5;\n            }\n          }\n        }\n      }\n      \n      // 检查可移动性：如果没有任何可移动的牌，增加惩罚\n      const possibleMoves = this.countPossibleMoves(cards1Array);\n      if (possibleMoves === 0) {\n        penalty += 20;\n      } else if (possibleMoves === 1) {\n        penalty += 10;\n      }\n      \n      return penalty;\n    },\n};\n\n/**\n * 候选评估工具函数集合\n */\nexport const candidateUtils = {\n  createCandidate,\n  isBetterCandidate,\n  gameEvaluationMethods\n};","import { shuffleCards, checkDeadForeach } from \"../utils/help.js\";\nimport { GameComponentPresets } from \"../utils/gameComponentFactory.js\";\nimport { createCandidate, isBetterCandidate, gameEvaluationMethods } from \"./candidateUtils.js\";\nimport { getCardPlaceholderText } from \"../utils/cardUtils.js\";\n\nconst Sort = {\n  name: \"Sort\",\n  data() {\n    return {\n      title: \"Sort\",\n      cards1: [],\n      number: 4,\n      n: 0,\n      sign_index: -1,\n      matchMode: 1,  // 1=简单(数值), 2=中等(颜色), 4=困难(花色)\n      candidateIntervals: {}, // 存储每个空位的候选卡牌循环定时器\n      currentCandidates: {}, // 存储每个空位当前显示的候选卡牌索引\n    };\n  },\n  methods: {\n    init() {\n      this.sign_index = -1;\n      this.cards1.splice(0);\n      let cards = this.cards1;\n      for (let i = 0; i < this.number * 4; i++) {\n        cards.push(i);\n      }\n      shuffleCards(cards, this.number * 4);\n      for (let i = 0; i < 4; i++) {\n        cards.splice(cards.indexOf(this.number * 4 - 1 - i), 1, -1 - i);\n      }\n      for (let i = 0; i < 4; i++) {\n        cards.splice(i * (this.number + 1), 0, this.number * 4 - 4 + i);\n      }\n      this.autoCalc();\n      \n      // 初始化候选卡牌循环\n      this.$nextTick(() => {\n        this.updateAllCandidateCycling();\n      });\n    },\n\n    // 组件销毁时清理定时器\n    beforeDestroy() {\n      Object.keys(this.candidateIntervals).forEach(slotIndex => {\n        this.stopCandidateCycling(parseInt(slotIndex));\n      });\n    },\n\n    // 更新所有空位的候选卡牌循环\n    updateAllCandidateCycling() {\n      // 停止所有现有的循环\n      Object.keys(this.candidateIntervals).forEach(slotIndex => {\n        this.stopCandidateCycling(parseInt(slotIndex));\n      });\n      \n      // 为所有有空位的位置启动新的循环\n      for (let i = 0; i < this.cards1.length; i++) {\n        if (this.cards1[i] < 0 && i > 0 && this.cards1[i - 1] >= 4) {\n          this.startCandidateCycling(i);\n        }\n      }\n    },\n\n    // 获取指定空位的候选卡牌数组\n    getCandidateCardsForSlot(slotIndex) {\n      const prevCard = this.cards1[slotIndex - 1];\n      if (prevCard < 4) return []; // 如果前一个卡片不是有效卡片，返回空数组\n      \n      const candidates = this.findAllCardsByRankOffset(prevCard, -1);\n      return candidates.map(c => c.card);\n    },\n\n    // 开始候选卡牌循环显示\n    startCandidateCycling(slotIndex) {\n      this.stopCandidateCycling(slotIndex); // 先停止现有的循环\n      \n      const candidates = this.getCandidateCardsForSlot(slotIndex);\n      if (candidates.length === 0) return;\n      \n      this.currentCandidates[slotIndex] = 0; // 从第一个候选开始\n      \n      // 设置定时器循环显示候选卡牌\n      this.candidateIntervals[slotIndex] = setInterval(() => {\n        if (candidates.length > 0) {\n          this.currentCandidates[slotIndex] = (this.currentCandidates[slotIndex] + 1) % candidates.length;\n        }\n      }, this.gameManager.autoStepDelay);\n    },\n\n    // 停止候选卡牌循环显示\n    stopCandidateCycling(slotIndex) {\n      if (this.candidateIntervals[slotIndex]) {\n        clearInterval(this.candidateIntervals[slotIndex]);\n        delete this.candidateIntervals[slotIndex];\n        delete this.currentCandidates[slotIndex];\n      }\n    },\n\n    // 获取当前显示的候选卡牌\n    getCurrentCandidateCard(slotIndex) {\n      const candidates = this.getCandidateCardsForSlot(slotIndex);\n      if (candidates.length === 0) return '';\n      \n      const currentIndex = this.currentCandidates[slotIndex] || 0;\n      return this.getCardPlaceholderText(candidates[currentIndex]);\n    },\n    \n    // 计算 cards1 的哈希值\n    calculateStateHash() {\n      return this.cards1.join(',');\n    },\n    \n    // 检查当前状态哈希是否已存在\n    isStateHashRepeated(hash) {\n      return this.gameManager.history.find((record) => record.stateHash == hash);\n    },\n    // 记录移动操作\n    recordMove(from, to, card, sign) {\n      // 计算并记录当前状态的哈希\n      const stateHash = this.calculateStateHash();\n      \n      this.gameManager.recordOperation({\n        type: \"move\",\n        from: from,\n        to: to,\n        card: card,\n        sign: sign,\n        timestamp: Date.now(),\n        stateHash: stateHash,\n      });\n    },\n\n    // 处理撤销操作\n    handleUndo(operation) {\n      // 根据操作类型执行相应的撤销逻辑\n      switch (operation.type) {\n        case \"move\":\n          // 撤销移动操作\n          this.cards1.splice(operation.to, 1, operation.sign);\n          this.cards1.splice(operation.from, 1, operation.card);\n          break;\n      }\n    },\n\n    // 提取的移动执行函数（供 clickCard 和 stepFn 复用）\n    executeMove(cardToMove, targetEmptyIndex) {\n      const cardToMoveIndex = this.cards1.indexOf(cardToMove);\n      const emptySlot = this.cards1[targetEmptyIndex];\n      \n      if (this.findNextCard(cardToMove, (idx) => idx == targetEmptyIndex - 1) < 0) {\n        return console.warn(\"❌ 无效的移动\");\n      }\n\n      this.cards1.splice(cardToMoveIndex, 1, emptySlot);\n      this.cards1.splice(targetEmptyIndex, 1, cardToMove);\n      this.recordMove(cardToMoveIndex, targetEmptyIndex, cardToMove, emptySlot);\n      \n      // autoCalc 已经在工厂函数里监听 historyUpdate 事件自动执行，无需手动调用\n    },\n    \n    // 重写clickCard方法，使用GameStateManager记录操作\n    clickCard(card) {\n      // 查找同颜色的下一张牌，要求其后必须有空位\n      let index = this.findNextCard(card, (idx) => this.sign_index >= 0 ? idx == this.sign_index - 1 : this.cards1[idx + 1] < 0);\n      \n      if (index >= 0) {\n        let targetEmptyIndex = index + 1;\n        this.executeMove(card, targetEmptyIndex);\n      } else {\n        console.error(`❌ clickCard: 移动失败 card=${card}, 找不到有效目标位置。Seed:${this.seed}`);\n      }\n      this.sign_index = -1;\n    },\n\n    updateN() {\n      this.n = 0;\n      for (let i = 0; i < this.number * 4 + 4; i++) {\n        if (\n          this.cards1[i] >> 2 ==\n          this.number - 1 - (i % (this.number + 1))\n        ) {\n          this.n++;\n        }\n      }\n    },\n\n    // 重写stepFn方法，使用clickSign/clickCard保持行为一致\n    async stepFn() {\n      // 验证 this.next 是否有效\n      if (!this.next || this.next[0] < 0) {\n        console.error('❌ stepFn: this.next 无效', this.next);\n        \n        // 保存故障状态\n        const errorState = {\n          cards1: [...this.cards1],\n          next: this.next,\n          sign_index: this.sign_index,\n          n: this.n,\n        };\n        console.error('💾 故障状态已保存:', JSON.stringify(errorState));\n        \n        // 检查游戏状态：计算已完成的牌数\n        this.updateN();\n        \n        // 如果所有牌都已完成，标记为胜利；否则标记为失败\n        if (this.n >= (this.number + 1) * 4) {\n          this.gameManager.setWin();\n        }\n        \n        this.gameManager.stopAuto();\n        return;\n      }\n      \n      // 根据用户建议：直接使用 this.executeMove(this.next[0], this.next[1])\n      // this.next[0] = 要移动的卡片\n      // this.next[1] = 目标空位位置\n      \n      await this.gameManager.step(async () => {\n        this.clickSign(this.next[1])\n        await this.wait();\n        this.executeMove(this.next[0], this.next[1]);\n      });\n    },\n    clickSign(i) {\n      let card = this.cards1[i - 1];\n      if (card < 4) {\n        return;\n      }\n      // 查找同颜色的前一张牌\n      let index = this.findPrevCard(card);\n      \n      // 滚动到目标卡片位置\n      if (index >= 0 && typeof window !== 'undefined' && window.document) {\n        const scrollTop = (index % (this.number + 1)) * 150;\n        \n        // 优先滚动 GameLayout 的 wrapper\n        const wrapper = document.querySelector('.game-content-wrapper');\n        if (wrapper) {\n          wrapper.scrollTop = scrollTop;\n        } else {\n          // 降级到传统的 document 滚动\n          document.documentElement.scrollTop = scrollTop;\n          document.body.scrollTop = scrollTop;\n        }\n      }\n      this.sign_index = i;;\n    },\n    \n    // 评估候选牌的优先级得分\n    evaluateCandidateScore(candidate) {\n      if (!candidate || candidate.idx < 0) return -999999;\n      \n      let score = 0;\n      let idx = candidate.idx;\n      \n      // 因素1: 后面是否有空位（决定性因素）\n      if (this.cards1[idx + 1] < 0) {\n        score += 100000;\n      }\n      \n      // 因素2: 位置靠前（列顶）的优先级更高\n      let row = idx % (this.number + 1);\n      score += (this.number - row) * 10;\n      \n      // 因素3: 更倾向于选择花色值小的（保持稳定性）\n      let suit = candidate.card % 4;\n      score += (4 - suit);\n      \n      return score;\n    },\n    // 从多个候选中选择最优的\n    selectBestCandidate(candidates) {\n      if (!candidates || candidates.length === 0) return -1;\n      if (candidates.length === 1) return candidates[0].idx;\n      \n      let bestScore = -999999;\n      let bestIdx = -1;\n      \n      for (let candidate of candidates) {\n        let score = this.evaluateCandidateScore(candidate);\n        \n        if (score > bestScore) {\n          bestScore = score;\n          bestIdx = candidate.idx;\n        }\n      }\n      \n      return bestIdx;\n    },\n    // 基础辅助函数：查找同颜色的相邻牌的索引\n    // offset: +1查找下一张，-1查找前一张\n    // condition: 可选的额外条件检查函数\n    // returnAll: 返回所有候选（用于多路径搜索）\n    findCardByRankOffset(card, offset, condition = null, returnAll = false) {\n      let target_rank = (card >> 2) + offset;\n      let card_group = card % this.matchMode;  // 按 matchMode 分组\n      let candidates = [];\n      \n      // 收集所有同组的候选牌\n      for (let suit = card_group; suit < 4; suit += this.matchMode) {\n        let target_card = target_rank * 4 + suit;\n        let idx = this.cards1.indexOf(target_card);\n        if (idx >= 0) {\n          // 如果提供了条件检查函数，必须满足条件\n          if (!condition || condition(idx)) {\n            candidates.push({ idx, card: target_card });\n          }\n        }\n      }\n      \n      if (returnAll) return candidates;\n      if (candidates.length === 0) return -1;\n      if (candidates.length === 1) return candidates[0].idx;\n      \n      // 有多个候选时，使用评分系统选择最优的\n      return this.selectBestCandidate(candidates);\n    },\n    // 获取所有同颜色的候选牌（用于多路径分析）\n    findAllCardsByRankOffset(card, offset, condition = null) {\n      return this.findCardByRankOffset(card, offset, condition, true);\n    },\n    // 便捷方法：查找同颜色的下一张牌（支持条件检查）\n    findNextCard(card, condition = null) {\n      return this.findCardByRankOffset(card, 1, condition);\n    },\n    // 便捷方法：查找同颜色的前一张牌\n    findPrevCard(card) {\n      return this.findCardByRankOffset(card, -1);\n    },\n    // 判断卡牌是否可移动（用于 shanshuo 闪烁提示）\n    canMoveCard(card) {\n      if (card < 0) return false;\n      // 查找同颜色的下一张牌，检查其后是否有空位\n      let nextIdx = this.findNextCard(card, (idx) => this.cards1[idx + 1] < 0);\n      return nextIdx >= 0;\n    },\n    \n    ...gameEvaluationMethods,\n    autoCalc() {\n      let over = true,\n        temp = {},\n        prior = [],\n        slotsToResetPriority = [];  // 记录需要清空 priority 的空位\n      for (let id = -4; id < 0; id++) {\n        let index = this.cards1.indexOf(id);\n        let card = this.cards1[index - 1];\n        \n        temp[id] = {\n          index,\n          card: card,\n          priority: 0,\n          _in: 0,\n          able: true,\n          bestCard: null,  // 记录深度搜索找到的最优候选牌\n        };\n      }\n      for (let id = -4; id < 0; id++) {\n        let index = temp[id].index;\n        let card = temp[id].card;\n        let dead = [];\n        let candidatePriorities = new Map();  // 存储候选牌与优先级的映射\n        let candidates = this.findAllCardsByRankOffset(card, -1);\n        for (let candidate of candidates) {\n          candidatePriorities.set(candidate.card, 0);\n        }\n        let prevFn = (prev_c, deep, accumulatedPriority = 0) => {\n          if (prev_c < 0) {\n            // 到达空位，累加 priority\n            prior.push([id, prev_c, deep]);\n            temp[prev_c].priority = Math.max(temp[prev_c].priority, ++accumulatedPriority);\n            temp[prev_c]._in++;\n            return accumulatedPriority;\n          } else {\n            if (prev_c >= 48) {\n              return 0;\n            }\n            if (!checkDeadForeach(dead, [prev_c, 0])) return 0;\n            dead.unshift([prev_c, 0]);\n            \n            // 获取所有同颜色的候选\n            let candidates = this.findAllCardsByRankOffset(prev_c, 1);\n            \n            if (candidates.length === 0) {\n              return 0;\n            }\n            \n            // 多候选深度优先搜索：递归评估每个候选的 priority\n            let maxPriority = 0;\n            \n            for (let candidate of candidates) {\n              let next_idx = candidate.idx;\n              let signCard = this.cards1[next_idx + 1];\n              \n              let subPriority = prevFn(signCard, deep, accumulatedPriority);\n              maxPriority = Math.max(maxPriority, subPriority);\n              \n              candidatePriorities.has(candidate.card) && candidatePriorities.set(candidate.card, Math.max(candidatePriorities.get(candidate.card), subPriority));\n            }\n            \n            return maxPriority;\n          }\n        };\n        let nextFn = (next_i, next_c, deep, accumulatedPriority = 0) => {\n          if (!checkDeadForeach(dead, [next_c, 1])) return 0;\n          dead.unshift([next_c, 1]);\n          if (deep > 0 && next_c >= 8) {\n            let prev_c = this.cards1[next_i + 1];\n            prevFn(prev_c, deep, accumulatedPriority);\n          }\n          next_c = this.cards1[next_i - 1];\n          if (next_c < 4) {\n            let n = next_i - 2;\n            let num = 1;\n            while (next_c < 0) {\n              next_c = this.cards1[n];\n              n--;\n              num++;\n            }\n            if (next_c >= num * 4) {\n              prior.push([id, this.cards1[next_i - 1], deep]);\n              let emptySlotId = this.cards1[next_i - 1];\n              temp[emptySlotId].priority = Math.max(temp[emptySlotId].priority, ++accumulatedPriority);\n              temp[emptySlotId]._in++;\n              \n              return accumulatedPriority;\n            }\n            next_c += 4;\n            // 检查是否形成同颜色递增序列\n            while (n % (this.number + 1) > 0) {\n              let card_at_n = this.cards1[n];\n              if (card_at_n >= 0 && \n                  (card_at_n >> 2) == (next_c >> 2) && \n                  (card_at_n % this.matchMode) == (next_c % this.matchMode)) {\n                n--;\n                next_c += 4;\n                deep++;\n              } else {\n                break;\n              }\n            }\n            if (n % (this.number + 1) == 0) {\n              return 0;\n            }\n            let prev_c = this.cards1[this.cards1.indexOf(next_c) + 1];\n            let priority = prevFn(prev_c, deep, accumulatedPriority);\n            \n            // 同步候选卡片的优先级\n            if (candidatePriorities.has(next_c)) {\n              candidatePriorities.set(next_c, Math.max(candidatePriorities.get(next_c), priority));\n            }\n            \n            return priority;\n          }\n          let prevCandidates = this.findAllCardsByRankOffset(next_c, -1);\n          let maxPriority = 0;\n          for (let prevCandidate of prevCandidates) {\n            let priority = nextFn(prevCandidate.idx, next_c, deep, accumulatedPriority);\n            maxPriority = Math.max(maxPriority, priority);\n            \n            // 同步候选卡片的优先级\n            if (candidatePriorities.has(prevCandidate.card)) {\n              candidatePriorities.set(prevCandidate.card, Math.max(candidatePriorities.get(prevCandidate.card), priority));\n            }\n          }\n          return maxPriority;\n        };\n        if (card >= 4) {\n          over = false;\n        }\n        nextFn(index, id, 0);\n        \n        // 深度搜索完成后，查找比 card 小一号的牌（规则：小的放到大的后面）\n        if (card >= 4) {\n          let candidates = this.findAllCardsByRankOffset(card, -1);\n          if (candidates.length > 0) {\n            // 存储所有候选及其优先级\n            let candidatesWithPriority = [];\n            \n            for (let candidate of candidates) {\n              // 模拟移动并检查哈希重复\n              let cardIdx = this.cards1.indexOf(card);\n              if (cardIdx < 0) continue;\n\n              // 创建临时状态来计算哈希\n              let tempCards = [...this.cards1];\n              tempCards[candidate.idx] = id;\n              tempCards[index] = candidate.card;\n              \n              let simulatedHash = tempCards.join(',');\n              \n              // 从深度搜索中获取该候选的优先级\n              let candidatePriority = candidatePriorities.get(candidate.card) || 0;\n              \n              // 计算基于新规则的优先级评分\n              const ruleBasedScore = this.calculateRuleBasedPriority(\n                this,\n                id,\n                { index: index, card: card },\n                candidate.card,\n                candidate.idx\n              );\n              \n              candidatesWithPriority.push({\n                card: candidate.card,\n                idx: candidate.idx,\n                priority: candidatePriority,\n                ruleBasedScore: ruleBasedScore,  // 新增：基于规则的评分\n                stateHash: simulatedHash  // 保存状态哈希用于后续过滤\n              });\n            }\n            \n            // 保存所有候选，留到最后统一比较\n            if (candidatesWithPriority.length > 0) {\n              temp[id].allCandidates = candidatesWithPriority;\n            } else if (candidates.length > 0) {\n              // 如果所有候选都被哈希过滤，记录这个空位以便后续清空 priority\n              slotsToResetPriority.push(id);\n            }\n          }\n        }\n      }\n      \n      // 四次深度搜索结束后，统一清空被哈希过滤的空位的 priority\n      for (let slotId of slotsToResetPriority) {\n        if (temp[slotId]) {\n          temp[slotId].priority = 0;\n        }\n      }\n      \n      if (over) {\n        this.updateN();\n        if (this.n >= (this.number + 1) * 4) {\n          this.gameManager.setWin();\n        } else {\n          this.gameManager.setLose();\n        }\n        return;\n      }\n      let signs = [-1, -2, -3, -4];\n      while (signs.length > 0) {\n        let ind;\n        for (ind = 0; ind < signs.length; ind++) {\n          if (temp[signs[ind]]._in <= 0) {\n            break;\n          }\n        }\n        if (ind < signs.length) {\n          let s = signs.splice(ind, 1)[0];\n          let j = 0;\n          while (j < prior.length) {\n            if (prior[j][0] == s) {\n              temp[prior[j][1]]._in--;\n              temp[prior[j][1]].deep = prior[j][2];\n              prior.splice(j, 1);\n              temp[s].able = false;\n            } else {\n              j++;\n            }\n          }\n        } else {\n          let road = [signs[0]];\n          while (prior.length > 0) {\n            let p = prior.findIndex((t) => t[1] == road[0]);\n            let index = road.indexOf(prior[p][0]);\n            if (index >= 0) {\n              temp[prior[p][1]]._in--;\n              prior.splice(p, 1);\n              for (let i = 0; i < index; i++) {\n                for (let j = 0; j < prior.length; j++) {\n                  if (prior[j][0] == road[i] && prior[j][1] == road[i + 1]) {\n                    temp[prior[j][1]]._in--;\n                    prior.splice(j, 1);\n                    break;\n                  }\n                }\n              }\n              break;\n            }\n            road.unshift(prior[p][0]);\n          }\n        }\n      }\n      this.next = [-1, -1];\n      let bestCandidate = null;\n      \n      // 遍历所有空位的所有候选，选择最优的\"空位+候选\"组合\n      for (let i = -4; i < 0; i++) {\n        let t = temp[i];\n        \n        // 跳过前面不是有效卡片的空位\n        if (t.card < 4) {\n          continue;\n        }\n        \n        // 获取该空位的所有候选\n        let allCandidates = t.allCandidates;\n        if (!allCandidates || allCandidates.length === 0) {\n          continue;\n        }\n        \n        // 验证：t.index 位置是否是空位\n        if (this.cards1[t.index] >= 0) {\n          continue;\n        }\n        \n        // 遍历该空位的所有候选\n        for (let candidateInfo of allCandidates) {\n          let targetCard = candidateInfo.card;\n          let candidatePriority = candidateInfo.priority;\n          let ruleBasedScore = candidateInfo.ruleBasedScore; // 获取基于规则的评分\n          \n          // 验证：targetCard 是否存在\n          let currentTargetIdx = this.cards1.indexOf(targetCard);\n          if (currentTargetIdx < 0) {\n            continue;\n          }\n          \n          // 检查状态哈希是否重复，如果重复则跳过\n          if (this.isStateHashRepeated(candidateInfo.stateHash)) {\n            allCandidates.splice(allCandidates.indexOf(candidateInfo), 1);\n            continue;\n          }\n\n          // 排除规则1：候选卡的rank等于同匹配组位置号-1的卡的rank-1\n          // 找到候选卡所在列的位置号-1的卡\n          const prevPosInCandidateCol = currentTargetIdx - 1;\n          const prevCardInCandidateCol = this.cards1[prevPosInCandidateCol];\n          if (prevCardInCandidateCol >= 0) {\n            const prevRankInCandidateCol = prevCardInCandidateCol >> 2;\n            const prevSuitInCandidateCol = prevCardInCandidateCol % 4;\n            const prevGroupInCandidateCol = prevSuitInCandidateCol % this.matchMode;\n            \n            // 如果是同匹配组，且候选卡rank = 该卡rank - 1，则排除\n            if (targetCard % this.matchMode === prevGroupInCandidateCol && (targetCard >> 2) === prevRankInCandidateCol - 1) {\n              continue;\n            }\n          }\n          \n          // 使用导入的工具函数创建候选对象，传入rule-based评分\n          const currentCandidate = createCandidate(targetCard, t.index, this, candidatePriority, t, currentTargetIdx, ruleBasedScore);\n          \n          // 判断是否替换最佳候选\n          if (!bestCandidate || isBetterCandidate(currentCandidate, bestCandidate)) {\n            bestCandidate = currentCandidate;\n            // 更新最佳移动\n            this.next = [currentCandidate.targetCard, currentCandidate.slotIndex];\n          }\n        }\n      }\n      \n      // isBetterCandidate函数已从candidateUtils.js导入，此处不再重复定义\n      \n      \n      // 如果没有找到有效移动，检查游戏状态\n      if (this.next[0] < 0) {\n        \n        // 检查四个空位的 priority 是否都为 0（只检查前面是有效卡片且有候选的空位）\n        let allPrioritiesZero = true;\n        let validSlotCount = 0;\n        for (let i = -4; i < 0; i++) {\n          if (temp[i] && temp[i].card >= 4) {\n            validSlotCount++;\n            // 只有既有 priority 又有候选的空位才算有效移动\n            const allCandidates = temp[i].allCandidates;\n            if (temp[i].priority > 0 && allCandidates && allCandidates.length > 0) {\n              allPrioritiesZero = false;\n            }\n          }\n        }\n        \n        // 计算已完成的牌数\n        this.updateN();\n        \n        // 如果所有牌都已完成，标记为胜利\n        if (this.n >= this.number * 4) {\n          this.gameManager.setWin();\n        } else if (allPrioritiesZero && validSlotCount > 0) {\n          // 仅当有有效空位且所有 priority 都为 0 时才设置失败\n          this.gameManager.setLose();\n        }\n      } else {\n        this.updateN();\n      }\n    },\n    \n    // 设置匹配难度\n    setMatchMode(mode) {\n      if ([1, 2, 4].includes(mode)) {\n        this.matchMode = mode;\n        this.init();  // 重新初始化游戏\n        console.log(`✅ 难度已设置为: ${mode === 1 ? '简单(数值)' : mode === 2 ? '中等(颜色)' : '困难(花色)'}`);\n      } else {\n        console.error('❌ 无效的难度模式，请使用 1, 2 或 4');\n      }\n    },\n    \n    // 获取当前难度的描述\n    getMatchModeDescription() {\n      const descriptions = {\n        1: '简单(数值匹配) - 任意点数相同即可连接',\n        2: '中等(颜色匹配) - 同颜色的牌可以连接',\n        4: '困难(花色匹配) - 必须同花色才能连接'\n      };\n      return descriptions[this.matchMode] || '未知难度';\n    },\n    \n    /**\n     * 渲染文本视图 - 显示当前游戏状态\n     * 用于终端交互式游戏\n     */\n    renderTextView() {\n      console.log('\\n╔════════════════════════════════════════════════╗');\n      console.log('║                排序游戏 (Sort)                ║');\n      console.log('╚════════════════════════════════════════════════╝');\n      console.log(`\\n难度: ${this.getMatchModeDescription()}`);\n      console.log(`完成度: ${this.n} / ${(this.number + 1) * 4} 张\\n`);\n      console.log('\\n图例: [-n] = 无卡牌可放入  [?X] = 有卡牌可放入  * = 可移动  → = 推荐移动');\n      \n      // 显示下一步提示\n      if (this.next && this.next[0] >= 0) {\n        const targetCard = getCardPlaceholderText(this.next[0]);\n        const targetSlotCard = this.cards1[this.next[1]];\n        const targetSlot = targetSlotCard < 0 ? ['[-1]', '[-2]', '[-3]', '[-4]'][Math.abs(targetSlotCard) - 1] : `[${this.next[1]}]`;\n        console.log(`\\n💡 建议移动: ${targetCard} → ${targetSlot}`);\n      }\n      \n      // 表格格式显示所有列\n      const colWidth = this.number + 1;\n      \n      // 创建表头（带行号列）\n      let header = '┌────┬';\n      let headerRow = '│    │';\n      let separator = '├────┼';\n      let footer = '└────┴';\n      \n      for (let col = 0; col < 4; col++) {\n        header += '───────┬';\n        headerRow += `  列${col + 1}  │`;\n        separator += '───────┼';\n        footer += '───────┴';\n      }\n      \n      header = header.slice(0, -1) + '┐';\n      headerRow = headerRow.slice(0, -1) + '│';\n      separator = separator.slice(0, -1) + '┤';\n      footer = footer.slice(0, -1) + '┘';\n      \n      console.log(header);\n      console.log(headerRow);\n      console.log(separator);\n      \n      // 按行显示卡片（从上到下）\n      for (let row = 0; row < colWidth; row++) {\n        let rowStr = `│行${(row + 1).toString().padStart(2)}│`;\n        \n        for (let col = 0; col < 4; col++) {\n          const idx = col * colWidth + row;\n          const card = this.cards1[idx];\n          \n          let cellContent = '';\n          let highlight = '';\n          \n          if (card < 0) {\n            // 空位 - 检查是否有卡牌可以放入\n            const emptySlotIndex = Math.abs(card) - 1; // 0, 1, 2, 3\n            const prevCardIndex = idx - 1;\n            const prevCard = this.cards1[prevCardIndex];\n            // 没有可放入的卡牌，显示负数ID\n            const emptyLabel = ['[-1]', '[-2]', '[-3]', '[-4]'][emptySlotIndex];\n            cellContent = emptyLabel;\n            \n            if (prevCard >= 4) { // 前面有有效卡牌\n              const candidates = this.findAllCardsByRankOffset(prevCard, -1);\n              if (candidates && candidates.length > 0) {\n                // 有可放入的卡牌，显示问号格式\n                const firstCandidate = candidates[0];\n                const candidateText = getCardPlaceholderText(firstCandidate.card);\n                cellContent = `[?${candidateText.slice(1)}]`; // 替换第一个字符为问号\n              }\n            }\n          } else {\n            // 有效卡片\n            const cardText = getCardPlaceholderText(card);\n            const canMove = this.canMoveCard(card);\n            const isTarget = this.next && this.next[0] === card;\n            \n            if (isTarget) {\n              highlight = '→'; // 下一步建议\n              cellContent = `${highlight}${cardText}`;\n            } else if (canMove) {\n              highlight = '*'; // 可移动\n              cellContent = `${highlight}${cardText}`;\n            } else {\n              cellContent = cardText;\n            }\n          }\n          \n          // 居中对齐\n          const padding = Math.max(0, 7 - cellContent.length);\n          const leftPad = Math.floor(padding / 2);\n          const rightPad = padding - leftPad;\n          \n          rowStr += ' '.repeat(leftPad) + cellContent + ' '.repeat(rightPad) + '│';\n        }\n        \n        console.log(rowStr);\n      }\n      \n      console.log(footer);\n      \n      return '渲染完成';\n    },\n    \n    /**\n     * 获取当前可用的操作列表\n     * 用于终端交互式游戏\n     * 使用工厂函数中统一实现的方法\n     */\n    \n    /**\n     * 发送自定义按钮到eventBus\n     */\n    sendCustomButtons() {\n      const nextMode = this.matchMode === 1 ? 2 : this.matchMode === 2 ? 4 : 1;\n      const customButtons = [{\n        action: 'difficulty',\n        label: '切换难度 (简单→中等→困难)',\n        method: 'setMatchMode',\n        args: [nextMode],\n        description: '切换游戏难度模式'\n      }];\n      \n      this.sendCustomButtonsToEventBus(customButtons);\n    },\n  },\n  \n  /**\n   * 组件挂载时注册自定义按钮\n   */\n  created() {\n    // 发送自定义按钮到eventBus\n    this.sendCustomButtons();\n  },\n  \n  /**\n   * 当matchMode变化时，更新自定义按钮\n   */\n  watch: {\n    matchMode() {\n      this.sendCustomButtons();\n    },\n    \n    // 保留原有的cards1监听\n    cards1: {\n      handler() {\n        this.$nextTick(() => {\n          this.updateAllCandidateCycling();\n        });\n      },\n      deep: true\n    }\n  },\n  \n\n};\n\n// 使用工厂函数创建增强的Sort组件并导出\nexport default GameComponentPresets.puzzleGame(Sort, 500);\n","import { render } from \"./Sort.vue?vue&type=template&id=13db5f3b&scoped=true\"\nimport script from \"./Sort.vue?vue&type=script&lang=js\"\nexport * from \"./Sort.vue?vue&type=script&lang=js\"\n\nimport \"./Sort.vue?vue&type=style&index=0&id=13db5f3b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-13db5f3b\"]])\n\nexport default __exports__","<template>\n  <GameLayout\n    v-bind=\"gameLayoutProps\"\n    @goon=\"goon\"\n    @step=\"stepFn\"\n    @auto=\"pass\"\n  >\n    <template #game-content>\n      <div class=\"row\">\n        <span>TIME: {{ time }}</span>\n        <br />\n        <span>STEP: {{ step }}</span>\n      </div>\n      <div class=\"row\">\n        <div>\n          <ul\n            class=\"cardsul flex-row center\"\n            style=\"padding-left: 0; margin: 0\"\n          >\n            <CardImage\n              v-for=\"(item, i) in cards1\"\n              :key=\"i\"\n              class=\"card m-0 radius\"\n              style=\"max-width: 25%\"\n              :card-id=\"sign == item || sign2 == item || cards2[item] ? item : 'bg'\"\n              @click=\"(sign != item && sign2 != item && !cards2[item]) && canOperate && clickCard(item, i)\"\n            />\n          </ul>\n        </div>\n      </div>\n    </template>\n\n    <template #win-content>\n      <h1 class=\"small\">TIME: {{ time }}</h1>\n      <h1 class=\"small\">STEP: {{ step }}</h1>\n    </template>\n  </GameLayout>\n</template>\n\n<script>\nimport PairsComponent from \"./Pairs.js\";\n\nconst component = PairsComponent;\n\nexport default component;\n</script>\n\n<style scoped>\n@import url(\"./sum.css\");\n</style>\n","import { shuffleCards } from \"../utils/help.js\";\nimport { GameComponentPresets } from \"../utils/gameComponentFactory.js\";\nimport { getCardPlaceholderText } from \"../utils/cardUtils.js\";\n\nconst Pairs = {\n  name: \"Pairs\",\n  data() {\n    return {\n      title: \"Pairs\",\n      cards1: [],\n      cards2: [],\n      arr: [],\n      sign: -1,\n      sign2: -2,\n      time: 0,\n      _timer: 0,\n      number: 48,\n      n: 0,\n    };\n  },\n  methods: {\n    init() {\n      this.time = 0;\n      clearInterval(this._timer);\n      this._timer = 0;\n      this.sign = -1;\n      this.sign2 = -1;\n      this.cards1.splice(0);\n      this.arr.splice(0);\n      this.cards2.splice(0);\n      let cards = this.cards1;\n      for (let i = 0; i < this.number; i++) {\n        cards.push(i);\n        this.cards2.push(false);\n      }\n      shuffleCards(cards, this.number);\n    },\n    async clickCard(card) {\n      if (!this._timer) {\n        this._timer = setInterval(() => {\n          this.time++;\n        }, 1000);\n      }\n      if (this.sign == card || this.cards2[card]) {\n        return;\n      }\n      this.arr[card] = true;\n      this.gameManager.recordOperation();\n      if (this.sign < 0) {\n        this.sign = card;\n        return;\n      }\n      if (this.sign >> 2 == card >> 2) {\n        this.cards2.splice(card, 1, true);\n        this.cards2.splice(this.sign, 1, true);\n        this.sign = -1;\n      }\n      this.gameManager.hitflag = false;\n      this.sign2 = card;\n      await this.wait();\n      this.sign = -1;\n      this.sign2 = -1;\n      this.gameManager.hitflag = true;\n\n      // 检查游戏是否结束\n      let gameOver = true;\n      for (let i = 0; i < this.number; i++) {\n        if (!this.cards2[i]) {\n          gameOver = false;\n          break;\n        }\n      }\n\n      if (gameOver) {\n        this.gameManager.setWin();\n        clearInterval(this._timer);\n        this._timer = 0;\n      }\n    },\n    async stepFn() {\n      if (this.sign >= 0) {\n        for (let i = 0; i < 4; i++) {\n          let sign = this.sign - (this.sign % 4) + i;\n          if (sign != this.sign && this.arr[sign] && !this.cards2[sign]) {\n            return await this.clickCard(sign);\n          }\n        }\n      } else {\n        let num;\n        for (let i = 0; i < this.number; i++) {\n          if (i % 4 == 0) {\n            num = 0;\n          }\n          if (this.arr[i] && !this.cards2[i]) {\n            num++;\n          }\n          if (num > 1) {\n            return await this.clickCard(i);\n          }\n        }\n      }\n      for (let i = 0; i < this.number; i++) {\n        let c = this.cards1[i];\n        if (!this.arr[c] && !this.cards2[c]) {\n          return await this.clickCard(c);\n        }\n      }\n    },\n    \n    /**\n     * 渲染文本视图 - 显示当前游戏状态\n     * 用于终端交互式游戏\n     */\n    renderTextView() {\n      console.log('\\n╔════════════════════════════════════════════════╗');\n      console.log('║              配对游戏 (Pairs)                 ║');\n      console.log('╚════════════════════════════════════════════════╝');\n      \n      // 统计信息\n      const matched = this.cards2.filter(m => m).length;\n      console.log(`\\n时间: ${this.time}秒 | 已配对: ${matched}/${this.number} 张\\n`);\n      \n      console.log('\\n图例:');\n      console.log('  [?] = 未翻开  [✓] = 已看过  > = 第一张  * = 第二张');\n      \n      console.log(this.sign >= 0 ? `\\n当前选中: ${getCardPlaceholderText(this.sign)} (需要配对)` : '\\n');\n      \n      // 按6x8网格显示 - 与Vue模板保持一致\n      const cols = 8;\n      const rows = 6;\n      \n      for (let row = 0; row < rows; row++) {\n        let line = '  ';\n        for (let col = 0; col < cols; col++) {\n          const position = row * cols + col;\n          const cardId = this.cards1[position]; // 获取该位置的牌ID\n          \n          // 检查这张牌是否被翻开或选中\n          const isFlipped = this.cards2[cardId] || cardId === this.sign || cardId === this.sign2;\n          const isSeen = this.arr[cardId];\n          \n          if (isFlipped) {\n            // 已翻开或当前选中\n            const cardText = getCardPlaceholderText(cardId);\n            const prefix = cardId === this.sign ? '>' : cardId === this.sign2 ? '*' : '';\n            line += `${(prefix + cardText).padEnd(3)} `;\n          } else if (isSeen) {\n            line += '[✓] ';\n          } else {\n            // 未翻开\n            line += '[?] ';\n          }\n        }\n        console.log(line);\n      }\n      \n      return '渲染完成';\n    },\n    \n    /**\n     * 获取当前可用的操作列表\n     * 用于终端交互式游戏\n     * 使用工厂函数中统一实现的方法\n     */\n  },\n};\n\n// 使用工厂函数创建增强的Pairs组件并导出\nexport default GameComponentPresets.pairGame(Pairs, 500);\n","import { render } from \"./Pairs.vue?vue&type=template&id=7ddc48e3&scoped=true\"\nimport script from \"./Pairs.vue?vue&type=script&lang=js\"\nexport * from \"./Pairs.vue?vue&type=script&lang=js\"\n\nimport \"./Pairs.vue?vue&type=style&index=0&id=7ddc48e3&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7ddc48e3\"]])\n\nexport default __exports__","<template>\n  <GameLayout\n    v-bind=\"gameLayoutProps\"\n    @undo=\"undo\"\n    @goon=\"goon\"\n    @step=\"stepFn\"\n    @auto=\"pass\"\n  >\n    <template #game-content>\n      <div class=\"row\">\n        <div calss=\"center\">\n          <ul\n            ref=\"container\"\n            class=\"cardsul rela center\"\n            style=\"padding-left: 0; max-width: 31.25rem; margin: auto\"\n            :style=\"{ height: height / 16 + 'rem' }\"\n          >\n            <CardImage\n              card-id=\"bg\"\n              :hide=\"cards[0].length === 0\"\n              class=\"m-0 static card m-0 abso\"\n              style=\"\n                max-width: 6.25rem;\n                width: 25%;\n                height: 9.375rem;\n                z-index: 0;\n                left: 0;\n                top: 0;\n              \"\n              @click=\"canOperate && clickCard(0)\"\n            />\n            <li\n              class=\"cards m-0 static\"\n              style=\"width: 50%; height: 9.375rem\"\n              :style=\"{ zIndex: dragItem == 1 ? 10 : 0 }\"\n              :class=\"{ drag: dragItem == 1 }\"\n            >\n              <CardImage\n                v-for=\"i in cards[1].length >= (turn > 3 ? 1 : 4 - turn)\n                  ? turn > 3\n                    ? 1\n                    : 4 - turn\n                  : cards[1].length\"\n                :key=\"cards[1][i - 1] + (fresh[1] * 3 + 1) * number\"\n                class=\"m-0 card abso\"\n                style=\"width: 25%; top: 0\"\n                :style=\"{ left: (3 - i) * 12.5 + 25 + '%', zIndex: 3 - i }\"\n                v-move=\"{ start, end, move }\"\n                :class=\"{\n                  drag: dragItem == 1,\n                  opa0: dragCard == cards[1][i - 1] && enterItem >= 0,\n                  shanshuo: sign == cards[1][i - 1],\n                }\"\n                :card-id=\"cards[1][i - 1]\"\n              />\n            </li>\n            <li\n              class=\"m-0 center\"\n              style=\"width: 25%; max-width: 6.25rem; height: 9.375rem\"\n            >\n              <span\n                class=\"m-0\"\n                :style=\"{ color: turn > 3 ? 'red' : 'inherit' }\"\n                >{{ turn }}</span\n              ><span class=\"m-0\">/3</span>\n            </li>\n            <li style=\"height: 1.875rem; width: 100%\"></li>\n            <li\n              v-for=\"i in 4\"\n              :key=\"i\"\n              class=\"cards m-0 static center\"\n              style=\"width: 25%; height: 9.375rem\"\n              :class=\"{ drag: dragItem == i + 1 }\"\n              ref=\"middleBox\"\n              :style=\"{ zIndex: dragItem == i + 1 ? 10 : 1 }\"\n              @mouseenter=\"enter(i + 1)\"\n              @touchenter=\"enter(i + 1)\"\n              @mouseleave=\"leave(i + 1)\"\n              @touchleave=\"leave(i + 1)\"\n            >\n              <div\n                class=\"card m-0 abso\"\n                style=\"top: 11.25rem; width: 25%\"\n                @click=\"canOperate && clickCard(i + 1)\"\n                :style=\"{\n                  zIndex: dragItem == i + 1 ? 10 : 1,\n                  left: (i - 1) * 25 + '%',\n                }\"\n              >\n                <span class=\"m-0\">{{ types[i - 1] + \"A\" }}</span>\n              </div>\n              <CardImage\n                v-for=\"item in cards[i + 1]\"\n                :key=\"item + (fresh[i + 1] * 3 + 2) * number\"\n                class=\"card m-0 abso\"\n                style=\"top: 11.25rem; width: 25%\"\n                :style=\"{ left: (i - 1) * 25 + '%' }\"\n                v-move=\"{ start, end, move }\"\n                :class=\"{\n                  drag: dragItem == i + 1,\n                  shanshuo: sign == item,\n                  opa0: dragCard == item && enterItem >= 0,\n                }\"\n                :card-id=\"item\"\n              />\n              <CardImage\n                :card-id=\"dragCard\"\n                :style=\"{ left: (i - 1) * 25 + '%' }\"\n                class=\"card m-0 abso\"\n                v-show=\"dragCard >= 0 && enterItem == i + 1\"\n                style=\"width: 25%; height: 9.375rem; top: 11.25rem\"\n              />\n            </li>\n            <li style=\"height: 1.875rem; width: 100%\"></li>\n            <li\n              v-for=\"i in 4\"\n              :key=\"i + 4\"\n              class=\"cards m-0 static\"\n              style=\"width: 25%\"\n              :class=\"{ drag: dragItem == i + 5 }\"\n              :style=\"{\n                height: (cards[i + 5].length * 30 + 120) / 16 + 'rem',\n                zIndex: dragItem == i + 5 ? 10 : 1,\n              }\"\n              ref=\"downBox\"\n              @mouseenter=\"enter(i + 5)\"\n              @touchenter=\"enter(i + 5)\"\n              @mouseleave=\"leave(i + 5)\"\n              @touchleave=\"leave(i + 5)\"\n            >\n              <CardImage\n                v-for=\"(item, j) in cards[i + 5]\"\n                :key=\"item + (fresh[i + 5] * 3 + 3) * number\"\n                class=\"m-0 card abso\"\n                style=\"width: 25%; height: 9.375rem\"\n                :style=\"{\n                  top: (j * 30 + 360) / 16 + 'rem',\n                  left: (i - 1) * 25 + '%',\n                }\"\n                :class=\"{\n                  drag: dragItem == i + 5,\n                  opa0: dragItem == i + 5 && dragCard >= item && enterItem >= 0,\n                  shanshuo: sign == item,\n                }\"\n                v-move=\"{ start, end, move }\"\n                ref=\"down\"\n                :card-id=\"item\"\n              />\n              <CardImage\n                v-for=\"(item, j) in cards[dragItem]\"\n                :key=\"j + 8\"\n                :card-id=\"item\"\n                :style=\"{\n                  top:\n                    (cards[i + 5].length * 30 +\n                      (j - cards[dragItem].indexOf(dragCard)) * 30 +\n                      360) /\n                      16 +\n                    'rem',\n                  left: (i - 1) * 25 + '%',\n                }\"\n                class=\"card m-0 abso\"\n                v-show=\"\n                  enterItem == i + 5 &&\n                  ((dragItem >= 6 && dragCard >= item) || dragCard == item)\n                \"\n                style=\"width: 25%; height: 9.375rem\"\n              />\n            </li>\n          </ul>\n        </div>\n      </div>\n    </template>\n  </GameLayout>\n</template>\n\n<script>\nimport SpiderComponent from \"./Spider.js\";\n\nconst component = SpiderComponent;\n\nexport default component;\n</script>\n\n<style scoped>\n@import url(\"./sum.css\");\n.card,\n.cards {\n  z-index: 1;\n}\n.drag {\n  pointer-events: none;\n  z-index: 0;\n}\n.opa0 {\n  opacity: 0;\n}\n</style>\n","var move = {};\nvar getPosition = function (e, isTouch) {\n  if (isTouch) {\n    e = e.touches[0];\n  }\n  return [e.clientX, e.clientY];\n};\nvar updateMoveData = function (el, e, isTouch) {\n  const data = el._moveData;\n  data.position = getPosition(e, isTouch);\n  data.offsetX = data.position[0] - data.startPosition[0];\n  data.offsetY = data.position[1] - data.startPosition[1];\n};\nvar prevent = function (e, bubbles) {\n  e.cancelable && e.preventDefault();\n  !bubbles && e.stopPropagation();\n  return false;\n};\nvar emit = (el, name, detail, bubbles, cancelable) => {\n  el.dispatchEvent(\n    new CustomEvent(name, {\n      detail,\n      bubbles,\n      cancelable,\n    }),\n  );\n};\nmove.emit = emit;\nvar listenEvents = (el, events, handles = {}) => {\n  for (const name of events) {\n    typeof handles[name] === \"function\" &&\n      el.addEventListener(name, handles[name]);\n  }\n};\nmove.listenEvents = listenEvents;\nmove.mounted = function (el, binding, vnode) {\n  if (el._isInitMove) {\n    return;\n  }\n  el._isInitMove = true;\n  var { page = window } = binding.value || {};\n  var { bubbles } = binding.modifiers;\n  listenEvents(el, [\"start\", \"move\", \"end\"], binding.value);\n  var isMove = false;\n  var isTouch;\n\n  function cancel() {\n    isMove = false;\n    el.removeEventListener(\"cancel\", cancel);\n    if (isTouch) {\n      page.removeEventListener(\"touchend\", _end);\n      page.removeEventListener(\"touchmove\", _move);\n      page.removeEventListener(\"touchcancel\", _end);\n    } else {\n      page.removeEventListener(\"mouseup\", _end);\n      page.removeEventListener(\"mousemove\", _move);\n    }\n  }\n\n  function _start(e) {\n    isTouch = e.type === \"touchstart\";\n    el.addEventListener(\"cancel\", cancel);\n    if (isTouch) {\n      page.addEventListener(\"touchend\", _end, { passive: false });\n      page.addEventListener(\"touchmove\", _move, { passive: false });\n      page.addEventListener(\"touchcancel\", _end, { passive: false });\n    } else {\n      page.addEventListener(\"mouseup\", _end, { passive: false });\n      page.addEventListener(\"mousemove\", _move, { passive: false });\n    }\n    if (!el._moveData) {\n      el._moveData = { isTouch };\n    }\n    el._moveData.startPosition = getPosition(e, isTouch);\n    // updateMoveData(el, e, isTouch)\n    emit(el, \"start\", {\n      el,\n      binding,\n      vnode,\n    });\n    return prevent(e, bubbles);\n  }\n\n  function _move(e) {\n    updateMoveData(el, e, isTouch);\n    emit(el, \"move\", {\n      el,\n      binding,\n      vnode,\n    });\n    isMove = true;\n    return prevent(e, bubbles);\n  }\n\n  function _end(e) {\n    if (!isMove) {\n      const data = el._moveData;\n      data.offsetX = 0;\n      data.offsetY = 0;\n      emit(el, \"notmove\");\n    }\n    emit(el, \"end\", {\n      el,\n      binding,\n      vnode,\n    });\n    emit(el, \"cancel\");\n    return prevent(e, bubbles);\n  }\n  el.addEventListener(\"touchstart\", _start);\n  el.addEventListener(\"mousedown\", _start);\n};\nmove.bind = move.mounted;\nmove.install = function (Vue) {\n  Vue.directive(\"move\", move);\n};\nexport default move;\n","import { shuffleCards, checkDeadForeach } from \"../utils/help.js\";\nimport move from \"../directives/move.js\";\nimport { GameComponentPresets } from \"../utils/gameComponentFactory.js\";\nimport { getCardPlaceholderText } from \"../utils/cardUtils.js\";\n\nconst Spider = {\n  name: \"Spider\",\n  data() {\n    return {\n      title: \"Spider\",\n      cards: [[], [], [], [], [], [], [], [], [], []],\n      fresh: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      sign: -99,\n      index: -99,\n      dragCard: -99,\n      dragItem: -99,\n      enterItem: -99,\n      turn: 1,\n      number: 52,\n    };\n  },\n  directives: { move },\n  created: function () {\n    this.sendCustomButtons();\n    this.setupGameStateListeners();\n  },\n  mounted() {\n    let enter = (i) => () => this.moveEnter(i);\n    if (!this.$refs.middleBox || !this.$refs.downBox) return;\n    this.middleEnters = [];\n    this.downEnters = [];\n    for (let i = 0; i < 4; i++) {\n      let middle = this.$refs.middleBox[i];\n      let down = this.$refs.downBox[i];\n      this.middleEnters[i] = enter(i + 2);\n      this.downEnters[i] = enter(i + 6);\n      middle.addEventListener(\"mousemove\", this.middleEnters[i]);\n      middle.addEventListener(\"touchmove\", this.middleEnters[i]);\n      down.addEventListener(\"mousemove\", this.downEnters[i]);\n      down.addEventListener(\"touchmove\", this.downEnters[i]);\n    }\n  },\n  beforeUnmount() {\n    this.gameManager.off(\"stateChange\");\n    if (!this.$refs.middleBox || !this.$refs.downBox || !this.middleEnters || !this.downEnters) return;\n    for (let i = 0; i < 4; i++) {\n      let middle = this.$refs.middleBox[i];\n      let down = this.$refs.downBox[i];\n      middle.removeEventListener(\"mousemove\", this.middleEnters[i]);\n      middle.addEventListener(\"touchmove\", this.middleEnters[i]);\n      down.addEventListener(\"mousemove\", this.downEnters[i]);\n      down.addEventListener(\"touchmove\", this.downEnters[i]);\n    }\n  },\n  // 初始化\n  methods: {\n    setupGameStateListeners() {\n      // 监听游戏状态变化\n      this.gameManager.on(\"stateChange\", () => {\n        this.$forceUpdate(); // 强制更新视图\n      });\n    },\n    init() {\n      this.gameManager.init();\n      for (let i = 0; i < 10; i++) {\n        this.cards[i].splice(0);\n      }\n      this.fresh = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      this.turn = 1;\n      this.sign = -99;\n      this.dragItem = -99;\n      this.dragCard = -99;\n      this.enterItem = -99;\n      let cards = this.cards[0];\n      for (let i = 0; i < this.number; i++) {\n        cards.push(i);\n      }\n      shuffleCards(cards, this.number);\n      for (let i = 6; i < 10; i++) {\n        this.cards[i].push(this.cards[0].splice(-1)[0]);\n      }\n    },\n    findPos(card) {\n      for (let i = 2; i < 10; i++) {\n        if (this.cards[i].indexOf(card) >= 0) {\n          return i;\n        }\n      }\n      return -99;\n    },\n    addAndCheck(card, type) {\n      let res = checkDeadForeach(this.record, [card, type]);\n      if (!res) return false;\n      this.record.unshift([card, type]);\n      return true;\n    },\n    checkDown(card) {\n      if (!this.addAndCheck(card, 1)) return;\n      let type = card % 2;\n      let level = card >> 2;\n      if (level == 12) {\n        return false;\n      }\n      let up1 = ((level + 1) % 13) * 4 + !type;\n      let up2 = up1 + 2;\n      let pos1 = this.findPos(up1);\n      let pos2 = this.findPos(up2);\n      if (pos1 < 0 && pos2 < 0) {\n        return false;\n      } else if (pos1 >= 6 && pos2 >= 6) {\n        let pos = this.findPos(card);\n        let top1 = this.cards[pos1][this.cards[pos1].length - 1];\n        let top2 = this.cards[pos2][this.cards[pos2].length - 1];\n        if (top1 != up1 && top2 != up2) {\n          return false;\n        }\n        if (pos == (top1 == up1 ? pos1 : pos2)) {\n          return false;\n        }\n        return [pos, top1 == up1 ? pos1 : pos2];\n      }\n      if (pos1 >= 6 || pos2 >= 6) {\n        let cards = pos1 >= 6 ? this.cards[pos1] : this.cards[pos2];\n        let up = pos1 >= 6 ? up1 : up2;\n        let index = cards.indexOf(up);\n        if (index == cards.length - 1) {\n          let pos = this.findPos(card);\n          if (pos != (pos1 >= 6 ? pos1 : pos2)) {\n            return [pos, pos1 >= 6 ? pos1 : pos2];\n          }\n        } else {\n          let res = this.checkUp(cards[index + 1]);\n          if (res) {\n            return res;\n          }\n        }\n        if (pos1 < 0 || pos2 < 0) {\n          return false;\n        }\n      }\n      let first;\n      if (pos1 - 2 == up1 % 4) {\n        let i = 0;\n        let top = this.cards[pos1][this.cards[pos1].length - 1];\n        while (top - 4 * i >= up1) {\n          let res = this.checkDown(top - 4 * i);\n          if (!res) {\n            break;\n          }\n          if (!first) {\n            first = res;\n          }\n          i++;\n        }\n        if (top - 4 * i < up1) {\n          return first;\n        }\n      }\n      if (pos2 - 2 == up2 % 4) {\n        let i = 0;\n        let top = this.cards[pos2][this.cards[pos2].length - 1];\n        while (top - 4 * i >= up2) {\n          let res = this.checkDown(top - 4 * i);\n          if (!res) {\n            break;\n          }\n          if (!first) {\n            first = res;\n          }\n          i++;\n        }\n        if (top - 4 * i < up2) {\n          return first;\n        }\n      }\n      return false;\n    },\n    checkUp(card) {\n      if (!this.addAndCheck(card, 2)) return;\n      let type = card % 4;\n      let level = card >> 2;\n      let result = [];\n      for (let i = 0; i <= level; i++) {\n        let temp = i * 4 + type;\n        let pos = this.findPos(temp);\n        if (pos < 0) {\n          if (i == level) {\n            result.push([pos, type + 2]);\n            break;\n          }\n          return false;\n        }\n        if (pos == type + 2) {\n          continue;\n        }\n        let index = this.cards[pos].indexOf(temp);\n        if (index == this.cards[pos].length - 1) {\n          result.push([pos, type + 2]);\n          continue;\n        }\n        let res = this.checkMove(this.cards[pos][index + 1]);\n        if (!res) {\n          return false;\n        }\n        result.push(res);\n      }\n      return result[0];\n    },\n    checkMove(card) {\n      if (!this.addAndCheck(card, 0)) return;\n      return this.checkDown(card) || this.checkUp(card);\n    },\n    async stepFn() {\n      await this.gameManager.step(async () => {\n        let next = false;\n        for (let i = 6; i < 10; i++) {\n          this.record = [];\n          next = this.checkMove(this.cards[i][0]);\n          if (next) {\n            if (\n              !this.skipCheck &&\n              !checkDeadForeach(this.gameManager.history, [next[1], next[0]])\n            )\n              continue;\n            break;\n          }\n        }\n        this.record = [];\n        !next &&\n          this.cards[1].length > 0 &&\n          (next = this.checkMove(this.cards[1][0]));\n        if (\n          !next ||\n          (!this.skipCheck &&\n            !checkDeadForeach(this.gameManager.history, [next[1], next[0]]))\n        ) {\n          return this.clickCard(0);\n        }\n        this.skipCheck = false;\n        this.sign = -99;\n        await this.clickCard(next[0] < 0 ? 1 : next[0]);\n        await this.wait();\n        await this.clickCard(next[1]);\n      });\n    },\n    async addCard() {\n      for (let i = 6; i < 10; i++) {\n        if (this.cards[i].length <= 0) {\n          if (this.cards[1].length > 0) {\n            this.gameManager.recordOperation([i, 1, 0, 1], true);\n            this.cards[i].push(this.cards[1].splice(0, 1)[0]);\n          } else if (this.cards[0].length > 0) {\n            this.gameManager.recordOperation(\n              [i, 0, this.cards[0].length - 1, 1],\n              true,\n            );\n            this.cards[i].push(this.cards[0].splice(-1)[0]);\n          }\n        }\n      }\n      if (this.cards[0].length <= 0 && this.cards[1].length <= 0) {\n        if (this.lock) {\n          return false;\n        }\n        this.dragCard = -99;\n        this.dragItem = -99;\n        this.enterItem = -99;\n        this.lock = true;\n        for (let i = 0; i < this.number; i++) {\n          let type = i % 4;\n          while (this.cards[type + 2].length <= i >> 2) {\n            this.record = [];\n            let next = this.checkUp(i);\n            if (\n              !next ||\n              (!this.skipCheck &&\n                !checkDeadForeach(this.gameManager.history, [next[1], next[0]]))\n            ) {\n              for (let j = 6; j < 10; j++) {\n                if (this.cards[j].length <= 0 || this.cards[j][0] >> 2 >= 12) {\n                  continue;\n                }\n                this.record = [];\n                next = this.checkMove(this.cards[j][0]);\n                if (next) {\n                  if (\n                    !this.skipCheck &&\n                    !checkDeadForeach(this.gameManager.history, [\n                      next[1],\n                      next[0],\n                    ])\n                  ) {\n                    next = false;\n                    continue;\n                  }\n                  break;\n                }\n              }\n            }\n            if (!next) {\n              this.skipCheck = true;\n              continue;\n            }\n            this.skipCheck = false;\n            this.sign = -99;\n            await this.clickCard(next[0]);\n            await this.wait();\n            await this.clickCard(next[1]);\n            for (let k = 6; k < 10; k++) {\n              if (this.cards[k].length <= 0) {\n                let pos = this.findPos(i);\n                if (this.cards[pos][this.cards[pos].length - 1] != i) {\n                  let index = this.cards[pos].indexOf(i);\n                  let next = [\n                    k,\n                    pos,\n                    index + 1,\n                    this.cards[pos].length - index - 1,\n                    i,\n                  ];\n                  this.cards[k].push(...this.cards[pos].splice(index + 1));\n                  this.gameManager.recordOperation(next, true);\n                  continue;\n                }\n                let l;\n                for (l = 48; l < 52; l++) {\n                  let pos = this.findPos(l);\n                  if (pos < 6) {\n                    continue;\n                  }\n                  let index = this.cards[pos].indexOf(l);\n                  if (l <= 0) {\n                    continue;\n                  }\n                  let next = [k, pos, index, this.cards[pos].length - index, l];\n                  if (!checkDeadForeach(this.gameManager.history, next)) {\n                    continue;\n                  }\n                  this.cards[k].push(...this.cards[pos].splice(index));\n                  this.gameManager.recordOperation(next, true);\n                  break;\n                }\n                if (l < 52) {\n                  continue;\n                }\n                for (l = 6; l < 10; l++) {\n                  if (this.cards[l].length > 1) {\n                    let next = [k, l, this.cards[l].length - 1, 1];\n                    if (!checkDeadForeach(this.gameManager.history, next)) {\n                      continue;\n                    }\n                    this.cards[k].push(this.cards[l].splice(-1)[0]);\n                    this.gameManager.recordOperation(next, true);\n                    break;\n                  }\n                }\n              }\n            }\n          }\n        }\n        this.sign = -99;\n        this.gameManager.setWin();\n        this.lock = false;\n      }\n    },\n    async clickCard(index) {\n      let len = this.cards[index].length;\n      if (index == 0) {\n        if (this.cards[0].length > 0) {\n          this.gameManager.recordOperation(\n            [1, 0, this.turn > 3 ? 1 : 4 - this.turn],\n            true,\n          );\n          this.cards[1].unshift(\n            ...this.cards[0].splice(this.turn > 3 ? -1 : this.turn - 4),\n          );\n        } else {\n          for (let i = 0; i < this.gameManager.history.length; i++) {\n            let step = this.gameManager.history[i];\n            if (step[0] == 0 && step[1] == 1) {\n              this.skipCheck = true;\n            } else if (step[0] != 1 || step[1] != 0) {\n              break;\n            }\n          }\n          this.gameManager.recordOperation([0, 1, this.cards[1].length], true);\n          this.cards[0].unshift(...this.cards[1].splice(0));\n          this.turn++;\n        }\n        this.sign = -99;\n      } else if (index == 1) {\n        if (len > 0) {\n          this.sign = this.cards[index][0];\n          this.index = index;\n        }\n      } else if (index < 6) {\n        if (this.sign == index - 2 + len * 4) {\n          this.gameManager.recordOperation(\n            [index, this.index, this.cards[this.index].indexOf(this.sign), 1],\n            true,\n          );\n          this.cards[index].push(\n            this.cards[this.index].splice(\n              this.cards[this.index].indexOf(this.sign),\n              1,\n            )[0],\n          );\n          this.sign = -99;\n        } else {\n          if (len > 0) {\n            this.sign = this.cards[index][len - 1];\n            this.index = index;\n          }\n        }\n      } else {\n        let top = this.cards[index][len - 1],\n          i;\n        if (\n          this.sign >= 0 &&\n          this.index >= 6 &&\n          (i = this.cards[this.index].findIndex((card) => {\n            return (\n              card >> 2 < 13 &&\n              card % 2 != top % 2 &&\n              ((card >> 2) + 1) % 13 == top >> 2\n            );\n          })) >= 0\n        ) {\n          this.gameManager.recordOperation(\n            [index, this.index, i, this.cards[this.index].length - i, top],\n            true,\n          );\n          this.cards[index].push(...this.cards[this.index].splice(i));\n          this.sign = -99;\n        } else if (\n          this.sign >= 0 &&\n          this.index < 6 &&\n          this.sign >> 2 < 13 &&\n          this.sign % 2 != top % 2 &&\n          ((this.sign >> 2) + 1) % 13 == top >> 2\n        ) {\n          this.gameManager.recordOperation(\n            [\n              index,\n              this.index,\n              this.cards[this.index].indexOf(this.sign),\n              1,\n              top,\n            ],\n            true,\n          );\n          this.cards[index].push(\n            this.cards[this.index].splice(\n              this.cards[this.index].indexOf(this.sign),\n              1,\n            )[0],\n          );\n          this.sign = -99;\n        } else if (len > 0) {\n          this.sign = top;\n          this.index = index;\n        }\n      }\n      if (this.sign < 0) {\n        await this.addCard();\n      }\n    },\n    undo() {\n      this.sign = -99;\n      if (this.step <= 0) {\n        return;\n      }\n      let temp = this.gameManager.history.shift(),\n        add = false;\n      if (temp[1] == 0) {\n        if (temp[0] == 1)\n          return this.cards[0].push(...this.cards[1].splice(0, temp[2]));\n        else {\n          add = true;\n          this.cards[0].push(this.cards[temp[0]].splice(0, 1)[0]);\n        }\n      } else if (temp[1] == 1) {\n        if (temp[0] != 0) {\n          this.cards[1].unshift(this.cards[temp[0]].splice(-1)[0]);\n          add = true;\n          if (temp[0] < 6 || this.cards[temp[0]].length > 0) {\n            return;\n          }\n        } else {\n          this.cards[1].unshift(...this.cards[0].splice(0));\n          this.turn--;\n          return;\n        }\n      }\n      if (add) {\n        temp = this.gameManager.history.shift();\n      }\n      this.cards[temp[1]].splice(\n        temp[2],\n        0,\n        ...this.cards[temp[0]].splice(-temp[3]),\n      );\n    },\n    start(e) {\n      // 方法1：尝试从绑定的组件实例获取数据\n      let item = -1;\n      \n      // 检查e.detail.binding.value，这可能包含组件的props数据\n      if (e.detail.binding && e.detail.binding.value && e.detail.binding.value.cardId !== undefined) {\n        item = parseInt(e.detail.binding.value.cardId);\n      }\n      \n      // 方法2：尝试从vnode上下文获取数据\n      if (item < 0 && e.detail.vnode && e.detail.vnode.componentInstance) {\n        const vm = e.detail.vnode.componentInstance;\n        if (vm.cardId !== undefined) {\n          item = parseInt(vm.cardId);\n        }\n      }\n      \n      // 方法3：使用Vue的数据属性机制\n      if (item < 0 && e.detail.el.dataset.cardId) {\n        item = parseInt(e.detail.el.dataset.cardId);\n      }\n      \n      // 如果仍然无法获取有效ID，返回\n      if (!this.canOperate || item < 0) {\n        return false;\n      }\n      \n      let drag = this.findPos(item);\n      if (drag < 0 && item != this.cards[1][0]) {\n        return;\n      }\n      let data = e.detail.el._moveData;\n      data.offsetLeft = e.detail.el.offsetLeft;\n      data.offsetTop = e.detail.el.offsetTop;\n      this.dragItem = drag;\n      if (this.dragItem < 0) {\n        this.dragItem = 1;\n      }\n      this.dragCard = item;\n      this.enterItem = -99;\n    },\n    async end(e) {\n      let drag = this.dragItem;\n      if (!this.canOperate) {\n        return;\n      }\n      if (drag == 1 && this.dragCard != this.cards[1][0]) {\n        return;\n      }\n      let data = e.detail.el._moveData;\n      let left = data.offsetX + data.offsetLeft;\n      let top = data.offsetY + data.offsetTop;\n      let index = Math.floor((left + 50) / this.cardWidth);\n      if (index >= 0 && index < 4 && top >= 115 && top <= this.height - 75) {\n        index += top <= 330 ? 2 : 6;\n        await this.clickCard(drag).catch(console.log);\n        if (this.sign >= 0 && index != drag && index >= 0) {\n          await this.clickCard(index).catch(console.log);\n        }\n      }\n      this.fresh[drag]++;\n      this.enterItem = -99;\n      this.dragItem = -99;\n      this.dragCard = -99;\n    },\n    enter(item) {\n      console.log(\"enter\", item);\n      // this.enterItem = item\n    },\n    leave(item) {\n      console.log(\"leave\", item);\n      // if (this.enterItem == item) {\n      //   this.enterItem = -99\n      // }\n    },\n    moveEnter(item) {\n      console.log(\"moveEnter\", item, this.dragItem);\n      // if (item == this.dragItem) {\n      //   return\n      // }\n      // this.enterItem = item\n      // this.moveflag = false\n    },\n    move(e) {\n      if (!this.canOperate) {\n        return false;\n      }\n      if (this.dragItem == 1 && this.dragCard != this.cards[1][0]) {\n        return;\n      }\n      let data = e.detail.el._moveData;\n      let left = data.offsetX + data.offsetLeft;\n      let top = data.offsetY + data.offsetTop;\n      let index = Math.floor((left + 50) / this.cardWidth);\n      if (index >= 0 && index < 4 && top >= 115 && top <= this.height - 75) {\n        index += top <= 330 ? 2 : 6;\n        if (this.dragItem != index) this.enterItem = index;\n      } else {\n        this.enterItem = -99;\n      }\n      e.detail.el.style.left = left / 16 + \"rem\";\n      e.detail.el.style.top = top / 16 + \"rem\";\n      if (this.dragItem >= 6) {\n        let index = this.cards[this.dragItem].indexOf(this.dragCard);\n        let j = 0;\n        for (let down of this.$refs.down) {\n          let res = down.$el._cardImageRoot.className.match(\"drag\");\n          if (!res || ++j <= index) {\n            continue;\n          }\n          down.$el._cardImageRoot.style.left = (data.offsetX + data.offsetLeft) / 16 + \"rem\";\n          down.$el._cardImageRoot.style.top =\n            (data.offsetY + data.offsetTop + (j - index - 1) * 30) / 16 + \"rem\";\n        }\n      }\n    },\n    \n    /**\n     * 渲染文本视图 - 显示当前游戏状态\n     * 用于终端交互式游戏\n     */\n    renderTextView() {\n      console.log('\\n╔════════════════════════════════════════════════╗');\n      console.log('║            蜘蛛纸牌 (Spider)                  ║');\n      console.log('╚════════════════════════════════════════════════╝');\n      \n      // 统计信息\n      const totalCards = this.cards.slice(1).reduce((sum, col) => sum + col.length, 0);\n      const deckCards = this.cards[0].length;\n      console.log(`\\n步数: ${this.step} | 牌堆剩余: ${deckCards} 张 | 场上: ${totalCards} 张\\n`);\n      console.log('提示: ← 表示选中的牌');\n      \n      // 创建表格显示\n      console.log('┌──────────────┬──────────────┬──────────────┬──────────────┐');\n      \n      // 第一行：牌堆 + 第1列最后3张牌\n      const col1 = this.cards[1];\n      const deckDisplay = deckCards > 0 ? `🂠 ${deckCards}张` : '(空)';\n      const col1Last3 = col1.slice(0, 3).map((card) => {\n        const cardText = getCardPlaceholderText(card);\n        // const actualIdx = col1.length - 3 + idx;\n        const isSelected = this.sign === card;\n        return `${cardText}${isSelected ? ' ←' : ''}`;\n      });\n      \n      console.log(`│ 牌堆: ${deckDisplay.padEnd(5)} │ ${(col1Last3[0] || \"\").padEnd(12)} │ ${(col1Last3[1] || \"\").padEnd(12)} │ ${(col1Last3[2] || \"\").padEnd(12)} │`);\n      console.log('├──────────────┼──────────────┼──────────────┼──────────────┤');\n      \n      // 第二行：第2-5列（每列显示剩余张数+最后一张牌）\n      const row2Data = [];\n      for (let i = 2; i <= 5; i++) {\n        const col = this.cards[i];\n        if (col.length === 0) {\n          row2Data.push(\"-:\" + this.types[i - 2] + '?');\n        } else {\n          const lastCard = col[col.length - 1];\n          const cardText = getCardPlaceholderText(lastCard);\n          const isSelected = this.sign === lastCard;\n          row2Data.push(`${col.length - 1}:${cardText}${isSelected ? ' ←' : ''}`);\n        }\n      }\n      \n      console.log(`│ ${row2Data[0].padEnd(12)} │ ${row2Data[1].padEnd(12)} │ ${row2Data[2].padEnd(12)} │ ${row2Data[3].padEnd(12)} │`);\n      console.log('├──────────────┼──────────────┼──────────────┼──────────────┤');\n      \n      // 第三行：第6-9列（每列显示总张数+纵向最多5张牌）\n      const row3Data = [];\n      for (let i = 6; i <= 9; i++) {\n        const col = this.cards[i];\n        if (col.length === 0) {\n          row3Data.push(\"\");\n        } else {\n          const cardsDisplay = [];\n          \n          for (let j = 0; j < col.length; j++) {\n            const card = col[j];\n            const cardText = getCardPlaceholderText(card);\n            const isSelected = this.sign === card;\n            cardsDisplay.push(`${j}:${cardText}${isSelected ? ' ←' : ''}`);\n          }\n          \n          row3Data.push(`${cardsDisplay.join('\\n')}`);\n        }\n      }\n      \n      // 处理多行显示，确保对齐\n      const maxLines = Math.max(...row3Data.map(data => data.split('\\n').length));\n      const paddedData = row3Data.map(data => {\n        const lines = data.split('\\n');\n        while (lines.length < maxLines) {\n          lines.push('');\n        }\n        return lines;\n      });\n      \n      for (let lineIdx = 0; lineIdx < maxLines; lineIdx++) {\n        const lineContent = paddedData.map(data => data[lineIdx].padEnd(12));\n        console.log(`│ ${lineContent.join(' │ ')} │`);\n      }\n      \n      console.log('└──────────────┴──────────────┴──────────────┴──────────────┘');\n      \n      return '渲染完成';\n    },\n    \n    /**\n     * 发送自定义按钮到eventBus\n     */\n    sendCustomButtons() {\n      const customButtons = [];\n      \n      // 添加Spider游戏特有的发牌按钮（如果牌堆有牌）\n      if (this.cards[0].length > 0) {\n        customButtons.push({\n          action: 'deal',\n          label: '从牌堆发牌',\n          method: 'clickCard',\n          args: [0],\n          description: '从牌堆中发一张牌到每个列'\n        });\n      }\n      \n      this.sendCustomButtonsToEventBus(customButtons);\n    },\n  },\n    \n    /**\n     * 监听cards变化，更新自定义按钮\n     */\n  watch: {\n    cards: {\n      handler() {\n        this.sendCustomButtons();\n      },\n      deep: true\n    },\n  },\n  computed: {\n    // 保留Spider特有的计算属性\n    height() {\n      return (\n        Math.max(...this.cards.slice(-4).map((cards) => cards.length)) * 30 +\n        480\n      );\n    },\n    cardWidth() {\n      return this.$refs.container ? this.$refs.container.offsetWidth >> 2 : 500;\n    },\n  },\n};\n\n// 使用工厂函数创建增强的Spider组件并导出\nexport default GameComponentPresets.cardGame(Spider, 500);\n","import { render } from \"./Spider.vue?vue&type=template&id=f91447be&scoped=true\"\nimport script from \"./Spider.vue?vue&type=script&lang=js\"\nexport * from \"./Spider.vue?vue&type=script&lang=js\"\n\nimport \"./Spider.vue?vue&type=style&index=0&id=f91447be&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f91447be\"]])\n\nexport default __exports__","<template>\n  <GameLayout\n    v-bind=\"gameLayoutProps\"\n    :container-style=\"{ width: '100%' }\"\n    @undo=\"undo\"\n    @goon=\"goon\"\n    @step=\"stepTwiceFn\"\n    @auto=\"pass\"\n  >\n    <template #game-content>\n      <div class=\"row center\">\n        <div>\n          <div\n            class=\"cardsul center\"\n            style=\"\n              padding-left: 0;\n              margin: 0;\n              width: 100%;\n              max-width: 37.5rem;\n              background-color: #719192;\n              padding: 0.3125rem 0;\n            \"\n          >\n            <div\n              v-for=\"(item, i) in cards1\"\n              :key=\"i\"\n              class=\"m-0 center\"\n              style=\"width: 16%; border-radius: 50%; overflow: hidden\"\n              @click=\"canOperate && clickCard(i)\"\n            >\n              <div\n                class=\"center\"\n                style=\"width: 100%; position: relative\"\n                :style=\"{\n                  backgroundColor:\n                    item < 0\n                      ? 'transparent'\n                      : !cards2[item]\n                        ? '#fff'\n                        : item == sign\n                          ? '#FFB800'\n                          : grades[item] == grade\n                            ? '#01AAED'\n                            : '#5FB878',\n                }\"\n              >\n                <div\n                  class=\"shanshuo abso\"\n                  v-show=\"validBoxes.indexOf(i) >= 0\"\n                  style=\"\n                    width: 100%;\n                    height: 100%;\n                    background-color: #ff5722;\n                    top: 0;\n                    left: 0;\n                  \"\n                ></div>\n                <img\n                  :style=\"{\n                    transform:\n                      cards2[item] && grades[item] != grade\n                        ? 'rotate(180deg)'\n                        : 'rotate(0)',\n                    opacity: item < 0 ? 0 : 100,\n                  }\"\n                  :src=\"\n                    !cards2[item]\n                      ? './static/avatar/logo.webp'\n                      : './static/avatar/' + item + '.webp'\n                  \"\n                  style=\"width: 100%\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <span class=\"m-0 scrore\">{{ lowCount + \" : \" + highCount }}</span>\n      </div>\n    </template>\n  </GameLayout>\n</template>\n\n<script>\nimport GridBattleComponent from \"./Chess.js\";\nexport default GridBattleComponent;\n</script>\n\n<style scoped>\n@import url(\"./sum.css\");\n</style>\n","import { shuffleCards, seededRandom } from \"../utils/help.js\";\nimport { GameComponentPresets } from \"../utils/gameComponentFactory.js\";\n\nlet _modes = [\n  [1, 0],\n  [1, 1],\n  [2, 1],\n  [2, 2],\n  [3, 1],\n  [3, 2],\n  [3, 3],\n];\n\nconst GridBattle = {\n  name: \"GridBattle\",\n  data() {\n    return {\n      title: \"GridBattle\",\n      cards1: [],\n      cards2: [],\n      // 移除arr数组，因为现在由GameStateManager管理历史记录\n      // arr: [],\n      sign: -1,\n      number: 36,\n      grade: -1,\n      modes: [\n        0, 1, 3, 6, 10, 15, 2, 5, 7, 13, 18, 21, 4, 8, 14, 17, 24, 27, 9, 12,\n        20, 25, 26, 31, 11, 19, 23, 29, 30, 35, 16, 22, 28, 32, 34, 33,\n      ],\n      grades: [\n        1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1,\n        1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1,\n      ],\n    };\n  },\n  computed: {\n    validBoxes() {\n      return this.getValidBoxes(this.sign);\n    },\n    lowCount() {\n      return this.cards1.filter((item) => this.grades[item] === 0).length;\n    },\n    highCount() {\n      return this.cards1.filter((item) => this.grades[item] === 1).length;\n    },\n  },\n  // 初始化\n  methods: {\n    init() {\n      this.sign = -1;\n      this.grade = -1;\n      this.cards1.splice(0);\n      this.cards2.splice(0);\n      let cards = this.cards1;\n      // return cards.splice(0, 0, ...this.modes)\n      for (let i = 0; i < this.number; i++) {\n        cards.push(i);\n        this.cards2.push(false); // 初始化cards2为36个false\n      }\n      shuffleCards(cards, this.number);\n    },\n    // 记录移动操作\n    recordMove(from, to, card, sign, signIndex) {\n      this.gameManager.recordOperation({\n        type: \"move\",\n        from: from,\n        to: to,\n        card: card,\n        sign: sign,\n        signIndex: signIndex,\n        timestamp: Date.now(),\n      });\n    },\n\n    // 记录翻转操作\n    recordFlip(card) {\n      this.gameManager.recordOperation({\n        type: \"flip\",\n        card: card,\n        timestamp: Date.now(),\n      });\n    },\n\n    // 处理撤销操作\n    handleUndo(operation) {\n      // 根据操作类型执行相应的撤销逻辑\n      switch (operation.type) {\n        case \"move\":\n          // 撤销移动操作\n          this.cards1.splice(operation.signIndex, 1, operation.sign);\n          this.cards1.splice(\n            operation.to,\n            1,\n            operation.card >= 0 ? operation.card : -1,\n          );\n          break;\n        case \"flip\":\n          // 撤销翻转操作\n          this.cards2[operation.card] = false; // 直接赋值而不是splice\n          break;\n      }\n    },\n\n    // 重写undo方法\n    undo() {\n      // 原代码中每执行一次undo会弹出两个操作，这里也保持一致\n      this.gameManager.undo();\n      this.gameManager.undo();\n    },\n\n    // 重写clickCard方法，使用GameStateManager记录操作\n    async clickCard(i, isAuto) {\n      let card = this.cards1[i];\n      if (this.grade < 0) {\n        this.grade = this.grades[card];\n      }\n      if (card >= 0 && !this.cards2[card]) {\n        this.cards2[card] = true; // 直接赋值而不是splice\n        this.recordFlip(card); // 使用GameStateManager记录操作\n        this.sign = -1;\n        if (!isAuto) {\n          this.gameManager.step(async () => {\n            await this.wait();\n            await this.stepFn();\n          });\n        }\n        return;\n      }\n      let grade = this.step % 2 == 0 ? this.grade : !this.grade;\n      if (this.sign >= 0 && this.grades[this.sign] != grade) {\n        this.sign =\n          card != this.sign && card >= 0 && this.grades[card] != grade\n            ? card\n            : -1;\n        return;\n      }\n      if (this.sign >= 0 && this.grades[this.sign] == grade) {\n        if (card >= 0 && this.grades[card] == grade) {\n          this.sign = this.sign == card ? -1 : card;\n          return;\n        }\n        if (this.validBoxes.indexOf(i) >= 0) {\n          let signIndex = this.cards1.indexOf(this.sign);\n          this.cards1.splice(signIndex, 1, -1);\n          this.cards1.splice(i, 1, this.sign);\n          this.recordMove(signIndex, i, card, this.sign, signIndex); // 使用GameStateManager记录操作\n          this.sign = -1;\n          if (card >= 0) {\n            if (this.lowCount <= 0) {\n              if (this.grade == 1) {\n                this.gameManager.setWin();\n              } else {\n                this.gameManager.setLose();\n              }\n            }\n            if (this.highCount <= 0) {\n              if (this.grade == 0) {\n                this.gameManager.setWin();\n              } else {\n                this.gameManager.setLose();\n              }\n            }\n            if (this.lowCount == 1 && this.highCount == 1) {\n              this.gameManager.setDraw();\n            }\n          }\n          if (!isAuto) {\n            this.gameManager.step(async () => {\n              await this.wait();\n              await this.stepFn();\n            });\n          }\n          return;\n        }\n      }\n      this.sign = card;\n    },\n\n    // 重写stepTwiceFn方法\n    async stepTwiceFn() {\n      await this.gameManager.step(async () => {\n        await this.stepFn();\n        await this.wait();\n        await this.stepFn();\n      });\n    },\n    getValidBoxes(item) {\n      let arr = [];\n      // let item = this.cards1[index];\n      let index = this.cards1.indexOf(item);\n      if (item < 0 || index < 0) {\n        return arr;\n      }\n      let mode = this.modes.indexOf(item);\n      let h = _modes[Math.floor(mode / 6)],\n        v = _modes[mode % 6];\n      if (index + v[0] * 6 < 36 && (index % 6) + v[1] < 6)\n        arr.push(index + v[0] * 6 + v[1]);\n      if (index - v[0] * 6 >= 0 && (index % 6) + v[1] < 6)\n        arr.push(index - v[0] * 6 + v[1]);\n      if (index + v[0] * 6 < 36 && (index % 6) - v[1] >= 0)\n        arr.push(index + v[0] * 6 - v[1]);\n      if (index - v[0] * 6 >= 0 && (index % 6) - v[1] >= 0)\n        arr.push(index - v[0] * 6 - v[1]);\n      if (index + h[1] * 6 < 36 && (index % 6) + h[0] < 6)\n        arr.push(index + h[1] * 6 + h[0]);\n      if (index - h[1] * 6 >= 0 && (index % 6) + h[0] < 6)\n        arr.push(index - h[1] * 6 + h[0]);\n      if (index + h[1] * 6 < 36 && (index % 6) - h[0] >= 0)\n        arr.push(index + h[1] * 6 - h[0]);\n      if (index - h[1] * 6 >= 0 && (index % 6) - h[0] >= 0)\n        arr.push(index - h[1] * 6 - h[0]);\n      return arr;\n    },\n    async stepFn() {\n      // 1.挪2.送3.翻4.翻吃5.坏翻6.中翻7.友8.躲9.敌10.吃\n      let temp = [];\n      let hide = [],\n        friends = [];\n      let grade = this.step % 2 == 0 ? this.grade : !this.grade;\n      let _this = this;\n      let moveFn = async function (from, to) {\n        _this.sign = -1;\n        await _this.clickCard(from, true);\n        await _this.wait();\n        await _this.clickCard(to, true);\n      };\n      for (let i = 0; i < this.cards1.length; i++) {\n        let item = this.cards1[i];\n        if (item < 0) {\n          temp[i] = temp[i] || 1;\n          continue;\n        }\n        if (!this.cards2[item]) {\n          temp[i] = temp[i] || 3;\n          hide.push(i);\n          continue;\n        }\n        if (this.grades[item] == grade) {\n          temp[i] = 7;\n          friends.push(i);\n          let boxes = this.getValidBoxes(item);\n          for (let b of boxes) {\n            let c = this.cards1[b];\n            if (c < 0) {\n              continue;\n            }\n            if (!this.cards2[c]) {\n              temp[b] = temp[b] == 5 || temp[b] == 6 ? 6 : 4;\n              continue;\n            }\n            if (this.grades[c] != grade) {\n              return await moveFn(i, b);\n            }\n          }\n          continue;\n        }\n        temp[i] = 9;\n        let boxes = this.getValidBoxes(item);\n        for (let b of boxes) {\n          let c = this.cards1[b];\n          if (c < 0) {\n            temp[b] = 2;\n            continue;\n          }\n          if (!this.cards2[c]) {\n            temp[b] = temp[b] == 4 || temp[b] == 6 ? 6 : 5;\n            continue;\n          }\n          if (this.grades[c] == grade) {\n            temp[b] = 8;\n          }\n        }\n      }\n      // 1.吃2.躲3.翻吃4.中翻5.翻6.挪7.坏翻8.送\n      for (let f of friends) {\n        let t = temp[f];\n        if (t == 8) {\n          let c = this.cards1[f];\n          let boxes = this.getValidBoxes(c);\n          for (let box of boxes) {\n            if (temp[box] == 1) {\n              return await moveFn(f, box);\n            }\n          }\n        }\n      }\n      let best = -1;\n      let worst = -1;\n      for (let i = 0; i < hide.length; i++) {\n        let h = hide[i];\n        let t = temp[h];\n        if (t == 4) {\n          return await this.clickCard(h, true);\n        }\n        if (t == 5) {\n          worst = h;\n          hide.splice(i, 1);\n          i--;\n        }\n        if (t == 6) {\n          best = h;\n        }\n      }\n      if (best >= 0) {\n        return await this.clickCard(best, true);\n      }\n      if (hide.length > 0) {\n        let random = Math.floor(seededRandom() * hide.length);\n        return await this.clickCard(hide[random], true);\n      }\n      let suicide = false;\n      let road = [];\n      let protectedRoad = [];\n      // 预先收集所有友方棋子可以到达的空位\n      let friendsReach = {};\n      for (let f of friends) {\n        let c = this.cards1[f];\n        let boxes = this.getValidBoxes(c);\n        for (let box of boxes) {\n          if (temp[box] == 1) {\n            friendsReach[box] = (friendsReach[box] || 0) + 1;\n          }\n        }\n      }\n      // 收集路径，区分受保护和普通路径\n      for (let f of friends) {\n        let c = this.cards1[f];\n        let boxes = this.getValidBoxes(c);\n        for (let box of boxes) {\n          if (temp[box] == 1) {\n            if (friendsReach[box] >= 2) {\n              protectedRoad.push([f, box]);\n            } else {\n              road.push([f, box]);\n            }\n          }\n          if (temp[box] == 2) {\n            suicide = [f, box];\n          }\n        }\n      }\n      // 优先移动到受保护的位置\n      if (protectedRoad.length > 0) {\n        let random = Math.floor(seededRandom() * protectedRoad.length);\n        return await moveFn(protectedRoad[random][0], protectedRoad[random][1]);\n      }\n      // 其次移动到普通空位\n      if (road.length > 0) {\n        let random = Math.floor(seededRandom() * road.length);\n        return await moveFn(road[random][0], road[random][1]);\n      }\n      if (worst >= 0) {\n        return await this.clickCard(worst, true);\n      }\n      if (suicide) {\n        return await moveFn(suicide[0], suicide[1]);\n      } else {\n        throw new Error(\"unkown error\");\n      }\n    },\n    \n    /**\n     * 渲染文本视图 - 显示当前游戏状态\n     * 用于终端交互式游戏\n     */\n    renderTextView() {\n      console.log('\\n╔════════════════════════════════════════════════╗');\n      console.log('║           国际象棋 (GridBattle)               ║');\n      console.log('╚════════════════════════════════════════════════╝');\n      console.log(`\\n步数: ${this.step}`);\n      console.log(`高子: ${this.highCount} | 低子: ${this.lowCount}\\n`);\n      \n      console.log('\\n图例:');\n      console.log('  ? = 未翻开  - = 空位置  H = 高子  L = 低子  [H/L] = 已选中');\n      \n      if (this.sign >= 0) {\n        const row = Math.floor(this.sign / 6);\n        const col = this.sign % 6;\n        console.log(`\\n当前选中: (${row},${col})`);\n        \n        const validMoves = this.validBoxes;\n        if (validMoves && validMoves.length > 0) {\n          const moves = validMoves.map(idx => {\n            const r = Math.floor(idx / 6);\n            const c = idx % 6;\n            return `(${r},${c})`;\n          }).join(', ');\n          console.log(`可移动到: ${moves}`);\n        }\n      }\n      \n      // 显示6x6棋盘\n      console.log('    0   1   2   3   4   5');\n      console.log('  ┌───┬───┬───┬───┬───┬───┐');\n      \n      for (let row = 0; row < 6; row++) {\n        let line = `${row} │`;\n        for (let col = 0; col < 6; col++) {\n          const idx = row * 6 + col;\n          const card = this.cards1[idx];\n          \n          if (this.cards2[card]) {\n            // 已翻开\n            const grade = this.grades[card];\n            const symbol = grade === 1 ? ' H ' : ' L '; // H=高子，L=低子\n            const isSelected = idx === this.sign;\n            line += isSelected ? `[${symbol.trim()}]` : symbol;\n          } else if (this.cards1[idx] >= 0) {\n            // 未翻开\n            line += ' ? ';\n          } else {\n            // 空位置\n            line += ' - ';\n          }\n          line += '│';\n        }\n        console.log(line);\n        \n        if (row < 5) {\n          console.log('  ├───┼───┼───┼───┼───┼───┤');\n        }\n      }\n      console.log('  └───┴───┴───┴───┴───┴───┘');\n      \n      return '渲染完成';\n    },\n    \n    /**\n     * 获取当前可用的操作列表\n     * 用于终端交互式游戏\n     * 使用工厂函数中统一实现的方法\n     */\n  },\n};\n\n// 使用工厂函数创建增强的GridBattle组件并导出\nexport default GameComponentPresets.strategyGame(GridBattle, 1200);\n","import { render } from \"./Chess.vue?vue&type=template&id=f1b2a642&scoped=true\"\nimport script from \"./Chess.vue?vue&type=script&lang=js\"\nexport * from \"./Chess.vue?vue&type=script&lang=js\"\n\nimport \"./Chess.vue?vue&type=style&index=0&id=f1b2a642&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f1b2a642\"]])\n\nexport default __exports__","import { createRouter, createWebHashHistory } from \"vue-router\";\nimport Sum from \"@/components/sum.vue\";\nimport Fish from \"@/components/fish.vue\";\nimport point24 from \"@/components/point24.vue\";\nimport Month from \"@/components/month.vue\";\nimport Tortoise from \"@/components/Tortoise.vue\";\nimport Sort from \"@/components/Sort.vue\";\nimport Pairs from \"@/components/Pairs.vue\";\nimport Spider from \"@/components/Spider.vue\";\nimport GridBattle from \"@/components/Chess.vue\";\n\nconst routes = [\n  {\n    path: \"/\",\n    redirect: \"/month\",\n  },\n  {\n    path: \"/month\",\n    component: Month,\n  },\n  {\n    path: \"/fish\",\n    component: Fish,\n  },\n  {\n    path: \"/point24\",\n    component: point24,\n  },\n  {\n    path: \"/blackjack\",\n    component: Sum,\n  },\n  {\n    path: \"/Tortoise\",\n    component: Tortoise,\n  },\n  {\n    path: \"/Sort\",\n    component: Sort,\n  },\n  {\n    path: \"/Pairs\",\n    component: Pairs,\n  },\n  {\n    path: \"/Spider\",\n    component: Spider,\n  },\n  {\n    path: \"/GridBattle\",\n    component: GridBattle,\n  },\n];\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes,\n});\n\nexport default router;\n","import { createStore } from \"vuex\";\n\nexport default createStore({\n  state: {},\n  mutations: {},\n  actions: {},\n  modules: {},\n});\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport store from \"./store\";\n// import { preload } from \"./utils/help.js\";\n\n// preload();\n\nconst app = createApp(App);\napp.use(router);\napp.use(store);\napp.mount(\"#app\");\n","/**\n * 游戏设置管理器\n * 统一管理游戏延迟设置的存储和读取\n */\n\nclass GameSettingsManager {\n  constructor() {\n    this.listeners = [];\n  }\n\n  /**\n   * 获取指定游戏的延迟设置\n   * @param {string} gameName - 游戏名称\n   * @returns {number} 延迟时间（毫秒）\n   */\n  getDelay(gameName) {\n    // 优先查找游戏特定设置\n    const gameDelay = localStorage.getItem(`game-delay-${gameName}`);\n    if (gameDelay) {\n      return parseInt(gameDelay);\n    }\n\n    // 其次查找全局设置\n    const globalDelay = localStorage.getItem('game-global-delay');\n    if (globalDelay) {\n      return parseInt(globalDelay);\n    }\n\n    // 返回默认值\n    return 500;\n  }\n\n  /**\n   * 保存延迟设置\n   * @param {string} gameName - 游戏名称（如果为空则为全局设置）\n   * @param {number} delay - 延迟时间（毫秒）\n   * @param {boolean} applyToAll - 是否应用到所有游戏\n   */\n  saveDelay(gameName, delay, applyToAll = false) {\n    if (applyToAll) {\n      // 应用到全部游戏\n      localStorage.setItem('game-global-delay', delay.toString());\n      // 清除所有游戏特定的设置\n      const keys = Object.keys(localStorage);\n      keys.forEach(key => {\n        if (key.startsWith('game-delay-') && key !== 'game-global-delay') {\n          localStorage.removeItem(key);\n        }\n      });\n    } else {\n      // 仅应用到当前游戏\n      if (gameName) {\n        localStorage.setItem(`game-delay-${gameName}`, delay.toString());\n      }\n    }\n\n    // 通知所有监听器\n    this.notifyListeners(delay, applyToAll, gameName);\n  }\n\n  reset() {\n    localStorage.clear();\n  }\n\n  /**\n   * 添加设置变化监听器\n   * @param {Function} callback - 回调函数\n   */\n  addListener(callback) {\n    this.listeners.push(callback);\n  }\n\n  /**\n   * 移除设置变化监听器\n   * @param {Function} callback - 回调函数\n   */\n  removeListener(callback) {\n    const index = this.listeners.indexOf(callback);\n    if (index > -1) {\n      this.listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * 通知所有监听器\n   * @param {number} delay - 延迟时间\n   * @param {boolean} applyToAll - 是否应用到所有游戏\n   * @param {string} gameName - 游戏名称\n   */\n  notifyListeners(delay, applyToAll, gameName) {\n    this.listeners.forEach(callback => {\n      try {\n        callback({ delay, applyToAll, gameName });\n      } catch (error) {\n        console.error('Error in settings listener:', error);\n      }\n    });\n  }\n}\n\n// 导出单例\nexport default new GameSettingsManager();\n","/**\n * 卡片工具函数\n * 提供卡片相关的常量和工具函数\n */\n\n// 卡片花色\nexport const CARD_TYPES = [\"♥\", \"♠\", \"♦\", \"♣\"];\n\n// 卡片点数\nexport const CARD_POINTS = [\"A\", 2, 3, 4, 5, 6, 7, 8, 9, 10, \"J\", \"Q\", \"K\", \"JOKER\"];\n\n/**\n * 计算卡片占位符文本\n * @param {number|string} cardId - 卡片ID\n * @param {string[]} types - 卡片花色数组\n * @param {Array<string|number>} points - 卡片点数数组\n * @returns {string} 卡片占位符文本\n */\nexport function getCardPlaceholderText(cardId, types = CARD_TYPES, points = CARD_POINTS) {\n  if (typeof cardId === 'number') {\n    const suit = cardId < 52 ? types[cardId % 4] : \"\";\n    const point = points[cardId >> 2];\n    return `${suit}${point}`;\n  }\n  return '';\n}\n\n/**\n * 获取卡片图像URL\n * @param {number|string} cardId - 卡片ID\n * @returns {string} 卡片图像URL\n */\nexport function getCardImageSrc(cardId) {\n  return `./static/${cardId}.webp`;\n}\n\n/**\n * 导出默认对象，方便一次性导入\n */\nexport default {\n  CARD_TYPES,\n  CARD_POINTS,\n  getCardPlaceholderText,\n  getCardImageSrc\n};","// 简单的事件总线实现\nclass EventBus {\n  constructor() {\n    this.events = {};\n  }\n\n  // 订阅事件\n  on(event, callback) {\n    if (!this.events[event]) {\n      this.events[event] = [];\n    }\n    this.events[event].push(callback);\n  }\n\n  // 取消订阅\n  off(event, callback) {\n    if (!this.events[event]) return;\n    \n    if (callback) {\n      // 移除特定回调\n      this.events[event] = this.events[event].filter(cb => cb !== callback);\n    } else {\n      // 移除所有回调\n      delete this.events[event];\n    }\n  }\n\n  // 发布事件\n  emit(event, ...args) {\n    if (!this.events[event]) return;\n    \n    this.events[event].forEach(callback => {\n      callback(...args);\n    });\n  }\n}\n\n// 导出单例实例\nexport default new EventBus();","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"63\":\"18d20761\",\"82\":\"d355a5cf\",\"279\":\"189bb8a8\",\"519\":\"dade4cd8\",\"526\":\"5b1344ba\",\"955\":\"4a5d1968\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"css/\" + chunkId + \".\" + {\"63\":\"00644734\",\"82\":\"0ec60025\",\"279\":\"94d13aed\",\"519\":\"609867d9\",\"526\":\"b5aab8a0\",\"955\":\"8418e09e\"}[chunkId] + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"tsubaki-game-library:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"\";","if (typeof document === \"undefined\") return;\nvar createStylesheet = function(chunkId, fullhref, oldTag, resolve, reject) {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tif (__webpack_require__.nc) {\n\t\tlinkTag.nonce = __webpack_require__.nc;\n\t}\n\tvar onLinkComplete = function(event) {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && event.type;\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + errorType + \": \" + realHref + \")\");\n\t\t\terr.name = \"ChunkLoadError\";\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tif (linkTag.parentNode) linkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\n\tif (oldTag) {\n\t\toldTag.parentNode.insertBefore(linkTag, oldTag.nextSibling);\n\t} else {\n\t\tdocument.head.appendChild(linkTag);\n\t}\n\treturn linkTag;\n};\nvar findStylesheet = function(href, fullhref) {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = function(chunkId) {\n\treturn new Promise(function(resolve, reject) {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, null, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.miniCss = function(chunkId, promises) {\n\tvar cssChunks = {\"63\":1,\"82\":1,\"279\":1,\"519\":1,\"526\":1,\"955\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(function() {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, function(e) {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr\n\n// no prefetching\n\n// no preloaded","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktsubaki_game_library\"] = self[\"webpackChunktsubaki_game_library\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(269); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_router_view","script","__exports__","render","class","style","_createBlock","_component_GameLayout","_mergeProps","_ctx","gameLayoutProps","text","action","callback","goon","backgroundColor","onGoon","_withCtx","_createElementVNode","src","_hoisted_2","_toDisplayString","score1","_hoisted_3","_hoisted_4","_Fragment","_renderList","arr1","item","_component_CardImage","key","_hoisted_5","_hoisted_6","arr2","_hoisted_7","_hoisted_8","score2","_component_GameControls","buttons","stepDisabled","autoDisabled","onHitBtn","handleHitBtn","onPassBtn","pass","GameStateManager","constructor","options","this","hitflag","winflag","loseflag","drawflag","history","isAutoRunning","autoInterval","autoStepDelay","maxSteps","_listeners","init","stopAuto","emit","recordOperation","operation","backword","unshift","push","undo","length","pop","getStepCount","canUndo","startAuto","stepCallback","console","log","stepCount","wait","error","clearInterval","setAutoStepDelay","delay","getAutoStepDelay","actualDelay","Promise","resolve","setTimeout","step","setWin","setLose","setDraw","reset","resetCallback","on","event","listener","off","index","indexOf","splice","data","forEach","getState","setState","state","Object","assign","getDefaultComputedProperties","manager","gameManager","undoDisabled","restartDisabled","canOperate","gameState","shuffleCards","cards","num","rand","tmp","last","i","Math","floor","seededRandom","equalArray","checkDeadForeach","array","newest","j","count","join","values","s","setSeed","seed","gameRules","month","fish","point24","Tortoise","Sort","Pairs","Spider","GridBattle","blackjack","GameResultModal","GameControls","GameLayout","CardImage","createEnhancedGameComponent","baseComponent","computed","methods","hasUndo","hasRestart","customInit","customCleanup","buttonDescriptions","auto","submit","hint","confirm","cancel","pause","resume","components","baseData","call","types","CARD_TYPES","point","CARD_POINTS","gameControlsButtons","created","Date","now","loadDelaySettings","_settingsChangeHandler","handleSettingsChanged","bind","gameSettingsManager","addListener","handleUndo","renderTextView","handleHistoryUpdate","autoCalc","_controlsCreatedHandler","handleControlsCreated","_controlsButtonsUpdatedHandler","handleControlsButtonsUpdated","_controlsUnmountedHandler","handleControlsUnmounted","eventBus","beforeUnmount","removeListener","gameControlsConfig","showUndo","showRestart","currentGame","$route","path","substring","title","gameRule","collectedGameButtons","uniqueButtons","Map","Array","isArray","button","set","from","getCardPlaceholderText","async","seen","WeakMap","pathStack","replacer","value","startsWith","has","currentPath","beforeState","JSON","stringify","$data","stepFn","afterState","warn","getDelay","settings","applyToAll","gameName","instanceId","getAvailableActions","actions","actionToMethodMap","methodName","label","toUpperCase","method","args","disabled","description","defaultButtons","filter","a","sendCustomButtonsToEventBus","map","undefined","cleanupHandler","originalBeforeUnmount","window","name","template","props","defineAsyncComponent","GameComponentPresets","cardGame","simpleGame","includes","hit","arr","cards2","pairGame","_timer","puzzleGame","showHint","strategyGame","difficulty","setDifficulty","level","actionGame","score","combo","addScore","points","resetCombo","customGame","config","features","customLogic","feature","gameTime","_gameTimer","startTimer","setInterval","stopTimer","highScore","parseInt","localStorage","getItem","updateScore","setItem","toString","delays","easy","normal","hard","Sum","cardsChg","number","component","refillCards","currentCard","shift","getScore","player","flag","remainingCards","playerScore","playerCards","c","dealerScore","dealerCards","SumComponent","onStep","onAuto","_component_message","show1","_cache","_normalizeStyle","opacity","diff1","diff2","diff3","score3","diff4","_hoisted_9","score4","_hoisted_10","_hoisted_11","_normalizeClass","ssArr","flyin1","flyin2","flyout1","flyout2","message","Fish","cards1","cards3","cards4","time","handle","findIndex","cardCounts","padStart","cardTexts","watch","val","old","FishComponent","style1","onUndo","_component_point24card","card","choose","sign","onClick","$event","clickSign","signs","calc","toFixed","clickCard","point24card","opts","process","nums","len","aim","numij","k","abs","fns","b","Number","isFinite","num1","num2","first","Point24","type","timestamp","combined","left","right","Error","temp","index1","index2","result","f","temp00","temp02","l","r","formulaToString","formula","operator","operatorSymbol","leftStr","rightStr","String","formulaStr","h","idx","Point24Component","class1","visibleCards","cardId","Month","months","count13","MonthComponent","originalItem","shanshuo","check","done","next","top","up","next_i","max","fn","m","d","nextCards","signIndex","signCard","CANVAS_ROWS","CANVAS_COLS","canvas","fill","CARD_ROWS","CARD_COLS","LAYOUT_WIDTH","LAYOUT_HEIGHT","activeCards","posIdx","mapInfo","canClick","isSelected","parseFloat","zIndex","cardText","sort","startCol","round","startRow","safeStartRow","min","safeStartCol","row","col","canvasRow","canvasCol","char","borderedCanvas","repeat","TortoiseComponent","n","height","canMoveCard","hide","getCurrentCandidateCard","createCandidate","targetCard","slotIndex","context","candidatePriority","t","currentTargetIdx","ruleBasedScore","currentCandidate","_getters","slotPriority","excludeReason","_feature2","matchNextCard","adjacentEmptyCount","columnEmptyCount","_deep","deep","_winProbability","simulatedCards","slotId","estimateWinProbability","_diff","_feature0","_feature1","_feature3","_feature4","_feature5","countEmptyInColumn","_feature6","countEmptyAbove","_feature7","countEmptyBelow","_feature8","_feature9","_feature10","_feature11","countCardsAbove","_feature12","countCorrectBelow","_feature13","countSameRankCandidates","_feature14","countPossibleMoves","_feature15","calculateEmptyEntropy","_feature16","countRestoredCards","_feature17","matchMode","_feature18","_feature19","_feature20","isBetterCandidate","candidateA","candidateB","valueA","valueB","gameEvaluationMethods","calculateRuleBasedPriority","slotInfo","candidateCard","candidateIdx","slotPrevCard","colSize","slotRow","candidateCol","candidateRow","slotPrevRank","candidateRank","candidateSuit","candidateGroup","candidateScore","prevPosInCandidateCol","prevCardInCandidateCol","prevRankInCandidateCol","prevSuitInCandidateCol","prevGroupInCandidateCol","matchNextCardScore","nextPosInCandidateCol","nextCardInCandidateCol","nextRankInCandidateCol","nextSuitInCandidateCol","nextGroupInCandidateCol","colStart","compareRuleBasedPriority","scoreA","scoreB","colIdx","colEnd","pos","slotIdx","cRank","cSuit","expectedRank","slot","prevCard","prevRank","targetRank","cardGroup","suit","emptyPerCol","totalEmpty","entropy","p","log2","cards1Array","card_group","cardIdx","restoredCount","rank","targetGroup","expectedPosition","allBelowCorrect","checkRank","checkPos","cardAtPos","cardAtPosRank","cardAtPosSuit","cardAtPosGroup","totalCols","totalScore","maxScore","rowScore","evaluateRowScore","blockPenalty","calculateBlockPenalty","baseScore","finalScore","emptySlotsAbove","countEmptySlotsAbove","cardRank","cardSuit","expectedGroup","checkRowBelowCorrect","checkRow","penalty","upperCard","upperRank","possibleMoves","sign_index","candidateIntervals","currentCandidates","$nextTick","updateAllCandidateCycling","beforeDestroy","keys","stopCandidateCycling","startCandidateCycling","getCandidateCardsForSlot","candidates","findAllCardsByRankOffset","currentIndex","calculateStateHash","isStateHashRepeated","hash","find","record","stateHash","recordMove","to","executeMove","cardToMove","targetEmptyIndex","cardToMoveIndex","emptySlot","findNextCard","updateN","errorState","findPrevCard","document","scrollTop","wrapper","querySelector","documentElement","body","evaluateCandidateScore","candidate","selectBestCandidate","bestScore","bestIdx","findCardByRankOffset","offset","condition","returnAll","target_rank","target_card","nextIdx","over","prior","slotsToResetPriority","priority","_in","able","bestCard","dead","candidatePriorities","prevFn","prev_c","accumulatedPriority","maxPriority","next_idx","subPriority","get","nextFn","next_c","emptySlotId","card_at_n","prevCandidates","prevCandidate","candidatesWithPriority","tempCards","simulatedHash","allCandidates","ind","road","bestCandidate","candidateInfo","allPrioritiesZero","validSlotCount","setMatchMode","mode","getMatchModeDescription","descriptions","targetSlotCard","targetSlot","colWidth","header","headerRow","separator","footer","slice","rowStr","cellContent","highlight","emptySlotIndex","prevCardIndex","emptyLabel","firstCandidate","candidateText","canMove","isTarget","padding","leftPad","rightPad","sendCustomButtons","nextMode","customButtons","handler","SortComponent","sign2","gameOver","matched","cols","rows","line","position","isFlipped","isSeen","prefix","padEnd","PairsComponent","calss","ref","drag","dragItem","turn","fresh","dragCard","enterItem","start","end","move","color","onMouseenter","enter","onTouchenter","onMouseleave","leave","onTouchleave","getPosition","e","isTouch","touches","clientX","clientY","updateMoveData","el","_moveData","offsetX","startPosition","offsetY","prevent","bubbles","cancelable","preventDefault","stopPropagation","detail","dispatchEvent","CustomEvent","listenEvents","events","handles","addEventListener","mounted","binding","vnode","_isInitMove","page","modifiers","isMove","_start","removeEventListener","_end","_move","passive","install","Vue","directive","directives","setupGameStateListeners","moveEnter","$refs","middleBox","downBox","middleEnters","downEnters","middle","down","$forceUpdate","findPos","addAndCheck","res","checkDown","up1","up2","pos1","pos2","top1","top2","checkUp","checkMove","skipCheck","addCard","lock","add","componentInstance","vm","dataset","offsetLeft","offsetTop","cardWidth","catch","$el","_cardImageRoot","className","match","totalCards","reduce","sum","deckCards","col1","deckDisplay","col1Last3","row2Data","lastCard","row3Data","cardsDisplay","maxLines","split","paddedData","lines","lineIdx","lineContent","container","offsetWidth","SpiderComponent","width","stepTwiceFn","grades","grade","validBoxes","lowCount","highCount","_modes","modes","getValidBoxes","recordFlip","isAuto","v","friends","_this","moveFn","boxes","box","best","worst","random","suicide","protectedRoad","friendsReach","validMoves","moves","symbol","trim","routes","redirect","router","createRouter","createWebHashHistory","createStore","mutations","modules","app","createApp","App","use","store","mount","GameSettingsManager","listeners","gameDelay","globalDelay","saveDelay","removeItem","notifyListeners","clear","getCardImageSrc","EventBus","cb","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","deferred","O","chunkIds","notFulfilled","Infinity","fulfilled","every","getter","__esModule","definition","o","defineProperty","enumerable","chunkId","all","promises","u","miniCssF","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","url","needAttach","scripts","getElementsByTagName","getAttribute","createElement","charset","nc","setAttribute","onScriptComplete","prev","onerror","onload","clearTimeout","timeout","doneFns","parentNode","removeChild","target","head","appendChild","Symbol","toStringTag","createStylesheet","fullhref","oldTag","reject","linkTag","rel","nonce","onLinkComplete","errorType","realHref","href","err","code","request","insertBefore","nextSibling","findStylesheet","existingLinkTags","tag","dataHref","existingStyleTags","loadStylesheet","installedCssChunks","miniCss","cssChunks","then","installedChunks","installedChunkData","promise","loadingEnded","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}